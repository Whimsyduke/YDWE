[R2I]
title = "Convert Real To Integer"
description = "Integer(${Real})"
comment =""
category = TC_CONV
returns = integer
[[.args]]
type = real
default = "GetUnitStateSwap"

[S2I]
title = "Convert String To Integer"
description = "Integer(${String})"
comment =""
category = TC_CONV
returns = integer
[[.args]]
type = string
default = "GetEventPlayerChatString"

[I2R]
title = "Convert Integer To Real"
description = "Real(${Integer})"
comment =""
category = TC_CONV
returns = real
[[.args]]
type = integer
default = "GetUnitPointValueByType"

[S2R]
title = "Convert String To Real"
description = "Real(${String})"
comment =""
category = TC_CONV
returns = real
[[.args]]
type = string
default = "GetEventPlayerChatString"

[Deg2Rad]
title = "Convert Degrees To Radians"
description = "Radians(${Degrees})"
comment =""
category = TC_CONV
returns = radian
[[.args]]
type = degree
default = "0"

[Rad2Deg]
title = "Convert Radians To Degrees"
description = "Degrees(${Radians})"
comment =""
category = TC_CONV
returns = degree
[[.args]]
type = radian
default = "0"

[YDWEDeg2R]
title = "YDWE Convert Degrees To Real"
description = "Real ( ${Degrees})"
comment = ""
category = TC_CONV
returns = real
[[.args]]
type = degree

[YDWERad2R]
title = "YDWE Convert Radians To Real"
description = "Real ( ${Radians})"
comment = ""
category = TC_CONV
returns = real
[[.args]]
type = radian

[YDWER2Deg]
title = "YDWE Convert Real To Degree"
description = "Degree ( ${Real})"
comment = ""
category = TC_CONV
returns = degree
[[.args]]
type = real

[YDWER2Rad]
title = "YDWE Convert Real To Radians"
description = "Radians ( ${Real})"
comment = ""
category = TC_CONV
returns = radian
[[.args]]
type = real

[I2S]
title = "Convert Integer To String"
description = "String(${Integer})"
comment =""
category = TC_CONV
returns = string
[[.args]]
type = integer
default = "GetConvertedPlayerId"

[R2S]
title = "Convert Real To String"
description = "String(${Real})"
comment =""
category = TC_CONV
returns = string
[[.args]]
type = real
default = "GetUnitStateSwap"

[R2SW]
title = "Convert Real To Formatted String"
description = "String(${Real}, ${Width}, ${Precision})"
comment = "Examples:  String(1.234, 7, 2) = ''   1.23''.  String(1.234, 2, 5) = ''1.23400''."
category = TC_CONV
returns = string
[[.args]]
type = real
default = "GetUnitStateSwap"
[[.args]]
type = integer
default = "1"
min = 0
[[.args]]
type = integer
default = "2"
min = 0

[OffsetLocation]
title = "Point With Offset"
description = "${Point} offset by (${X}, ${Y})"
comment = "The offset values are (X, Y)."
category = TC_LOCATION
returns = location
[[.args]]
type = location
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[PolarProjectionBJ]
title = "Point With Polar Offset"
description = "${Point} offset by ${Distance} towards ${Angle} degrees"
comment =""
category = TC_LOCATION
returns = location
[[.args]]
type = location
[[.args]]
type = real
default = "256"
[[.args]]
type = degree
default = "0"

[DistanceBetweenPoints]
title = "Distance Between Points"
description = "Distance between ${Point} and ${Point}"
comment = "Returns the Euclidean distance between two points, ignoring height."
category = TC_LOCATION
returns = real
[[.args]]
type = location
[[.args]]
type = location

[AngleBetweenPoints]
title = "Angle Between Points"
description = "Angle from ${Point} to ${Point}"
comment = "Returns the angle of a line from one point to another."
category = TC_LOCATION
returns = degree
[[.args]]
type = location
[[.args]]
type = location

[YDWEDistanceBetweenUnitAndPoint]
title = "Distance Between Unit And Point [New!]"
description = "Distance between ${Unit} to ${Point}"
category = TC_LOCATION
returns = real
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = location

[YDWEAngleBetweenUnitAndPoint]
title = "Angle  Between Unit And Point [New!]"
description = "Angle between ${Unit} to ${Point}"
category = TC_LOCATION
returns = degree
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = location

[YDWEDistanceBetweenUnits]
title = "Distance Between Unit TO Unit"
description = "Distance between ${Unit} to ${Unit}"
category = TC_LOCATION
returns = real
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unit
default = "GetLastCreatedUnit"

[YDWEAngleBetweenUnits]
title = "Angle Distance Between Unit TO Unit"
description = "Angle between ${Unit} to ${Unit}"
category = TC_LOCATION
returns = degree
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unit
default = "GetLastCreatedUnit"

[OperatorIntegerAdd]
title = "Add < + >"
description = "${Integer} + ${Integer}"
comment = ""
category = TC_MATH
returns = integer
[[.args]]
type = integer
[[.args]]
type = integer

[OperatorIntegerSubtract]
title = "Subtract < - >"
description = "${Integer} - ${Integer}"
comment = ""
category = TC_MATH
returns = integer
[[.args]]
type = integer
[[.args]]
type = integer

[OperatorIntegerMultiply]
title = "Multiply < x >"
description = "${Integer} x ${Integer}"
comment = ""
category = TC_MATH
returns = integer
[[.args]]
type = integer
[[.args]]
type = integer

[OperatorIntegerDivide]
title = "Divide < / >"
description = "${Integer} / ${Integer}"
comment = ""
category = TC_MATH
returns = integer
[[.args]]
type = integer
[[.args]]
type = integer

[OperatorRealAdd]
title = "Add < + >"
description = "${Real} + ${Real}"
comment = ""
category = TC_MATH
returns = real
[[.args]]
type = real
[[.args]]
type = real

[OperatorRealSubtract]
title = "Subtract < - >"
description = "${Real} - ${Real}"
comment = ""
category = TC_MATH
returns = real
[[.args]]
type = real
[[.args]]
type = real

[OperatorRealMultiply]
title = "Multiply < x >"
description = "${Real} x ${Real}"
comment = ""
category = TC_MATH
returns = real
[[.args]]
type = real
[[.args]]
type = real

[OperatorRealDivide]
title = "Divide < / >"
description = "${Real} / ${Real}"
comment = ""
category = TC_MATH
returns = real
[[.args]]
type = real
[[.args]]
type = real

[OperatorDegreeAdd]
title = "Add < + >"
description = "${Degree} + ${Degree}"
comment = ""
category = TC_MATH
returns = degree
[[.args]]
type = degree
[[.args]]
type = degree

[OperatorDegreeSubtract]
title = "Subtract < - >"
description = "${Degree} - ${Degree}"
comment = ""
category = TC_MATH
returns = degree
[[.args]]
type = degree
[[.args]]
type = degree

[OperatorDegreeMultiply]
title = "Multiply < x >"
description = "${Degree} x ${Real}"
comment = ""
category = TC_MATH
returns = degree
[[.args]]
type = degree
[[.args]]
type = real

[OperatorDegreeDivide]
title = "Divide < / >"
description = "${Degree} / ${Real}"
comment = ""
category = TC_MATH
returns = degree
[[.args]]
type = degree
[[.args]]
type = real

[OperatorRadianAdd]
title = "Add < + >"
description = "${Radian} + ${Radian}"
comment = ""
category = TC_MATH
returns = radian
[[.args]]
type = radian
[[.args]]
type = real

[OperatorRadianSubtract]
title = "Subtract < - >"
description = "${Radian} - ${Radian}"
comment = ""
category = TC_MATH
returns = radian
[[.args]]
type = radian
[[.args]]
type = real

[OperatorRadianMultiply]
title = "Multiply < x >"
description = "${Radian} x ${Real}"
comment = ""
category = TC_MATH
returns = radian
[[.args]]
type = radian
[[.args]]
type = real

[OperatorRadianDivide]
title = "Divide < / >"
description = "${Radian} / ${Real}"
comment = ""
category = TC_MATH
returns = radian
[[.args]]
type = radian
[[.args]]
type = real

[YDWEIsTriggerEventId]
title = "Trigger Event ID [YDWE]"
description = "If Trigger Event ID is ${Event}"
comment = "Any Unit Event equal Any Unit Event, Special Unit Event equal Special Unit Event"
category = TC_NOTHING
returns = boolean
[[.args]]
type = eventid

[YDWEGetLocalVariableBoolean]
title = "Local Variable (Boolean)"
description = "local_${bl}"
comment = "Gets a local variable, the parameter is filled in the name of the variable, and the local variable is valid only under the current trigger."
category = TC_YDLC
returns = boolean
[[.args]]
type = string

[YDWEGetLocalVariableBooleanArray]
title = "Local Variable Array (Boolean)"
description = "local_${bl}[${index}]"
comment = "Gets an array of local variables, where the parameter is filled in with the name and array index of the variable; local variables are valid only under the current trigger."
category = TC_YDLC
returns = boolean
[[.args]]
type = string
[[.args]]
type = integer
default = "1"
min = 0

[YDWEGetLocalVariableInteger]
title = "Local Variable (Integer)"
description = "local_${i}"
comment = "Gets a local variable, the parameter is filled in the name of the variable, and the local variable is valid only under the current trigger."
category = TC_YDLC
returns = integer
[[.args]]
type = string

[YDWEGetLocalVariableIntegerArray]
title = "Local Variable Array (Integer)"
description = "local_${i}[${index}]"
comment = "Gets an array of local variables, where the parameter is filled in with the name and array index of the variable; local variables are valid only under the current trigger."
category = TC_YDLC
returns = integer
[[.args]]
type = string
[[.args]]
type = integer
default = "1"
min = 0

[YDWEGetLocalVariableReal]
title = "Local Variable (Real)"
description = "local_${R}"
comment = "Gets a local variable, the parameter is filled in the name of the variable, and the local variable is valid only under the current trigger."
category = TC_YDLC
returns = real
[[.args]]
type = string

[YDWEGetLocalVariableRealArray]
title = "Local Variable Array (Real"
description = "local_${R}[${index}]"
comment = "Gets an array of local variables, where the parameter is filled in with the name and array index of the variable; local variables are valid only under the current trigger."
category = TC_YDLC
returns = real
[[.args]]
type = string
[[.args]]
type = integer
default = "1"
min = 0

[YDWEGetLocalVariableString]
title = "Local Variable (String)"
description = "local_${str}"
comment = "Gets a local variable, the parameter is filled in the name of the variable, and the local variable is valid only under the current trigger."
category = TC_YDLC
returns = string
[[.args]]
type = string

[YDWEGetLocalVariableStringArray]
title = "Local Variable Array (String)"
description = "local_${str}[${index}]"
comment = "Gets an array of local variables, where the parameter is filled in with the name and array index of the variable; local variables are valid only under the current trigger."
category = TC_YDLC
returns = string
[[.args]]
type = string
[[.args]]
type = integer
default = "1"
min = 0

[YDWEGetLocalVariableLocation]
title = "Local Variable (Location"
description = "local_${point}"
comment = "Gets a local variable, the parameter is filled in the name of the variable, and the local variable is valid only under the current trigger."
category = TC_YDLC
returns = location
[[.args]]
type = string

[YDWEGetLocalVariableLocationArray]
title = "Local Variable Array (Location)"
description = "local_${point}[${index}]"
comment = "Gets an array of local variables, where the parameter is filled in with the name and array index of the variable; local variables are valid only under the current trigger."
category = TC_YDLC
returns = location
[[.args]]
type = string
[[.args]]
type = integer
default = "1"
min = 0

[YDWEGetLocalVariableRect]
title = "Local Variable (Rect)"
description = "local_${rt}"
comment = "Gets a local variable, the parameter is filled in the name of the variable, and the local variable is valid only under the current trigger."
category = TC_YDLC
returns = rect
[[.args]]
type = string

[YDWEGetLocalVariableRectArray]
title = "Local Variable Array (Rect)"
description = "local_${rt}[${index}]"
comment = "Gets an array of local variables, where the parameter is filled in with the name and array index of the variable; local variables are valid only under the current trigger."
category = TC_YDLC
returns = rect
[[.args]]
type = string
[[.args]]
type = integer
default = "1"
min = 0

[YDWEGetLocalVariableUnit]
title = "Local Variable (Unit)"
description = "local_${u}"
comment = "Gets a local variable, the parameter is filled in the name of the variable, and the local variable is valid only under the current trigger."
category = TC_YDLC
returns = unit
[[.args]]
type = string

[YDWEGetLocalVariableUnitArray]
title = "Local Variable Array (Unit)"
description = "local_${u}[${index}]"
comment = "Gets a local variable, the parameter is filled in the name of the variable, and the local variable is valid only under the current trigger."
category = TC_YDLC
returns = unit
[[.args]]
type = string
[[.args]]
type = integer
default = "1"
min = 0

[YDWEGetLocalVariableUnitID]
title = "Local Variable (UnitID)"
description = "local_${uid}"
comment = "Gets a local variable, the parameter is filled in the name of the variable, and the local variable is valid only under the current trigger."
category = TC_YDLC
returns = unitcode
[[.args]]
type = string

[YDWEGetLocalVariableUnitIDArray]
title = "Local Variable Array (UnitID)"
description = "local_${uid}[${index}]"
comment = "Gets an array of local variables, where the parameter is filled in with the name and array index of the variable; local variables are valid only under the current trigger."
category = TC_YDLC
returns = unitcode
[[.args]]
type = string
[[.args]]
type = integer
default = "1"
min = 0

[YDWEGetLocalVariableItem]
title = "Local Variable (Item)"
description = "local_${it}"
comment = "Gets a local variable, the parameter is filled in the name of the variable, and the local variable is valid only under the current trigger."
category = TC_YDLC
returns = item
[[.args]]
type = string

[YDWEGetLocalVariableItemArray]
title = "Local Variable Array (Item)"
description = "local_${it}[${index}]"
comment = "Gets an array of local variables, where the parameter is filled in with the name and array index of the variable; local variables are valid only under the current trigger."
category = TC_YDLC
returns = item
[[.args]]
type = string
[[.args]]
type = integer
default = "1"
min = 0

[YDWEGetLocalVariableItemID]
title = "Local Variable (Item ID)"
description = "local_${itid}"
comment = "Gets a local variable, the parameter is filled in the name of the variable, and the local variable is valid only under the current trigger."
category = TC_YDLC
returns = itemcode
[[.args]]
type = string

[YDWEGetLocalVariableItemIDArray]
title = "Local Variable Array (Item ID)"
description = "local_${itid}[${index}]"
comment = "Gets an array of local variables, where the parameter is filled in with the name and array index of the variable; local variables are valid only under the current trigger."
category = TC_YDLC
returns = itemcode
[[.args]]
type = string
[[.args]]
type = integer
default = "1"
min = 0

[YDWEGetLocalVariableAbilityID]
title = "Local Variable (Ability ID)"
description = "local_${abid}"
comment = "Gets a local variable, the parameter is filled in the name of the variable, and the local variable is valid only under the current trigger."
category = TC_YDLC
returns = abilcode
[[.args]]
type = string

[YDWEGetLocalVariableAbilityIDArray]
title = "Local Variable Array (Ability ID)"
description = "local_${abid}[${index}]"
comment = "Gets an array of local variables, where the parameter is filled in with the name and array index of the variable; local variables are valid only under the current trigger."
category = TC_YDLC
returns = abilcode
[[.args]]
type = string
[[.args]]
type = integer
default = "1"
min = 0

[YDWEGetLocalVariableGroup]
title = "Local Variable (Group)"
description = "local_${g}"
comment = "Gets a local variable, the parameter is filled in the name of the variable, and the local variable is valid only under the current trigger."
category = TC_YDLC
returns = group
[[.args]]
type = string

[YDWEGetLocalVariableGroupArray]
title = "Local Variable Array (Group)"
description = "local_${g}[${index}]"
comment = "Gets an array of local variables, where the parameter is filled in with the name and array index of the variable; local variables are valid only under the current trigger."
category = TC_YDLC
returns = group
[[.args]]
type = string
[[.args]]
type = integer
default = "1"
min = 0

[YDWEGetLocalVariableEffect]
title = "Local Variable (Effect)"
description = "local_${e}"
comment = "Gets a local variable, the parameter is filled in the name of the variable, and the local variable is valid only under the current trigger."
category = TC_YDLC
returns = effect
[[.args]]
type = string

[YDWEGetLocalVariableEffectArray]
title = "Local Variable Array (Effect)"
description = "local_${e}[${index}]"
comment = "Gets an array of local variables, where the parameter is filled in with the name and array index of the variable; local variables are valid only under the current trigger."
category = TC_YDLC
returns = effect
[[.args]]
type = string
[[.args]]
type = integer
default = "1"
min = 0

[YDWEGetBooleanByInteger]
title = "Get Boolean (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Boolean)"
comment = "Get value by Section and Key with War3 Version (Boolean)"
category = TC_YDLD
returns = boolean
[[.args]]
type = integer
[[.args]]
type = integer

[YDWEGetBooleanByString]
title = "Get Boolean (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Boolean)"
comment = "Get value by Section and Key with War3 Version (Boolean)"
category = TC_YDLD
returns = boolean
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetIntegerByInteger]
title = "Get Integer (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Integer)"
comment = "Get value by Section and Key with War3 Version (Integer)"
category = TC_YDLD
returns = integer
[[.args]]
type = integer
[[.args]]
type = integer

[YDWEGetIntegerByString]
title = "Get Integer (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Integer)"
comment = "Get value by Section and Key with War3 Version (Integer)"
category = TC_YDLD
returns = integer
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetRealByInteger]
title = "Get Real (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Real)"
comment = "Get value by Section and Key with War3 Version (Real)"
category = TC_YDLD
returns = real
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetRealByString]
title = "Get Real (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Real)"
comment = "Get value by Section and Key with War3 Version (Real)"
category = TC_YDLD
returns = real
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetStringByInteger]
title = "Get String (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (String)"
comment = "Get value by Section and Key with War3 Version (String)"
category = TC_YDLD
returns = string
[[.args]]
type = integer
[[.args]]
type = integer

[YDWEGetStringByString]
title = "Get String (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (String)"
comment = "Get value by Section and Key with War3 Version (String)"
category = TC_YDLD
returns = string
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetLocationByInteger]
title = "Get Location (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Location)"
comment = "Get value by Section and Key with War3 Version (Location)"
category = TC_YDLD
returns = location
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetLocationByString]
title = "Get Location (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Location)"
comment = "Get value by Section and Key with War3 Version (Location)"
category = TC_YDLD
returns = location
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetRegionByInteger]
title = "Get Region (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Region)"
comment = "Get value by Section and Key with War3 Version (Region)"
category = TC_YDLD
returns = region
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetRegionByString]
title = "Get Region (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Region)"
comment = "Get value by Section and Key with War3 Version (Region)"
category = TC_YDLD
returns = region
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetRectByInteger]
title = "Get Rect (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Rect)"
comment = "Get value by Section and Key with War3 Version (Rect)"
category = TC_YDLD
returns = rect
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetRectByString]
title = "Get Region (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Rect)"
comment = "Get value by Section and Key with War3 Version (Rect)"
category = TC_YDLD
returns = rect
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetUnitByInteger]
title = "Get Unit (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Unit)"
comment = "Get value by Section and Key with War3 Version (Unit)"
category = TC_YDLD
returns = unit
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetUnitByString]
title = "Get Unit (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Unit)"
comment = "Get value by Section and Key with War3 Version (Unit)"
category = TC_YDLD
returns = unit
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetUnitIDByInteger]
title = "Get Unit Type (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Unit Type)"
comment = "Get value by Section and Key with War3 Version (Unit Type)"
category = TC_YDLD
returns = unitcode
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetUnitIDByString]
title = "Get Unit Type (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Unit Type)"
comment = "Get value by Section and Key with War3 Version (Unit Type)"
category = TC_YDLD
returns = unitcode
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetDestructableByInteger]
title = "Get Destructable (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Destructable)"
comment = "Get value by Section and Key with War3 Version (Destructable)"
category = TC_YDLD
returns = destructable
[[.args]]
type = integer
min = 0
max = 1
[[.args]]
type = integer
min = 0
max = 1

[YDWEGetDestructableByString]
title = "Get Destructable (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Destructable)"
comment = "Get value by Section and Key with War3 Version (Destructable)"
category = TC_YDLD
returns = destructable
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetItemByInteger]
title = "Get Item (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Item)"
comment = "Get value by Section and Key with War3 Version (Item)"
category = TC_YDLD
returns = item
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetItemByString]
title = "Get Item (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Item)"
comment = "Get value by Section and Key with War3 Version (Item)"
category = TC_YDLD
returns = item
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetItemIDByInteger]
title = "Get Item Type (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Item Type)"
comment = "Get value by Section and Key with War3 Version (Item Type)"
category = TC_YDLD
returns = itemcode
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetItemIDByString]
title = "Get Item Type (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Item Type)"
comment = "Get value by Section and Key with War3 Version (Item Type)"
category = TC_YDLD
returns = itemcode
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetAbilityIDByInteger]
title = "Get Ability (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Ability)"
comment = "Get value by Section and Key with War3 Version (Ability)"
category = TC_YDLD
returns = abilcode
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetAbilityIDByString]
title = "Get Ability (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Ability)"
comment = "Get value by Section and Key with War3 Version (Ability)"
category = TC_YDLD
returns = abilcode
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetPlayerByInteger]
title = "Get Player (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Player)"
comment = "Get value by Section and Key with War3 Version (Player)"
category = TC_YDLD
returns = player
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetPlayerByString]
title = "Get Player (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Player)"
comment = "Get value by Section and Key with War3 Version (Player)"
category = TC_YDLD
returns = player
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetGroupByInteger]
title = "Get Unit Group (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Unit Group)"
comment = "Get value by Section and Key with War3 Version (Unit Group)"
category = TC_YDLD
returns = group
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetGroupByString]
title = "Get Unit Group (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Unit Group)"
comment = "Get value by Section and Key with War3 Version (Unit Group)"
category = TC_YDLD
returns = group
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetForceByInteger]
title = "Get Force (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Force)"
comment = "Get value by Section and Key with War3 Version (Force)"
category = TC_YDLD
returns = force
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetForceByString]
title = "Get Force (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Force)"
comment = "Get value by Section and Key with War3 Version (Force)"
category = TC_YDLD
returns = force
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetTriggerConditionByInteger]
title = "Get Condition (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Condition)"
comment = "Get value by Section and Key with War3 Version (Condition)"
category = TC_YDLD
returns = triggercondition
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetTriggerConditionByString]
title = "Get Condition (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Condition)"
comment = "Get value by Section and Key with War3 Version (Condition)"
category = TC_YDLD
returns = triggercondition
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetTriggerActionByInteger]
title = "Get Trigger Action (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Trigger Action)"
comment = "Get value by Section and Key with War3 Version (Trigger Action)"
category = TC_YDLD
returns = triggeraction
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetTriggerActionByString]
title = "Get Trigger Action (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Trigger Action)"
comment = "Get value by Section and Key with War3 Version (Trigger Action)"
category = TC_YDLD
returns = triggeraction
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetTriggerEventByInteger]
title = "Get Event (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Event)"
comment = "Get value by Section and Key with War3 Version (Event)"
category = TC_YDLD
returns = event
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetTriggerEventByString]
title = "Get Event (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Event)"
comment = "Get value by Section and Key with War3 Version (Event)"
category = TC_YDLD
returns = event
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetBoolexprByInteger]
title = "Get Boolexpr (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Boolexpr)"
comment = "Get value by Section and Key with War3 Version (Boolexpr)"
category = TC_YDLD
returns = boolexpr
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetBoolexprByString]
title = "Get Boolexpr (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Boolexpr)"
comment = "Get value by Section and Key with War3 Version (Boolexpr)"
category = TC_YDLD
returns = boolexpr
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetTriggerByInteger]
title = "Get Trigger (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Trigger)"
comment = "Get value by Section and Key with War3 Version (Trigger)"
category = TC_YDLD
returns = trigger
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetTriggerByString]
title = "Get Trigger (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Trigger)"
comment = "Get value by Section and Key with War3 Version (Trigger)"
category = TC_YDLD
returns = trigger
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetEffectByInteger]
title = "Get Effect (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Effect)"
comment = "Get value by Section and Key with War3 Version (Effect)"
category = TC_YDLD
returns = effect
[[.args]]
type = integer
[[.args]]
type = integer

[YDWEGetEffectByString]
title = "Get Effect (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Effect)"
comment = "Get value by Section and Key with War3 Version (Effect)"
category = TC_YDLD
returns = effect
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetLightningByInteger]
title = "Get Lightning (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Lightning)"
comment = "Get value by Section and Key with War3 Version (Lightning)"
category = TC_YDLD
returns = lightning
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetLightningByString]
title = "Get Lightning (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Lightning)"
comment = "Get value by Section and Key with War3 Version (Lightning)"
category = TC_YDLD
returns = lightning
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetSoundByInteger]
title = "Get Sound (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Sound)"
comment = "Get value by Section and Key with War3 Version (Sound)"
category = TC_YDLD
returns = sound
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetSoundByString]
title = "Get Sound (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Sound)"
comment = "Get value by Section and Key with War3 Version (Sound)"
category = TC_YDLD
returns = sound
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetQuestByInteger]
title = "Get Quest (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Quest)"
comment = "Get value by Section and Key with War3 Version (Quest)"
category = TC_YDLD
returns = quest
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetQuestByString]
title = "Get Quest (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Quest)"
comment = "Get value by Section and Key with War3 Version (Quest)"
category = TC_YDLD
returns = quest
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetQuestItemByInteger]
title = "Get Quest Item (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Quest Item)"
comment = "Get value by Section and Key with War3 Version (Quest Item)"
category = TC_YDLD
returns = questitem
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetQuestItemByString]
title = "Get Quest Item (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Quest Item)"
comment = "Get value by Section and Key with War3 Version (Quest Item)"
category = TC_YDLD
returns = questitem
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetDialogByInteger]
title = "Get Dialog (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Dialog)"
comment = "Get value by Section and Key with War3 Version (Dialog)"
category = TC_YDLD
returns = dialog
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetDialogByString]
title = "Get Dialog (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Dialog)"
comment = "Get value by Section and Key with War3 Version (Dialog)"
category = TC_YDLD
returns = dialog
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetButtonByInteger]
title = "Get Dialog Button (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Dialog Button)"
comment = "Get value by Section and Key with War3 Version (Dialog Button)"
category = TC_YDLD
returns = button
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetButtonByString]
title = "Get Dialog Button (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Dialog Button)"
comment = "Get value by Section and Key with War3 Version (Dialog Button)"
category = TC_YDLD
returns = button
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetLeaderboardByInteger]
title = "Get Leaderboard (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Leaderboard)"
comment = "Get value by Section and Key with War3 Version (Leaderboard)"
category = TC_YDLD
returns = leaderboard
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetLeaderboardByString]
title = "Get Leaderboard (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Leaderboard)"
comment = "Get value by Section and Key with War3 Version (Leaderboard)"
category = TC_YDLD
returns = leaderboard
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetMultiBoardByInteger]
title = "Get Multi Board (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Multi Board)"
comment = "Get value by Section and Key with War3 Version (Multi Board)"
category = TC_YDLD
returns = multiboard
[[.args]]
type = integer
[[.args]]
type = integer

[YDWEGetMultiBoardByString]
title = "Get Multi Board (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Multi Board)"
comment = "Get value by Section and Key with War3 Version (Multi Board)"
category = TC_YDLD
returns = multiboard
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetMultiBoardItemByInteger]
title = "Get Multi Board Item (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Multi Board Item)"
comment = "Get value by Section and Key with War3 Version (Multi Board Item)"
category = TC_YDLD
returns = multiboarditem
[[.args]]
type = integer
[[.args]]
type = integer

[YDWEGetMultiBoardItemByString]
title = "Get Multi Board Item (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Multi Board Item)"
comment = "Get value by Section and Key with War3 Version (Multi Board Item)"
category = TC_YDLD
returns = multiboarditem
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetTimerByInteger]
title = "Get Timer (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Timer)"
comment = "Get value by Section and Key with War3 Version (Timer)"
category = TC_YDLD
returns = timer
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetTimerByString]
title = "Get Timer (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Timer)"
comment = "Get value by Section and Key with War3 Version (Timer)"
category = TC_YDLD
returns = timer
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetTimerDialogByInteger]
title = "Get Timer Window (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Timer Window)"
comment = "Get value by Section and Key with War3 Version (Timer Window)"
category = TC_YDLD
returns = timerdialog
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetTimerDialogByString]
title = "Get Timer Window (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Timer Window)"
comment = "Get value by Section and Key with War3 Version (Timer Window)"
category = TC_YDLD
returns = timerdialog
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetTrackableByInteger]
title = "Get Trackable (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Trackable)"
comment = "Get value by Section and Key with War3 Version (Trackable)"
category = TC_YDLD
returns = trackable
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetTrackableByString]
title = "Get Trackable (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Trackable)"
comment = "Get value by Section and Key with War3 Version (Trackable)"
category = TC_YDLD
returns = trackable
[[.args]]
type = string
[[.args]]
type = string

[YDWEGetTextTagByInteger]
title = "Get Text Tag (By Integer)"
description = "Get data from Section -> ${Integer}, Key-> ${Integer} (Text Tag)"
comment = "Get value by Section and Key with War3 Version (Text Tag)"
category = TC_YDLD
returns = texttag
[[.args]]
type = integer
min = 0
[[.args]]
type = integer
min = 0

[YDWEGetTextTagByString]
title = "YDWE Get Text Tag (By String)"
description = "Get data from Section -> ${String}, Key-> ${String} (Text Tag)"
comment = "Get value by Section and Key with War3 Version (Text Tag)"
category = TC_YDLD
returns = texttag
[[.args]]
type = string
[[.args]]
type = string

[YDWEIsItemSwitch]
title = "YDWE Item Bag Switch[YDWE]"
description = "${Unit} is on Switch item Bag."
comment = "To determine whether a unit is switching backpacks, avoid obtaining and dropping items when units switch backpacks."
category = TC_YDST
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"

[YDWE_TP_GetExpiredTimerIndex]
title = "YDWE Center Timer - Get Expired Timer Index <By Fetrix_sai>"
description = "Get expired timer index"
comment = "When the central timer runs a trigger, a run index is generated; this article API runs the trigger according to the parameters set and returns a running index."
category = TC_YDST
returns = integer

[YDWE_TP_NewTimerPeriodic]
title = "YDWE Center Timer - New Timer Periodic<By Fetrix_sai>"
description = "Start a new timer periodic, inteval is ${time} seconds, if loop is ${bool}, execute ${Trigger} when expired"
comment = "When the central timer runs a trigger, a run index is generated; this article API runs the trigger according to the parameters set and returns a running index."
category = TC_YDST
returns = integer
[[.args]]
type = real
default = "0.03"
min = 0.01
[[.args]]
type = boolean
default = "true"
[[.args]]
type = trigger
default = "GetTriggeringTrigger"

[YDWEGeneralBounsSystemUnitGetBonus]
title = "YDWE General Bouns System-Unit Get Bonus<By Eggplant>"
description = "Get Bouns form ${Unit} on ${Attribute}"
comment = ""
category = TC_YDST
returns = integer
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = bonusType
default = "bonusTypeA"

[YDWE_TP_GetElapsedTime]
title = "YDWE Center Timer - GetElapsedTime<By Fetrix_sai>"
description = "Get elapsed time on center timer of ${Timer Index} "
comment = ""
category = TC_YDST
returns = real
[[.args]]
type = integer

[YDWE_TP_GetRemainingTime]
title = "YDWE Center Timer - Get Remaining Time<By Fetrix_sai>"
description = "Get remain time on center timer of ${Timer Index}"
comment = ""
category = TC_YDST
returns = real
[[.args]]
type = integer

[YDWE_TP_GetTimeout]
title = "YDWE Center Timer - Get Timeout<By Fetrix_sai>"
description = "Get timeout on center timer of ${Timer Index}"
comment = ""
category = TC_YDST
returns = real
[[.args]]
type = integer

["  "]
title = "Custom Script"
description = "Script: ${Jass Script}"
comment = "Input a line of jass script"
category = TC_YDHIDE
returns = boolean
[[.args]]
type = scriptcode

[StringLength]
title = "String Length"
description = "Length of ${String}"
comment =""
category = TC_NOTHING
returns = integer
[[.args]]
type = string
default = "GetEventPlayerChatString"

[" "]
title = "Integer Format Form  [R]"
description = "Integer format: ${Integer}"
comment = "You can use integer forms such as 0x1ab3 and'A001', or write arithmetic expressions directly. "
category = TC_NOTHING
returns = integer
[[.args]]
type = scriptcode

["   "]
title = "Custom Script"
description = "Script: ${Jass Script}"
comment = "Input a line of jass script"
category = TC_YDHIDE
returns = real
[[.args]]
type = scriptcode

[GetLocationX]
title = "X Of Point"
description = "X of ${Point}"
comment =""
category = TC_NOTHING
returns = real
[[.args]]
type = location

[GetLocationY]
title = "Y Of Point"
description = "Y of ${Point}"
comment =""
category = TC_NOTHING
returns = real
[[.args]]
type = location

[GetLocationZ]
title = "Z of Point [R]"
description = "Z of ${Point}"
comment = ""
category = TC_NOTHING
returns = real
[[.args]]
type = location

[OperatorString]
title = "Concatenate Strings"
description = "${String 1} + ${String 2}"
comment =""
category = TC_NOTHING
returns = string
[[.args]]
type = string
default = null
[[.args]]
type = string
default = null

[YDWEOperatorString3]
title = "Concatenate Strings Lv3"
description = "${String1} + ${String2} + ${String3}"
comment = ""
category = TC_NOTHING
returns = string
[[.args]]
type = string
default = null
[[.args]]
type = string
default = null
[[.args]]
type = string
default = null

["    "]
title = "Custom Script"
description = "Script: ${Jass Script}"
comment = "Input a line of jass script"
category = TC_YDHIDE
returns = string
[[.args]]
type = scriptcode

[GetObjectName]
title = "Object Name [C]"
description = "$Name of ${Object ID}"
comment = "E.g. the name of 'A01Z' in object editor"
category = TC_NOTHING
returns = string
[[.args]]
type = scriptcode

[SubStringBJ]
title = "Substring [R]"
description = "Substring(${String}, ${Start}, ${End})"
comment = "Example:  Substring(''Grunts stink'', 2, 4) = ''run''."
category = TC_NOTHING
returns = string
[[.args]]
type = string
[[.args]]
type = integer
default = "1"
[[.args]]
type = integer
default = "5"

[SubString]
title = "截取字符串 [R]"
description = "截取 ${字符串} 的 ${Start} - ${End} 字节部分(不包括首字节)"
comment = "例: 截取''Grunts stink''的2 - 4字节部分 = ''un''."
category = TC_NOTHING
returns = string
[[.args]]
type = string
[[.args]]
type = integer
default = "1"
[[.args]]
type = integer
default = "5"

[GetRectCenter]
title = "Center Of Region"
description = "Center of ${Region}"
comment =""
category = TC_NOTHING
returns = location
[[.args]]
type = rect
default = "GetPlayableMapRect"

[GetRandomLocInRect]
title = "Random Point In Region"
description = "Random point in ${Region}"
comment =""
category = TC_NOTHING
returns = location
[[.args]]
type = rect
default = "GetPlayableMapRect"

["     "]
title = "Custom Script"
description = "Script: ${Jass Script}"
comment = "Input a line of jass script"
category = TC_YDHIDE
returns = location
[[.args]]
type = scriptcode

[GetCurrentCameraBoundsMapRectBJ]
title = "Current Camera Bounds"
description = "Current camera bounds"
comment = "This is the area to which the camera target is currently restricted."
category = TC_NOTHING
returns = rect

[GetCameraBoundsMapRect]
title = "Initial Camera Bounds"
description = "Initial camera bounds"
comment = "This is the area to which the camera target is restricted at map initialization."
category = TC_NOTHING
returns = rect

[GetPlayableMapRect]
title = "Playable Map Area"
description = "Playable map area"
comment = "This is the area to which units are restricted.  This area typically extends just beyond the camera bounds."
category = TC_NOTHING
returns = rect

[GetEntireMapRect]
title = "Entire Map"
description = "Entire map"
comment = "This is the entire map, including areas which cannot normally be reached by units."
script_name = GetWorldBounds
category = TC_NOTHING
returns = rect

[YDWEGetRect]
title = "New Rect(Center Location)[YDWE]"
description = "Create a Rect at (${x},${y}) with height ${Real}，width ${Real}"
comment = "Create a Rect"
category = TC_NOTHING
returns = rect
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "100"
min = 0
[[.args]]
type = real
default = "50"
min = 0

[OffsetRectBJ]
title = "Region With Offset"
description = "${Region} offset by (${X}, ${Y})"
comment = "The offset values are (X, Y)."
category = TC_NOTHING
returns = rect
[[.args]]
type = rect
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[RectFromCenterSizeBJ]
title = "Convert Point With Size To Region"
description = "Region centered at ${Point} with size (${Width}, ${Height})"
comment = "The size values are (Width, Height)."
category = TC_NOTHING
returns = rect
[[.args]]
type = location
[[.args]]
type = real
[[.args]]
type = real

[Rect]
title = "Convert Coordinates To Region"
description = "Region(${X1}, ${Y1}, ${X2}, ${Y2})"
comment = "Choose four coordinates (min X, min Y, max X, max Y) to define a rectangular region on the map."
category = TC_NOTHING
returns = rect
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[RectFromLoc]
title = "Convert Points To Region"
description = "Region(${Point 1}, ${Point 2})"
comment = "Choose two points to define a rectangular region on the map."
category = TC_NOTHING
returns = rect
[[.args]]
type = location
default = "Location"
[[.args]]
type = location
default = "Location"

[CreateUnit]
title = "Create Units (Coordinates)"
description = "For ${Player} , Create a ${Unit} at (${X}, ${Y}) and make it facing ${Direction}"
comment = "Create a unit at location, can not use 'Last Created Unit' to get the unit."
category = TC_NOTHING
returns = unit
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unitcode
default = "hfoo"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = degree
default = "0"

[CreateUnitAtLoc]
title = "Create Units (Location)"
description = "For ${Player} , Create a ${Unit} at ${Location} and make it facing ${Direction}"
comment = ""
category = TC_NOTHING
returns = unit
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unitcode
default = "hfoo"
[[.args]]
type = location
[[.args]]
type = degree
default = "0"

[CreateCorpse]
title = "Create Corpse [R]"
description = "For ${Player} , Create a corpse ${Unit} at (${X}, ${Y}) and make it facing ${Direction}"
comment = ""
category = TC_NOTHING
returns = unit
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unitcode
default = "hfoo"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = degree
default = "0"

[CreateBlightedGoldmine]
title = "Create Blighted Goldmine [R]"
description = "For ${Player} , Create a Blighted Goldmine at (${X},${Y}) and make it facing ${Direction}"
comment = ""
category = TC_NOTHING
returns = unit
[[.args]]
type = player
default = "Player00"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = degree
default = "0"

[GetEnumUnit]
title = "Picked Unit"
description = "Picked unit"
comment = "When using the 'Pick Every Unit...' action, this refers to each unit as it is picked."
category = TC_NOTHING
returns = unit

[GetFilterUnit]
title = "Matching Unit"
description = "Matching unit"
comment = "Use this to refer to the unit being considered for 'Units Matching Condition' functions."
category = TC_NOTHING
returns = unit

[FirstOfGroup]
title = "First Of Unit Group"
description = "Get the first Unit in ${Unit Group}"
category = TC_NOTHING
returns = unit
[[.args]]
type = group

["      "]
title = "Custom Script"
description = "Script: ${Jass Script}"
comment = "Input a line of jass script."
category = TC_YDHIDE
returns = unit
[[.args]]
type = scriptcode

[GroupPickRandomUnit]
title = "Random Unit From Unit Group"
description = "Random unit from ${Unit Group}"
comment =""
category = TC_NOTHING
returns = unit
[[.args]]
type = group

[CreateUnitPool]
title = "Create Unit Pool [R]"
description = "Create a new unit pool"
comment = "Create a unit pool"
category = TC_NOTHING
use_in_event = 0
returns = unitpool

[GetUnitTypeId]
title = "Unit-Type Of Unit"
description = "Unit-type of ${Unit}"
comment =""
category = TC_NOTHING
returns = unitcode
[[.args]]
type = unit
default = "GetTriggerUnit"

["       "]
title = "Custom Script"
description = "Script: ${Jass Script}"
comment = "Input a line of jass script."
category = TC_YDHIDE
returns = unitcode
[[.args]]
type = scriptcode

[ChooseRandomCreepBJ]
title = "Random Creep Unit-Type"
description = "Random level ${Level} creep unit-type"
comment = "Use -1 for any level."
script_name = ChooseRandomCreep
category = TC_NOTHING
returns = unitcode
[[.args]]
type = integer
default = "1"
min = -1
max = 10

[ChooseRandomNPBuildingBJ]
title = "Random Neutral Building Unit-Type"
description = "Random neutral building unit-type"
comment =""
script_name = ChooseRandomNPBuilding
category = TC_NOTHING
returns = unitcode

[CreateDestructableZ]
title = "Create Destructable [R]"
description = "Create a destrctable of ${Destructable type} at (${X},${Y},${Z}), facing: ${Direction}, scale: ${Scale}, style: ${Variation}"
comment = "Location is format as(X,Y,Z). Angle oriented system, 0 degrees for the east direction, 90 degrees is the right north direction."
category = TC_NOTHING
returns = destructable
[[.args]]
type = destructablecode
default = "LTlt"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "GetRandomDirectionDeg"
[[.args]]
type = real
default = "1"
[[.args]]
type = integer
default = "0"

[CreateDeadDestructableZ]
title = "Create Destructable(Death) [R]"
description = "Create a dead destrctable of ${Destructable type} at (${X},${Y},${Z}), facing: ${Direction}, scale: ${Scale}, style: ${Variation}"
comment = "Location is format as(X,Y,Z). Angle oriented system, 0 degrees for the east direction, 90 degrees is the right north direction."
category = TC_NOTHING
returns = destructable
[[.args]]
type = destructablecode
default = "LTlt"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "GetRandomDirectionDeg"
[[.args]]
type = real
default = "1"
[[.args]]
type = integer
default = "0"

[RandomDestructableInRectSimpleBJ]
title = "Random Destructible In Region"
description = "Random destructible in ${Region}"
comment =""
category = TC_NOTHING
returns = destructable
[[.args]]
type = rect

[RandomDestructableInRectBJ]
title = "Random Destructible In Region Matching Condition"
description = "Random destructible in ${Region} matching ${Condition}"
comment = "Use 'Matching Destructible' to refer to the destructible being considered."
category = TC_NOTHING
returns = destructable
[[.args]]
type = rect
[[.args]]
type = boolexpr

[GetEnumDestructable]
title = "Picked Destructible"
description = "Picked destructible"
comment = "When using the 'Pick Every Destructible...' action, this refers to each destructible as it is picked."
category = TC_NOTHING
returns = destructable

[GetFilterDestructable]
title = "Matching Destructible"
description = "Matching destructible"
comment = "Use this to refer to the destructible being considered for the 'Random Destructible' functions."
category = TC_NOTHING
returns = destructable

[GetDestructableTypeId]
title = "Destructible-Type of Destructible"
description = "Destructible-type of ${Destructible}"
comment =""
category = TC_NOTHING
returns = destructablecode
[[.args]]
type = destructable
default = "GetLastCreatedDestructable"

[CreateItem]
title = "Create Item [R]"
description = "Create a item of  ${Item} at (${X},${Y})"
comment = ""
category = TC_NOTHING
returns = item
[[.args]]
type = itemcode
default = "texp"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[UnitDropItem]
title = "Unit Drop Item"
description = "Make ${Unit} Drop ${Item}"
comment = "An item is created at random points in the area of the unit (32x32), and it is noted that when the unit is standing next to the non passable path, the item may fall and can not be picked up."
category = TC_NOTHING
returns = item
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = itemcode
default = "texp"

[RandomItemInRectSimpleBJ]
title = "Random Item In Region"
description = "Random item in ${Region}"
comment =""
category = TC_NOTHING
use_in_event = 0
returns = item
[[.args]]
type = rect

[RandomItemInRectBJ]
title = "Random Item In Region Matching Condition"
description = "Random item in ${Region} matching ${Condition}"
comment = "Use 'Matching Item' to refer to the item being considered."
category = TC_NOTHING
use_in_event = 0
returns = item
[[.args]]
type = rect
[[.args]]
type = boolexpr

[GetEnumItem]
title = "Picked Item"
description = "Picked item"
comment = "When using the 'Pick Every Item...' action, this refers to each item as it is picked."
category = TC_NOTHING
use_in_event = 0
returns = item

[GetFilterItem]
title = "Matching Item"
description = "Matching item"
comment = "Use this to refer to the item being considered for the 'Random Item' functions."
category = TC_NOTHING
use_in_event = 0
returns = item

[UnitItemInSlot]
title = "Unit Have Item In Slot"
description = "${Unit} have item at the slot ${Index} "
comment = "The index of the first slot is 0."
category = TC_NOTHING
returns = item
[[.args]]
type = unit
[[.args]]
type = integer
default = "0"
min = 0
max = 5

[UnitItemInSlotBJ]
title = "Item Carried By Hero"
description = "Item carried by ${Hero} in slot ${Index}"
comment =""
category = TC_NOTHING
returns = item
[[.args]]
type = unit
[[.args]]
type = integer
default = "1"
min = 1
max = 6

[GetItemOfTypeFromUnitBJ]
title = "Item Carried By Hero Of Type"
description = "Item carried by ${Hero} of type ${Item-Type}"
comment =""
category = TC_NOTHING
returns = item
[[.args]]
type = unit
[[.args]]
type = itemcode
default = "texp"

[CreateItemPool]
title = "Create Item Pool [R]"
description = "Create 的空Item Pool"
comment = "Create a Item Pool."
category = TC_NOTHING
use_in_event = 0
returns = itempool

[YDWEGetLastItemPool]
title = "YDWE Last Created Item Pool [YDWE]"
description = "Last Created Item Pool"
comment = "The item pool must be generated by YDWE, <Create Item Pool> action, otherwise it will not be available."
category = TC_NOTHING
use_in_event = 0
returns = itempool

[YDWEGetLastPoolAbstractedItem]
title = "YDWE Last Picked Item From Item Pool[YDWE]"
description = "Las picked item from item Pool"
comment = "The item must be provided by YDWE. <Choose Placed Item> action generated, otherwise it can not be obtained."
category = TC_NOTHING
use_in_event = 0
returns = item

[GetItemType]
title = "Item-Class Of Item"
description = "Item-class of ${Item}"
comment =""
category = TC_NOTHING
returns = itemtype
[[.args]]
type = item
default = "GetLastCreatedItem"

[GetItemTypeId]
title = "Item-Type Of Item"
description = "Item-type of ${Item}"
comment =""
category = TC_NOTHING
returns = itemcode
[[.args]]
type = item
default = "GetLastCreatedItem"

["        "]
title = "Custom Script"
description = "Script: ${Jass Script}"
comment = "Input a line of jass script"
category = TC_YDHIDE
returns = itemcode
[[.args]]
type = scriptcode

[ChooseRandomItemExBJ]
title = "Random Item-Type Of Class"
description = "Random level ${Level} ${Class} item-type"
comment = "This function corresponds to the newer item classification system with levels 0-8.  Use -1 for any level."
category = TC_NOTHING
returns = itemcode
[[.args]]
type = integer
default = "1"
min = -1
[[.args]]
type = itemtype
default = "ItemTypeAny"

[ChooseRandomItemBJ]
title = "Random Item-Type"
description = "Random level ${Level} item-type"
comment = "This function corresponds to the original unclassified item system with levels 0-10.  Use -1 for any level."
script_name = ChooseRandomItem
category = TC_NOTHING
returns = itemcode
[[.args]]
type = integer
default = "1"
min = -1

["         "]
title = "Custom Script"
description = "Script: ${Jass Script}"
comment = "Input a line of jass script"
category = TC_YDHIDE
returns = abilcode
[[.args]]
type = scriptcode

[GetEnumPlayer]
title = "Picked Player"
description = "Picked player"
comment = "When using the 'Pick Every Player...' action, this refers to each player as he/she is picked."
category = TC_NOTHING
returns = player

[GetFilterPlayer]
title = "Matching Player"
description = "Matching player"
comment = "Use this to refer to the player being considered for the 'All Players Matching Condition' function."
category = TC_NOTHING
returns = player

[GetOwningPlayer]
title = "Owner Of Unit"
description = "Owner of ${Unit}"
comment =""
category = TC_NOTHING
returns = player
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetItemPlayer]
title = "Owner Of Item"
description = "Owner of ${Item}"
comment =""
category = TC_NOTHING
returns = player
[[.args]]
type = item
default = "GetLastCreatedItem"

[ForcePickRandomPlayer]
title = "Random Player From Player Group"
description = "Random player from ${Player Group}"
comment =""
category = TC_NOTHING
returns = player
[[.args]]
type = force

[GetLocalPlayer]
title = "Get Local Player [R]"
description = "Local Player"
comment = "Get the player of the user self, each player get a different value, if you do not know clearly, do not use this function, otherwise it will cause disconnect"
category = TC_NOTHING
returns = player

["          "]
title = "Custom Script"
description = "Script: ${Jass Script}"
comment = "Input a line of jass script"
category = TC_YDHIDE
returns = player
[[.args]]
type = scriptcode

[CreateGroup]
title = "Create 的Unit Group [R]"
description = "Create 的空Unit Group"
comment = "Create a Unit Group."
category = TC_NOTHING
returns = group

["           "]
title = "Custom Script"
description = "Script: ${Jass Script}"
comment = "Input a line of jass script"
category = TC_YDHIDE
returns = group
[[.args]]
type = scriptcode

[GetRandomSubGroup]
title = "Random N Units From Unit Group"
description = "Random ${Count} units from ${Unit Group}"
comment =""
category = TC_NOTHING
use_in_event = 0
returns = group
[[.args]]
type = integer
default = "4"
[[.args]]
type = group
default = "GetUnitsInRectAll"

[GetUnitsInRectAll]
title = "Units In Region"
description = "Units in ${Region}"
comment =""
category = TC_NOTHING
returns = group
[[.args]]
type = rect
default = "GetPlayableMapRect"

[GetUnitsInRectOfPlayer]
title = "Units In Region Owned By Player"
description = "Units in ${Region} owned by ${Player}"
comment =""
category = TC_NOTHING
returns = group
[[.args]]
type = rect
default = "GetPlayableMapRect"
[[.args]]
type = player
default = "Player00"

[GetUnitsInRectMatching]
title = "Units In Region Matching Condition"
description = "Units in ${Region} matching ${Condition}"
comment = "Use 'Matching Unit' to refer to the unit on whom the comparison is being performed."
category = TC_NOTHING
returns = group
[[.args]]
type = rect
default = "GetPlayableMapRect"
[[.args]]
type = boolexpr

[GetUnitsInRangeOfLocAll]
title = "Units In Range"
description = "Units within ${Radius} of ${Point}"
comment =""
category = TC_NOTHING
returns = group
[[.args]]
type = real
default = "512"
min = 0
[[.args]]
type = location
default = "GetRectCenter"

[GetUnitsInRangeOfLocMatching]
title = "Units In Range Matching Condition"
description = "Units within ${Radius} of ${Point} matching ${Condition}"
comment = "Use 'Matching Unit' to refer to the unit on whom the comparison is being performed."
category = TC_NOTHING
returns = group
[[.args]]
type = real
default = "512"
min = 0
[[.args]]
type = location
default = "GetRectCenter"
[[.args]]
type = boolexpr

[GetUnitsOfPlayerAll]
title = "Units Owned By Player"
description = "Units owned by ${Player}"
comment =""
category = TC_NOTHING
returns = group
[[.args]]
type = player
default = "Player00"

[GetUnitsOfPlayerAndTypeId]
title = "Units Owned By Player Of Type"
description = "Units owned by ${Player} of type ${Unit-Type}"
comment =""
category = TC_NOTHING
returns = group
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unitcode
default = "hfoo"

[GetUnitsOfPlayerMatching]
title = "Units Owned By Player Matching Condition"
description = "Units owned by ${Player} matching ${Condition}"
comment = "Use 'Matching Unit' to refer to the unit on whom the comparison is being performed."
category = TC_NOTHING
returns = group
[[.args]]
type = player
default = "Player00"
[[.args]]
type = boolexpr

[GetUnitsOfTypeIdAll]
title = "Units Of Type"
description = "Units of type ${Unit-Type}"
comment =""
category = TC_NOTHING
returns = group
[[.args]]
type = unitcode
default = "hfoo"

[GetUnitsSelectedAll]
title = "Units Selected"
description = "Units currently selected by ${Player}"
comment = "This should not be used in trigger conditions."
category = TC_NOTHING
returns = group
[[.args]]
type = player
default = "Player00"

[CreateForce]
title = "Create Player Group  [R]"
description = "Create Empty Player Group "
comment = "Create a Player Group ."
category = TC_NOTHING
returns = force

[GetPlayersAll]
title = "All Players"
description = "All players"
comment = "Includes unused and neutral players."
category = TC_NOTHING
returns = force

[GetPlayersByMapControl]
title = "All Players Of Control"
description = "All players controlled by a ${Control Type} player"
comment =""
category = TC_NOTHING
returns = force
[[.args]]
type = mapcontrol
default = "MapControlComputer"

[GetPlayersMatching]
title = "All Players Matching Condition"
description = "All players matching ${Condition}"
comment = "Use 'Matching Player' to refer to the player on whom the comparison is being performed.  This includes unused and neutral players."
category = TC_NOTHING
returns = force
[[.args]]
type = boolexpr

[GetPlayersAllies]
title = "Allies Of Player"
description = "All allies of ${Player}"
comment = "All allies of the specified player, including him/herself."
category = TC_NOTHING
returns = force
[[.args]]
type = player
default = "Player00"

[GetPlayersEnemies]
title = "Enemies Of Player"
description = "All enemies of ${Player}"
comment = "All enemies of the specified player."
category = TC_NOTHING
returns = force
[[.args]]
type = player
default = "Player00"

[GetForceOfPlayer]
title = "Convert Player To Player Group"
description = "Player group(${Player})"
comment =""
category = TC_NOTHING
returns = force
[[.args]]
type = player
default = "Player00"

[GetPlayerRace]
title = "Race Of Player"
description = "Race of ${Player}"
comment =""
category = TC_NOTHING
returns = race
[[.args]]
type = player
default = "Player00"

[GetUnitRace]
title = "Race Of Unit"
description = "Race of ${Unit}"
comment =""
category = TC_NOTHING
returns = race
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetCurrentCameraSetup]
title = "Current Camera"
description = "Current camera"
comment =""
category = TC_NOTHING
returns = camerasetup

[CreateFogModifierRect]
title = "Create Fog Modifier (Rect) [R]"
description = "Create  Fog Modifier for ${Player}. Visible: ${FogStateVisible}, Rect: ${Rect} (For allies ${share} view, ${overwrite} unit view)"
comment = "Create a Fog Modifier ."
category = TC_NOTHING
returns = fogmodifier
[[.args]]
type = player
default = "Player00"
[[.args]]
type = fogstate
default = "FogStateVisible"
[[.args]]
type = rect
[[.args]]
type = sharevisionoption
default = "ShareVisionShare"
[[.args]]
type = converunitoption
default = "ConverUnitNot"

[CreateFogModifierRadius]
title = "Create Fog Modifier (Radius) [R]"
description = "Create 的 ${Player} Fog Modifier. Visible: ${FogStateVisible}, Center of Region:(${X},${Y}), Radius: ${value} (For allies ${share} view, ${overwrite} unit view)"
comment = "Create a Fog Modifier ."
category = TC_NOTHING
returns = fogmodifier
[[.args]]
type = player
default = "Player00"
[[.args]]
type = fogstate
default = "FogStateVisible"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "512"
[[.args]]
type = sharevisionoption
default = "ShareVisionShare"
[[.args]]
type = converunitoption
default = "ConverUnitNot"

[GetTriggeringTrigger]
title = "This Trigger"
description = "This trigger"
comment =""
category = TC_NOTHING
returns = trigger

[GetGameDifficulty]
title = "Difficulty Level"
description = "Difficulty level"
comment =""
category = TC_NOTHING
returns = gamedifficulty

[GetAIDifficulty]
title = "Melee AI Of Player"
description = "Melee AI of ${Player}"
comment =""
category = TC_NOTHING
returns = aidifficulty
[[.args]]
type = player
default = "Player00"

[GetGameSpeed]
title = "Current Game Speed"
description = "Current game speed"
comment =""
category = TC_NOTHING
returns = gamespeed

[GetPlayerController]
title = "Player Controller"
description = "${Player} controller"
comment =""
category = TC_NOTHING
returns = mapcontrol
[[.args]]
type = player
default = "Player00"

[GetPlayerColor]
title = "Color Of Player"
description = "Color of ${Player}"
comment =""
category = TC_NOTHING
returns = playercolor
[[.args]]
type = player
default = "Player00"

[GetPlayerSlotState]
title = "Player Slot Status"
description = "${Player} slot status"
comment =""
category = TC_NOTHING
returns = playerslotstate
[[.args]]
type = player
default = "Player00"

[AddSpecialEffect]
title = "Create Effect(At Coordinate) [R]"
description = "Create Effect ${Model File} 在(${X},${Y})处"
comment = "Create a Effect."
category = TC_NOTHING
returns = effect
[[.args]]
type = modelfile
default = "\"Abilities\\Spells\\Other\\TalkToMe\\TalkToMe.mdl\""
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[AddSpecialEffectLoc]
title = "Create Effect(At Point) [R]"
description = "Create Effect ${Model File} at ${Location}"
comment = "Create a Effect."
category = TC_NOTHING
returns = effect
[[.args]]
type = modelfile
default = "\"Abilities\\Spells\\Other\\TalkToMe\\TalkToMe.mdl\""
[[.args]]
type = location

[AddSpecialEffectTarget]
title = "Create Effect(At Unit) [R]"
description = "Create Effect ${Model File} and attach at ${Unit} on ${Attachment Point}"
comment = "Create a Effect."
category = TC_NOTHING
returns = effect
[[.args]]
type = modelfile
default = "\"Abilities\\Spells\\Other\\TalkToMe\\TalkToMe.mdl\""
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = string
default = "\"overhead\""

[AddSpellEffectById]
title = "Create Effect(Ability，At Coordinate) [R]"
description = "${Ability} with ${EffectType} , create at Coordinate(${X},${Y})"
comment = "Create a Effect."
category = TC_NOTHING
returns = effect
[[.args]]
type = abilcode
[[.args]]
type = effecttype
default = "EffectTypeEffect"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[AddSpellEffectByIdLoc]
title = "Create Effect(Ability, At Location) [R]"
description = "${Ability} with ${EffectType} , create at ${Location}"
comment = "Create a Effect."
category = TC_NOTHING
returns = effect
[[.args]]
type = abilcode
[[.args]]
type = effecttype
default = "EffectTypeEffect"
[[.args]]
type = location

[AddSpellEffectTargetById]
title = "Create Effect(Ability, At Unit) [R]"
description = "${Ability} with ${EffectType} , attach to ${Unit} on ${String}"
comment = "Create a Effect."
category = TC_NOTHING
returns = effect
[[.args]]
type = abilcode
[[.args]]
type = effecttype
default = "EffectTypeEffect"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = string
default = "\"overhead\""

[CreateImage]
title = "Create Image [R]"
description = " reate an image using: ${Image} of size:(${X},${Y},${Z}) at:(${X},${Y},${Z}) original point:(${X},${Y},${Z}) using image type: ${Type}"
comment = "Use 'Image - Change Render Always State' to toggle display of this image.  By default, images are not rendered.  The point specified is used as the bottom-left corner of the image.  Images need an alpha channel in order to be displayed properly."
category = TC_NOTHING
use_in_event = 0
returns = image
[[.args]]
type = string
default = "\"ReplaceableTextures\\Splats\\AuraRune9b.blp\""
[[.args]]
type = real
default = "256"
[[.args]]
type = real
default = "256"
[[.args]]
type = real
default = "256"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = imagetype
default = "ImageTypeIndicator"

[CreateUbersplat]
title = "Create Ubersplat [R]"
description = "Create ubersplat at(${X},${Y}) of type: ${Type}  with color(${Red},${Green},${Blue}) and  ${Transparency} transparency , (${Enable/Disable} paused state, ${Enble/Disable} skipping birth time)"
comment = "The color values are (Red, Green, Blue).  A 100% transparent color is completely invisible.  Use 'Ubersplat - Change Render Always State' to toggle display of this ubersplat.  By default, ubersplats are not rendered."
category = TC_NOTHING
use_in_event = 0
returns = ubersplat
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = ubersplattype
default = "UbersplatTypeNGOL"
[[.args]]
type = integer
default = "255"
[[.args]]
type = integer
default = "255"
[[.args]]
type = integer
default = "255"
[[.args]]
type = integer
default = "255"
[[.args]]
type = enabledisableoption
default = "EnableDisableDisable"
[[.args]]
type = enabledisableoption
default = "EnableDisableDisable"

[AddWeatherEffect]
title = "Create WeatherEffect [R]"
description = "Create at ${Rect} the weather effect ${WeatherId}"
comment = "Create a WeatherEffect."
category = TC_NOTHING
returns = weathereffect
[[.args]]
type = rect
[[.args]]
type = weathereffectcode

[TerrainDeformCrater]
title = "Create TerrainDeformCrater [R]"
description = "Create TerrainDeformCrater. Center:(${X},${Y}) Radius: ${Radius} Depth: ${Depth} Duration: ${Duration} Millisecond, Type: ${Type}"
comment = "Depth can be negative. Permanent terrain changes will not be recorded when saving games."
category = TC_NOTHING
returns = terraindeformation
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "512"
min = 0.01
[[.args]]
type = real
default = "96"
[[.args]]
type = integer
default = "4000"
min = 1
[[.args]]
type = cratertype
default = "CraterTypeTemporary"

[TerrainDeformRipple]
title = "Create TerrainDeformRipple [R]"
description = "Create TerrainDeformRipple, Center:(${X},${Y}) End Radius: ${Radius} Depth:${Depth} Duration: ${Duration} Millisecond, Count: ${Count} SpaceWave: ${SpaceWave} TimeWave: ${TimeWave} Start Radius Rate: ${value} Type: ${Type}"
comment = "Start raidus rate=Start Radius/End Radius."
category = TC_NOTHING
returns = terraindeformation
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "1024"
min = 0.01
[[.args]]
type = real
default = "96"
[[.args]]
type = integer
default = "1"
min = 1
[[.args]]
type = integer
default = "4000"
min = 1
[[.args]]
type = real
default = "4"
min = 0.01
[[.args]]
type = real
default = "16"
min = 0.01
[[.args]]
type = real
default = "1"
min = 0.01
[[.args]]
type = rippletype
default = "RippleTypeNormal"

[TerrainDeformWave]
title = "Create TerrainDeformWave [R]"
description = "Create TerrainDeformWave. Start Point:(${X},${Y}) Direction:(${X},${Y}) Distance: ${distance} Speed: ${speed} Radius: ${radius} Depth:${Depth} Delay: ${Delay} Millisecond, Count: ${Count}"
comment = "Depth can be negative. Direction formated as(X,Y), e.g. (1,1) means 45 degree."
category = TC_NOTHING
returns = terraindeformation
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "1"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "1024"
min = 0.01
[[.args]]
type = real
default = "1024"
min = 0.01
[[.args]]
type = real
default = "256"
min = 0.01
[[.args]]
type = real
default = "96"
min = 0.01
[[.args]]
type = integer
default = "1000"
min = 1
[[.args]]
type = integer
default = "1"
min = 1

[TerrainDeformRandom]
title = "Create TerrainDeformRandom [R]"
description = "Create TerrainDeformRandom, Center:(${X},${Y}) Radius: ${Radius} Min Depth: ${Depth} Max Depth: ${Depth} Duration: ${Duration} Millisecond, Period: ${Duration} Millisecond"
comment = ""
category = TC_NOTHING
returns = terraindeformation
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "1024"
min = 0.01
[[.args]]
type = real
default = "-96"
[[.args]]
type = real
default = "96"
[[.args]]
type = integer
default = "4000"
min = 1
[[.args]]
type = integer
default = "100"
min = 1

[DialogAddButton]
title = "Create Dialog Button [R]"
description = "Create a dialog button for ${Dialog} labelled ${text} with hotkey: ${HotKey}"
comment = "Create a Dialog Button."
category = TC_NOTHING
returns = button
[[.args]]
type = dialog
default = "GetClickedDialogBJ"
[[.args]]
type = StringExt
[[.args]]
type = hotkeyint
default = "HotKeyNull"

[CreateLeaderboard]
title = "Create Leaderboard [R]"
description = "Create 的空Leaderboard"
comment = "Create a Leaderboard."
category = TC_NOTHING
returns = leaderboard

[PlayerGetLeaderboardBJ]
title = "Leaderboard Of Player"
description = "Leaderboard of ${Player}"
comment = "Each player can have at most one leaderboard."
script_name = PlayerGetLeaderboard
category = TC_NOTHING
returns = leaderboard
[[.args]]
type = player
default = "Player00"

[CreateMultiboard]
title = "Create Multi Board [R]"
description = "Create 的空Multi Board"
comment = "Create a Multi Board."
category = TC_NOTHING
use_in_event = 0
returns = multiboard

[MultiboardGetItem]
title = "Multi Board Item [R]"
description = "Get item at ${Multi Board} in row ${X} column ${Y}"
comment = "(0,0)is the first Multi Board item,Create a Multi Board Item."
category = TC_NOTHING
use_in_event = 0
returns = multiboarditem
[[.args]]
type = multiboard
default = "bj_lastCreatedMultiboard"
[[.args]]
type = integer
default = "0"
[[.args]]
type = integer
default = "0"

[YDWECreateMover]
title = "新建运动器"
description = "新建运动器"
category = TC_NOTHING
returns = mover

[CreateTimer]
title = "Create Timer [R]"
description = "Create 的Timer"
comment = "Create a Timer."
category = TC_NOTHING
returns = timer

[YDWERemoveAttackWaveReturnTimer]
title = "YDWE Last Created Wave Timer[YDWE]"
description = "Last Created Wave Timer"
comment = "Response the Wave System"
category = TC_NOTHING
returns = timer

["            "]
title = "Custom Script"
description = "Script: ${Jass Script}"
comment = "Input a line of jass script"
category = TC_YDHIDE
returns = timer
[[.args]]
type = scriptcode

[CreateTrackable]
title = "Create Trackable [R]"
description = "Create Trackable, with Model: ${model name} , locate at: ( ${X} , ${Y}) facing to: ${value} degree"
comment = "Can use for get mouse event. Create a Trackable."
category = TC_NOTHING
returns = trackable
[[.args]]
type = modelfile
default = "\"Abilities\\Spells\\Human\\ThunderClap\\ThunderClapCaster.mdl\""
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = degree
default = "0"

["              "]
title = "Custom Script"
description = "Script: ${Jass Script}"
comment = "Input a line of jass script"
category = TC_YDHIDE
returns = hashtable
[[.args]]
type = scriptcode

[CreateTextTag]
title = "Create Text Tag [R]"
description = "Create Text Tag"
comment = "Create a Text Tag."
category = TC_NOTHING
use_in_event = 0
returns = texttag

[" UnitAddAbility"]
title = "Unit Add Ability [C]"
description = "For ${Unit} add ${Ability}"
comment = "Return true if add success."
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = abilcode

[" UnitRemoveAbility"]
title = "Unit Remove Ability [C]"
description = "For ${Unit} remove ${Ability}"
comment = "Return true if remove success."
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = abilcode

[IssueImmediateOrder]
title = "Issue Order With No Target"
description = "Order ${Unit}  to ${Order}"
comment = ""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unitordernotarg
default = "UnitOrderStop"

[IssuePointOrder]
title = "Issue Order Targeting A Point (Coordinate)"
description = "Order ${Unit} to ${Order} (${X},${Y})"
comment = ""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unitorderptarg
default = "UnitOrderMove"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[IssuePointOrderLoc]
title = "Issue Order Targeting A Point (Location)"
description = "Order ${Unit} to ${Order} ${Location}"
comment = ""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unitorderptarg
default = "UnitOrderMove"
[[.args]]
type = location

[IssueTargetOrder]
title = "Issue Order Targeting A Unit"
description = "Order ${Unit} to ${Order} ${Unit}"
comment = ""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unitorderutarg
default = "UnitOrderAttackUnit"
[[.args]]
type = unit

[IssueTargetDestructableOrder]
title = "Issue Order Targeting A Destructible"
description = "Order ${Unit} to ${Order} ${Destructable}"
comment = ""
script_name = IssueTargetOrder
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unitorderdtarg
default = "UnitOrderHarvestDestructible"
[[.args]]
type = destructable

[IssueTargetItemOrder]
title = "发布命令(指定Item)"
description = "对 ${Unit} 发布 ${Order} 命令到目标: ${Item}"
comment = ""
script_name = IssueTargetOrder
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unitorderitarg
default = "UnitOrderSmartItem"
[[.args]]
type = item

[IssueImmediateOrderById]
title = "发布命令(无目标)(ID)"
description = "对 ${Unit} 发布 ${Order} 命令"
comment = ""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = ordercodenotarg
default = "OrderCodeStop"

[IssuePointOrderById]
title = "发布命令(指定坐标)(ID)"
description = "对 ${Unit} 发布 ${Order} 命令到坐标:(${X},${Y})"
comment = ""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = ordercodeptarg
default = "OrderCodeMove"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[IssuePointOrderByIdLoc]
title = "发布命令(指定点)(ID)"
description = "对 ${Unit} 发布 ${Order} 命令到目标点: ${Location}"
comment = ""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = ordercodeptarg
default = "OrderCodeMove"
[[.args]]
type = location

[IssueTargetOrderById]
title = "发布命令(指定单位)(ID)"
description = "对 ${Unit} 发布 ${Order} 命令到目标: ${Unit}"
comment = ""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = ordercodeutarg
default = "OrderCodeAttackUnit"
[[.args]]
type = unit

[IssueTargetDestructableOrderById]
title = "发布命令(指定Destructable)(ID)"
description = "对 ${Unit} 发布 ${Order} 命令到目标: ${Destructable}"
comment = ""
script_name = IssueTargetOrderById
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = ordercodedtarg
default = "OrderCodeHarvestDestructible"
[[.args]]
type = destructable

[IssueTargetItemOrderById]
title = "发布命令(指定Item)(ID)"
description = "对 ${Unit} 发布 ${Order} 命令到目标: ${Item}"
comment = ""
script_name = IssueTargetOrderById
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = ordercodeitarg
default = "OrderCodeSmartItem"
[[.args]]
type = item

[IssueNeutralImmediateOrder]
title = "发布中介命令(无目标)"
description = "使 ${Player} 对 ${Unit} 发布 ${Order} 命令"
comment = "可以用来对非本Player单位发布命令."
category = TC_UNIT
returns = boolean
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unitordernotarg
default = "UnitOrderStop"

[IssueNeutralPointOrder]
title = "发布中介命令(指定坐标)"
description = "使 ${Player} 对 ${Unit} 发布 ${Order} 命令到坐标:(${X},${Y})"
comment = "可以用来对非本Player单位发布命令."
category = TC_UNIT
returns = boolean
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unitorderptarg
default = "UnitOrderNeutralDetectAOE"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[IssueNeutralTargetOrder]
title = "发布中介命令(指定单位)"
description = "使 ${Player} 对 ${Unit} 发布 ${Order} 命令到目标: ${Unit}"
comment = "可以用来对非本Player单位发布命令."
category = TC_UNIT
returns = boolean
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unitorderutarg
default = "UnitOrderNeutralInterAct"
[[.args]]
type = unit

[IssueNeutralTargetDestructableOrder]
title = "发布中介命令(指定Destructable)"
description = "使 ${Player} 对 ${Unit} 发布 ${Order} 命令到目标: ${Destructable}"
comment = "可以用来对非本Player单位发布命令."
script_name = IssueNeutralTargetOrder
category = TC_UNIT
returns = boolean
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unitorderdtarg
default = "UnitOrderHarvestDestructible"
[[.args]]
type = destructable

[IssueNeutralTargetItemOrder]
title = "发布中介命令(指定Item)"
description = "使 ${Player} 对 ${Unit} 发布 ${Order} 命令到目标: ${Item}"
comment = "可以用来对非本Player单位发布命令."
script_name = IssueNeutralTargetOrder
category = TC_UNIT
returns = boolean
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unitorderitarg
default = "UnitOrderSmartItem"
[[.args]]
type = item

[IssueNeutralImmediateOrderById]
title = "发布中介命令(无目标)(ID)"
description = "使 ${Player} 对 ${Unit} 发布 ${Order} 命令"
comment = "可以用来对非本Player单位发布命令."
category = TC_UNIT
returns = boolean
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = ordercodenotarg
default = "OrderCodeStop"

[IssueNeutralPointOrderById]
title = "发布中介命令(指定坐标)(ID)"
description = "使 ${Player} 对 ${Unit} 发布 ${Order} 命令到坐标:(${X},${Y})"
comment = "可以用来对非本Player单位发布命令."
category = TC_UNIT
returns = boolean
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = ordercodeptarg
default = "OrderCodeNeutralDetectAOE"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[IssueNeutralTargetOrderById]
title = "发布中介命令(指定单位)(ID)"
description = "使 ${Player} 对 ${Unit} 发布 ${Order} 命令到目标: ${Unit}"
comment = "可以用来对非本Player单位发布命令."
category = TC_UNIT
returns = boolean
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = ordercodeutarg
default = "OrderCodeNeutralInterAct"
[[.args]]
type = unit

[IssueNeutralTargetDestructableOrderById]
title = "发布中介命令(指定Destructable)(ID)"
description = "使 ${Player} 对 ${Unit} 发布 ${Order} 命令到目标: ${Destructable}"
comment = "可以用来对非本Player单位发布命令."
script_name = IssueNeutralTargetOrderById
category = TC_UNIT
returns = boolean
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = ordercodedtarg
default = "OrderCodeHarvestDestructible"
[[.args]]
type = destructable

[IssueNeutralTargetItemOrderById]
title = "发布中介命令(指定Item)(ID)"
description = "使 ${Player} 对 ${Unit} 发布 ${Order} 命令到目标: ${Item}"
comment = "可以用来对非本Player单位发布命令."
script_name = IssueNeutralTargetOrderById
category = TC_UNIT
returns = boolean
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = ordercodeitarg
default = "OrderCodeSmartItem"
[[.args]]
type = item

[YDWEIssueNeutralImmediateOrderById]
title = "发布中介命令(无目标)(自定义ID)"
description = "使 ${Player} 对 ${Unit} 发布 ${Order} 命令"
comment = "可以用来对非本Player单位发布命令，能直接输入数字命令ID。"
script_name = IssueNeutralImmediateOrderById
category = TC_UNIT
returns = boolean
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = ordercode
default = YDWEAbilityId2OrderId

[YDWEIssueNeutralPointOrderById]
title = "发布中介命令(指定坐标)(自定义ID)"
description = "使 ${Player} 对 ${Unit} 发布 ${Order} 命令到坐标:(${X},${Y})"
comment = "可以用来对非本Player单位发布命令，能直接输入数字命令ID。"
script_name = IssueNeutralPointOrderById
category = TC_UNIT
returns = boolean
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = ordercode
default = YDWEAbilityId2OrderId
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[YDWEIssueNeutralTargetOrderById]
title = "发布中介命令(指定单位)(自定义ID)"
description = "使 ${Player} 对 ${Unit} 发布 ${Order} 命令到目标: ${Unit}"
comment = "可以用来对非本Player单位发布命令，能直接输入数字命令ID。"
script_name = IssueNeutralTargetOrderById
category = TC_UNIT
returns = boolean
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = ordercode
default = YDWEAbilityId2OrderId
[[.args]]
type = unit

[YDWEIssueNeutralTargetDestructableOrderById]
title = "发布中介命令(指定Destructable)(自定义ID)"
description = "使 ${Player} 对 ${Unit} 发布 ${Order} 命令到目标: ${Destructable}"
comment = "可以用来对非本Player单位发布命令，能直接输入数字命令ID。"
script_name = IssueNeutralTargetOrderById
category = TC_UNIT
returns = boolean
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = ordercode
default = YDWEAbilityId2OrderId
[[.args]]
type = destructable

[YDWEIssueNeutralTargetItemOrderById]
title = "发布中介命令(指定Item)(自定义ID)"
description = "使 ${Player} 对 ${Unit} 发布 ${Order} 命令到目标: ${Item}"
comment = "可以用来对非本Player单位发布命令，能直接输入数字命令ID。"
script_name = IssueNeutralTargetOrderById
category = TC_UNIT
returns = boolean
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = ordercode
default = YDWEAbilityId2OrderId
[[.args]]
type = item

[IssueTrainOrderByIdBJ]
title = "发布训练/升级命令"
description = "命令 ${Unit} 建造/升级为 ${单位类型}"
comment = "该升级是指A单位升级为B单位,而不是科技升级."
script_name = IssueImmediateOrderById
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unitcode
default = "hfoo"

[IssueUpgradeOrderByIdBJ]
title = "发布研究科技命令"
description = "命令 ${Unit} 研究 ${Tech-Type}"
comment = ""
script_name = IssueImmediateOrderById
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = techcode
default = "Rhde"

[IssueBuildOrderById]
title = "发布建造命令(指定坐标) [R]"
description = "命令 ${Unit} 建造 ${单位类型} 在坐标:(${X},${Y})"
comment = ""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unitcode
default = "hbar"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[IssueBuildOrderByIdLocBJ]
title = "发布建造命令(指定点)"
description = "命令 ${Unit} 建造 ${单位类型} 在 ${Location}"
comment = ""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unitcode
default = "hbar"
[[.args]]
type = location

[UnitDropItemPoint]
title = "发布丢弃Item命令(指定坐标) [R]"
description = "命令 ${Unit} 丢弃Item ${Item} 到坐标:(${X},${Y})"
comment = ""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = item
default = "bj_lastCreatedItem"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[UnitDropItemPointLoc]
title = "发布丢弃Item命令(指定点)"
description = "命令 ${Unit} 丢弃Item ${Item} 到 ${Location}"
comment = ""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = item
default = "GetLastCreatedItem"
[[.args]]
type = location

[UnitDropItemSlot]
title = "移动Item到Item栏 [R]"
description = "命令 ${Unit} 移动 ${Item} 到Item栏# ${Index}"
comment = "只有当单位持有该Item时才有效. 注意: 该函数中Item栏编号从0-5,而不是1-6."
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = item
default = "bj_lastCreatedItem"
[[.args]]
type = integer
default = "0"
min = 0
max = 5

[UnitDropItemSlotBJ]
title = "移动Item到Item栏"
description = "命令 ${Unit} 移动 ${Item} 到Item栏第 ${Index} 格"
comment = "只有当单位持有该Item时才有效."
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = item
default = "GetLastCreatedItem"
[[.args]]
type = integer
default = "1"
min = 1
max = 6

[UnitDropItemTargetBJ]
title = "发布给予Item命令"
description = "命令 ${Unit} 把 ${Item} 给 ${Unit}"
comment = ""
script_name = UnitDropItemTarget
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = item
default = "GetLastCreatedItem"
[[.args]]
type = unit

[IssueBuyUnitOrder]
title = "发布购买单位命令 [R]"
description = "使 ${Player} 从 ${Unit} 处购买 ${单位类型}"
comment = ""
script_name = IssueNeutralImmediateOrderById
category = TC_UNIT
returns = boolean
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unitcode
default = "hfoo"

[IssueBuyItemOrder]
title = "发布购买Item命令 [R]"
description = "使 ${Player} 从 ${Unit} 处购买 ${Item Type}"
comment = "先让商店对Player单位发布'中立商店 - 选择'命令,再使用该函数就能实现指定单位的购买Item了."
script_name = IssueNeutralImmediateOrderById
category = TC_UNIT
returns = boolean
[[.args]]
type = player
default = "Player00"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = itemcode
default = "ckng"

[UnitDamagePoint]
title = "伤害区域 [R]"
description = "命令 ${Unit} 在 ${Seconds} 秒后对半径为 ${Size} 圆心为(${X},${Y})的范围造成 ${Amount} 点伤害(${是} 攻击伤害, ${是}远程攻击) 攻击类型: ${AttackType} 伤害类型: ${DamageType} 装甲类型: ${WeaponType}"
comment = "该动作不会打断单位动作. 由该动作伤害/杀死单位同样正常触发'受到伤害'和'死亡'单位Event."
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "500"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "100"
[[.args]]
type = isnotoption
default = "IsNotIs"
[[.args]]
type = isnotoption
default = "IsNotNot"
[[.args]]
type = attacktype
default = "AttackTypeNormal"
[[.args]]
type = damagetype
default = "DamageTypeNormal"
[[.args]]
type = weapontype
default = "WEAPON_TYPE_WHOKNOWS"

[UnitDamagePointLoc]
title = "伤害区域"
description = "命令 ${Unit} 在 ${Seconds} 秒后对半径为 ${Size} 圆心为 ${Location} 的范围造成${Amount} 点伤害,攻击类型: ${AttackType} 伤害类型: ${DamageType}"
comment = "该动作不会打断单位动作. 由该动作伤害/杀死单位同样正常触发'受到伤害'和'死亡'单位Event."
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "500"
[[.args]]
type = location
default = "GetRectCenter"
[[.args]]
type = real
default = "100"
[[.args]]
type = attacktype
default = "AttackTypeNormal"
[[.args]]
type = damagetype
default = "DamageTypeNormal"

[UnitDamageTarget]
title = "伤害目标 [R]"
description = "命令 ${Unit} 对 ${Target} 造成 ${Amount} 点伤害(${是} 攻击伤害, ${是}远程攻击) 攻击类型: ${AttackType} 伤害类型: ${DamageType} 武器类型: ${WeaponType}"
comment = "该动作不会打断单位动作. 由该动作伤害/杀死单位同样正常触发'受到伤害'和'死亡'单位Event."
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = real
default = "500"
[[.args]]
type = isnotoption
default = "IsNotIs"
[[.args]]
type = isnotoption
default = "IsNotNot"
[[.args]]
type = attacktype
default = "AttackTypeNormal"
[[.args]]
type = damagetype
default = "DamageTypeNormal"
[[.args]]
type = weapontype
default = "WEAPON_TYPE_WHOKNOWS"

[UnitDamageTargetBJ]
title = "伤害目标"
description = "命令 ${Unit} 对 ${Target} 造成 ${Amount} 点伤害,攻击类型: ${AttackType} 伤害类型: ${DamageType}"
comment = "该动作不会打断单位动作. 由该动作伤害/杀死单位同样正常触发'受到伤害'和'死亡'单位Event."
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = real
default = "500"
[[.args]]
type = attacktype
default = "AttackTypeNormal"
[[.args]]
type = damagetype
default = "DamageTypeNormal"

[IsUnit]
title = "单位检查"
description = "${Unit} 与 ${Unit}相同"
comment = "用来判断两个单位是否相等。"
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unit
default = "GetLastCreatedUnit"

[IsUnitDetected]
title = "被检测到"
description = "${Unit} 处在 ${Player} 的真实视野范围内"
comment = "用来判断单位在这个Player反隐形范围内，注：不包含该Player同盟的反隐范围。"
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = player
default = "Player00"

[IsUnitType]
title = "Unit Classification Check"
description = "${Unit} is ${Type}"
comment =""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unittype
default = "UnitTypeStructure"

[IsUnitRace]
title = "单位种族检查"
description = "${Unit} 是 ${Race}"
comment = ""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = race
default = "RaceHuman"

[IsUnitIdType]
title = "Unit-Type Classification Check"
description = "${Unit-Type} is ${Type}"
comment =""
category = TC_UNIT
returns = boolean
[[.args]]
type = unitcode
default = "GetUnitTypeId"
[[.args]]
type = unittype
default = "UnitTypeStructure"

[IsHeroUnitId]
title = "单位类型是英雄单位"
description = "${UnitType} 是英雄单位"
category = TC_UNIT
returns = boolean
[[.args]]
type = unitcode
default = "hfoo"

[IsUnitInGroup]
title = "Unit In Unit Group"
description = "${Unit} is in ${Unit Group}"
comment =""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = group

[IsUnitInRange]
title = "在指定单位范围内 [R]"
description = "${Unit} 在距离 ${指定单位} ${范围} 范围内"
comment = ""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unit
[[.args]]
type = real
default = "600"

[IsUnitInRangeXY]
title = "在指定坐标范围内 [R]"
description = "${Unit} 在距离坐标(${X},${Y}) ${范围} 范围内"
comment = ""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "600"

[IsUnitInRangeLoc]
title = "在指定点范围内 [R]"
description = "${Unit} 在距离 ${Location} ${范围} 范围内"
comment = ""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = location
[[.args]]
type = real
default = "600"

[RectContainsUnit]
title = "Unit In Region"
description = "${Region} contains ${Unit}"
comment =""
category = TC_UNIT
returns = boolean
[[.args]]
type = rect
default = "GetPlayableMapRect"
[[.args]]
type = unit
default = "GetTriggerUnit"

[IsUnitInRegion]
title = "在不规则区域内 [R]"
description = "${不规则区域} 内存在 ${Unit}"
comment = ""
category = TC_UNIT
returns = boolean
[[.args]]
type = region
[[.args]]
type = unit
default = "GetTriggerUnit"

[IsUnitAliveBJ]
title = "Unit Is Alive"
description = "${Unit} is alive"
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"

[IsUnitDeadBJ]
title = "Unit Is Dead"
description = "${Unit} is dead"
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"

[IsUnitPausedBJ]
title = "Unit Is Paused"
description = "${Unit} is paused"
comment =""
script_name = IsUnitPaused
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"

[IsUnitHiddenBJ]
title = "Unit Is Hidden"
description = "${Unit} is hidden"
comment = "A unit can be hidden with the 'Unit - Hide' trigger action, or by placing the unit into a transport, Soul Gem, altar, etc."
script_name = IsUnitHidden
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"

[IsUnitIllusionBJ]
title = "Unit Is An Illusion"
description = "${Unit} is an illusion"
comment =""
script_name = IsUnitIllusion
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"

[UnitCanSleepPerm]
title = "Unit Sleeps"
description = "${Unit} sleeps when unprovoked"
comment = "Units owned by players 1 through 12 never sleep."
script_name = UnitCanSleepPerm
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"

[UnitCanSleepBJ]
title = "Unit Sleeps At Night"
description = "${Unit} sleeps when unprovoked at night"
comment = "Units owned by players 1 through 12 never sleep."
script_name = UnitCanSleep
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"

[UnitIsSleepingBJ]
title = "Unit Is Sleeping"
description = "${Unit} is sleeping"
comment = "Units owned by players 1 through 12 never sleep."
script_name = UnitIsSleeping
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"

[DoesUnitGenerateAlarms]
title = "Unit Generates Alarms"
description = "${Unit} generates alarms"
comment =""
category = TC_UNIT
use_in_event = 0
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"

[IsUnitLoadedBJ]
title = "Unit Is Being Transported"
description = "${Unit} is being transported"
comment =""
script_name = IsUnitLoaded
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"

[IsUnitInTransportBJ]
title = "Unit Is In Transport"
description = "${Unit} is loaded into ${Transport}"
comment =""
script_name = IsUnitInTransport
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unit

[IsUnitSelected]
title = "Unit Selected By Player"
description = "${Unit} is selected by ${Player}"
comment =""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = player
default = "Player00"

[IsUnitAlly]
title = "Unit Belongs To An Ally Of Player"
description = "${Unit} belongs to an ally of ${Player}"
comment =""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = player
default = "Player00"

[IsUnitEnemy]
title = "Unit Belongs To An Enemy Of Player"
description = "${Unit} belongs to an enemy of ${Player}"
comment =""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = player
default = "Player00"

[IsUnitOwnedByPlayer]
title = "是Player的单位"
description = "${Unit} 属于 ${Player}"
comment = "判断单位是否属于这个Player。"
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = player
default = "Player00"

[IsUnitInForce]
title = "是Player Group 里Player的单位"
description = "${Unit} 属于 ${Player Group} 里的Player"
comment = "判断单位是否属于这个Player Group 里的Player。"
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = force
default = "GetPlayersAll"

[UnitHasBuffBJ]
title = "Unit Has Specific Buff"
description = "${Unit} has buff ${Buff}"
comment =""
category = TC_UNIT
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = buffcode

[CountUnitsInGroup]
title = "Count Units In Unit Group"
description = "Number of units in ${Unit Group}"
comment =""
category = TC_UNIT
returns = integer
[[.args]]
type = group
default = "GetUnitsInRectAll"

[CountLivingPlayerUnitsOfTypeId]
title = "Count Living Units Owned By Player"
description = "Number of living ${Unit-Type} units owned by ${Player}"
comment =""
category = TC_UNIT
returns = integer
[[.args]]
type = unitcode
default = "hfoo"
[[.args]]
type = player
default = "Player00"

[GetUnitFoodUsed]
title = "Supply Used By Unit"
description = "Supply used by ${Unit}"
comment =""
category = TC_UNIT
returns = integer
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitFoodMade]
title = "Supply Provided By Unit"
description = "Supply provided by ${Unit}"
comment =""
category = TC_UNIT
returns = integer
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetFoodUsed]
title = "Supply Used By Unit-Type"
description = "Supply used by ${Unit-Type}"
comment =""
category = TC_UNIT
returns = integer
[[.args]]
type = unitcode
default = "hfoo"

[GetFoodMade]
title = "Supply Provided By Unit-Type"
description = "Supply provided by ${Unit-Type}"
comment =""
category = TC_UNIT
returns = integer
[[.args]]
type = unitcode
default = "hfoo"

[GetUnitPointValue]
title = "Point-Value Of Unit"
description = "Point-value of ${Unit}"
comment =""
category = TC_UNIT
returns = integer
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitPointValueByType]
title = "Point-Value Of Unit-Type"
description = "Point-value of ${Unit-Type}"
comment =""
category = TC_UNIT
returns = integer
[[.args]]
type = unitcode
default = "hfoo"

[GetUnitUserData]
title = "Custom Value Of Unit"
description = "Custom value of ${Unit}"
comment = "Use 'Unit - Set Custom Value' to set the custom value of a unit."
category = TC_UNIT
returns = integer
[[.args]]
type = unit

[GetUnitLevel]
title = "Level Of Unit"
description = "Level of ${Unit}"
comment = "This may be used for heroes and regular units."
category = TC_UNIT
returns = integer
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitAbilityLevel]
title = "单位Ability等级 [R]"
description = "${Unit} 的 ${Ability} Ability等级"
comment = "如果单位没有该Ability,则返回0."
category = TC_UNIT
returns = integer
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = abilcode

[GetUnitAbilityLevelSwapped]
title = "Level Of Ability For Unit"
description = "Level of ${Ability} for ${Unit}"
comment = "If the unit does not have the ability, the result will be zero."
category = TC_UNIT
returns = integer
[[.args]]
type = abilcode
[[.args]]
type = unit
default = "GetTriggerUnit"

[UnitInventoryCount]
title = "Count Items Carried"
description = "Number of items carried by ${Unit}"
comment =""
category = TC_UNIT
returns = integer
[[.args]]
type = unit
default = "GetTriggerUnit"

[UnitInventorySizeBJ]
title = "Size of Inventory"
description = "Size of inventory for ${Unit}"
comment =""
script_name = UnitInventorySize
category = TC_UNIT
returns = integer
[[.args]]
type = unit
default = "GetTriggerUnit"

[UnitCountBuffsEx]
title = "拥有Buff数量 [R]"
description = "${Unit} 的附带Buff数量,(${Include/Exclude} 正面Buff, ${Include/Exclude} 负面Buff${Include/Exclude} 魔法Buff, ${Include/Exclude} 物理Buff${Include/Exclude} 生命周期, ${Include/Exclude} 光环效果${Include/Exclude} 不可驱散Buff)"
comment = ""
category = TC_UNIT
returns = integer
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = includeoption
default = "InclusionInclude"
[[.args]]
type = includeoption
default = "InclusionInclude"
[[.args]]
type = includeoptionnot
default = "InclusionIncludeNot"
[[.args]]
type = includeoptionnot
default = "InclusionIncludeNot"
[[.args]]
type = includeoption
default = "InclusionInclude"
[[.args]]
type = includeoption
default = "InclusionInclude"
[[.args]]
type = includeoptionnot
default = "InclusionIncludeNot"

[UnitCountBuffsExBJ]
title = "Count Buffs By Type"
description = "Number of ${Buff Type} buffs considered ${Buff Resist} on ${Unit} (${Include/Exclude} expiration timers, ${Include/Exclude} auras)"
comment =""
category = TC_UNIT
returns = integer
[[.args]]
type = buffpolarity
default = "BuffPolarityEither"
[[.args]]
type = buffresist
default = "BuffResistEither"
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = includeoption
default = "InclusionInclude"
[[.args]]
type = includeoption
default = "InclusionInclude"

[GetUnitState]
title = "属性 [R]"
description = "${Unit} 的 ${Property}"
comment = ""
category = TC_UNIT
returns = real
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = unitstate
default = "UnitStateLife"

[GetUnitStateSwap]
title = "Property"
description = "${Property} of ${Unit}"
comment =""
category = TC_UNIT
returns = real
[[.args]]
type = unitstate
default = "UnitStateLife"
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitLifePercent]
title = "Percentage Life"
description = "Percentage life of ${Unit}"
comment =""
category = TC_UNIT
returns = real
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitManaPercent]
title = "Percentage Mana"
description = "Percentage mana of ${Unit}"
comment =""
category = TC_UNIT
returns = real
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitX]
title = "单位所在X轴坐标 [R]"
description = "${Unit} 所在X轴坐标"
comment = ""
category = TC_UNIT
returns = real
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitY]
title = "单位所在Y轴坐标 [R]"
description = "${Unit} 所在Y轴坐标"
comment = ""
category = TC_UNIT
returns = real
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitFacing]
title = "Facing Angle"
description = "Facing of ${Unit}"
comment = "The angle returned is in degrees, with 0 facing east."
category = TC_UNIT
returns = degree
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitMoveSpeed]
title = "Movement Speed (Current)"
description = "Current movement speed of ${Unit}"
comment = "Movement speeds commonly range from 150 to 300."
category = TC_UNIT
returns = real
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitDefaultMoveSpeed]
title = "Movement Speed (Default)"
description = "Default movement speed of ${Unit}"
comment = "Movement speeds commonly range from 150 to 300."
category = TC_UNIT
returns = real
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitAcquireRange]
title = "Acquisition Range (Current)"
description = "Current acquisition range of ${Unit}"
comment =""
category = TC_UNIT
returns = real
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitDefaultAcquireRange]
title = "Acquisition Range (Default)"
description = "Default acquisition range of ${Unit}"
comment =""
category = TC_UNIT
returns = real
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitTurnSpeed]
title = "Turn Speed (Current)"
description = "Current turn speed of ${Unit}"
comment = "A unit's turn speed determines how quickly the unit changes direction.  Turn speed values are expected to be between 0 and 1, with smaller numbers indicating slower turning rates."
category = TC_UNIT
returns = real
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitDefaultTurnSpeed]
title = "Turn Speed (Default)"
description = "Default turn speed of ${Unit}"
comment = "A unit's turn speed determines how quickly the unit changes direction.  Turn speed values are expected to be between 0 and 1, with smaller numbers indicating slower turning rates."
category = TC_UNIT
returns = real
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitPropWindow]
title = "当前转向角度(弧度制) [R]"
description = "${Unit} 的当前转向角度(弧度制)"
comment = "单位转身时的转向角度. 数值越大转向幅度越大. "
category = TC_UNIT
returns = radian
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitPropWindowBJ]
title = "Prop Window Angle (Current)"
description = "Current prop window angle of ${Unit}"
comment =""
category = TC_UNIT
returns = degree
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitDefaultPropWindowBJ]
title = "Prop Window Angle (Default)"
description = "Default prop window angle of ${Unit}"
comment =""
script_name = GetUnitDefaultPropWindow
category = TC_UNIT
returns = degree
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitFlyHeight]
title = "Flying Height (Current)"
description = "Current flying height of ${Unit}"
comment = "Only flying units use flying heights."
category = TC_UNIT
returns = real
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitDefaultFlyHeight]
title = "Flying Height (Default)"
description = "Default flying height of ${Unit}"
comment =""
category = TC_UNIT
returns = real
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitName]
title = "Unit Name"
description = "Name of ${Unit}"
comment = "This returns the internal name of a unit, not the proper name of units or Heroes."
category = TC_UNIT
returns = string
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitLoc]
title = "Position Of Unit"
description = "Position of ${Unit}"
comment =""
category = TC_UNIT
returns = location
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitRallyPoint]
title = "Rally-Point As Point"
description = "Rally-Point of ${Unit} as a point"
comment = "If the unit has no rally-point set, the result will be (0,0)"
category = TC_UNIT
returns = location
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitRallyUnit]
title = "Rally-Point As Unit"
description = "Rally-Point of ${Unit} as a unit"
comment = "If the unit does not have a rally-point set to a unit, this will return 'No unit'."
category = TC_UNIT
use_in_event = 0
returns = unit
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitCurrentOrder]
title = "Current Order Of Unit"
description = "Current order of ${Unit}"
comment =""
category = TC_UNIT
use_in_event = 0
returns = ordercode
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetUnitRallyDestructable]
title = "Rally-Point As Destructible"
description = "Rally-Point of ${Unit} as a destructible"
comment = "If the unit does not have a rally-point set to a destructible, this will return 'No destructible'."
category = TC_UNIT
use_in_event = 0
returns = destructable
[[.args]]
type = unit
default = "GetTriggerUnit"

[" CreateNUnitsAtLoc"]
title = "创建单位(面向角度) [C]"
description = "创建 ${Number} 个 ${单位} 给 ${Player} 在 ${指定点} ,面向角度为 ${Direction} 度"
comment = "面向角度采用角度制,0度为正东方向,90度为正北方向. 使用'最后创建的单位组'来获取创建的所有单位. 使用'最后创建的单位'来获取创建的单个单位."
category = TC_UNIT
returns = group
[[.args]]
type = integer
default = "1"
min = 1
[[.args]]
type = unitcode
default = "hfoo"
[[.args]]
type = player
default = "Player00"
[[.args]]
type = location
[[.args]]
type = degree
default = "RealUnitFacing"
min = 0
max = 360

[IsTriggerEnabled]
title = "Trigger Is On"
description = "${Trigger} is on"
comment =""
category = TC_TRIGGER
returns = boolean
[[.args]]
type = trigger
default = "GetTriggeringTrigger"

[TriggerEvaluate]
title = "Evaluate Trigger Conditions"
description = "Evaluate ${Trigger} conditions"
comment =""
category = TC_TRIGGER
returns = boolean
[[.args]]
type = trigger

[IsTriggerQueuedBJ]
title = "Trigger Is Queued"
description = "${Trigger} is queued"
comment = "Use 'Trigger - Add To Trigger Queue' and 'Trigger - Remove From Trigger Queue' to manipulate the trigger queue."
category = TC_TRIGGER
returns = boolean
[[.args]]
type = trigger

[IsTriggerQueueEmptyBJ]
title = "Trigger Queue Is Empty"
description = "The trigger queue is empty"
comment = "Use 'Trigger - Add To Trigger Queue' and 'Trigger - Remove From Trigger Queue' to manipulate the trigger queue."
category = TC_TRIGGER
returns = boolean

[GetTriggerEvalCount]
title = "Trigger Evaluation Count"
description = "Evaluation count of ${Trigger}"
comment =""
category = TC_TRIGGER
returns = integer
[[.args]]
type = trigger
default = "GetTriggeringTrigger"

[GetTriggerExecCount]
title = "Trigger Execution Count"
description = "Execution count of ${Trigger}"
comment =""
category = TC_TRIGGER
returns = integer
[[.args]]
type = trigger
default = "GetTriggeringTrigger"

[QueuedTriggerCountBJ]
title = "Count Triggers In Trigger Queue"
description = "Number of triggers in the trigger queue"
comment = "Use 'Trigger - Add To Trigger Queue' and 'Trigger - Remove From Trigger Queue' to manipulate the trigger queue."
category = TC_TRIGGER
returns = integer

[GetTriggerName]
title = "Trigger Name"
description = "Name of the current trigger"
comment = "Returns the name, as entered in the editor, of the trigger which contains this function."
category = TC_TRIGGER
returns = string

[CreateTrigger]
title = "Create 触发 [R]"
description = "Create 触发"
comment = "Create a 一个新的Trigger,如果对该功能不熟悉请慎用."
category = TC_TRIGGER
returns = trigger

[IsUnitGroupEmptyBJ]
title = "Unit Group Is Empty"
description = "${Unit Group} is empty"
comment = "This is true if the unit group contains no units."
category = TC_UNITGROUP
returns = boolean
[[.args]]
type = group

[IsUnitGroupInRectBJ]
title = "Units Of Unit Group Are In Region"
description = "All units of ${Unit Group} are in ${Region}"
comment = "This is true if every unit in the unit group is in the given region."
category = TC_UNITGROUP
returns = boolean
[[.args]]
type = group
[[.args]]
type = rect

[IsUnitGroupDeadBJ]
title = "Units Of Unit Group Are Dead"
description = "All units of ${Unit Group} are dead"
comment = "This is true if every unit in the unit group is dead."
category = TC_UNITGROUP
returns = boolean
[[.args]]
type = group

[IsMultiboardDisplayed]
title = "Multiboard Is Showing"
description = "${Multiboard} is showing"
comment =""
category = TC_MULTIBOARD
use_in_event = 0
returns = boolean
[[.args]]
type = multiboard
default = "GetLastCreatedMultiboard"

[IsMultiboardMinimized]
title = "Multiboard Is Minimized"
description = "${Multiboard} is minimized"
comment =""
category = TC_MULTIBOARD
use_in_event = 0
returns = boolean
[[.args]]
type = multiboard
default = "GetLastCreatedMultiboard"

[MultiboardGetRowCount]
title = "Row Count"
description = "Number of rows in ${Multiboard}"
comment =""
category = TC_MULTIBOARD
returns = integer
[[.args]]
type = multiboard
default = "GetLastCreatedMultiboard"

[MultiboardGetColumnCount]
title = "Column Count"
description = "Number of columns in ${Multiboard}"
comment =""
category = TC_MULTIBOARD
returns = integer
[[.args]]
type = multiboard
default = "GetLastCreatedMultiboard"

[MultiboardGetTitleText]
title = "Multiboard Title"
description = "Title of ${Multiboard}"
comment =""
category = TC_MULTIBOARD
returns = string
[[.args]]
type = multiboard
default = "GetLastCreatedMultiboard"

[IsPointBlighted]
title = "坐标点被荒芜地表覆盖 [R]"
description = "坐标点(${X},${Y})被荒芜地表覆盖"
comment = ""
category = TC_ENVIRONMENT
returns = boolean
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[IsPointBlightedBJ]
title = "Point Is Blighted"
description = "${Point} is blighted"
comment =""
category = TC_ENVIRONMENT
returns = boolean
[[.args]]
type = location

[IsTerrainPathable]
title = "地形通行状态关闭(指定坐标) [R]"
description = "坐标(${X},${Y})处的 ${Pathing Type} 通行状态为关闭"
comment = "指定类型单位不能通行即通行状态为关闭. 如该点不能造建筑就是'建造'通行状态为关闭. 可使用'环境 - 设置地形通行状态'来改变通行状态."
category = TC_ENVIRONMENT
returns = boolean
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = pathingtype
default = "PathingTypeWalkability"

[IsTerrainPathableBJ]
title = "Terrain Pathing Is Off"
description = "Terrain pathing at ${Location} of type ${Pathing Type} is off"
comment = "Terrain pathing is off if it is not pathable to the given pathing type.  For example, 'Buildability' is off if the pathing cell is unbuildable.  Use 'Environment - Turn Terrain Pathing On/Off' to change terrain pathing."
category = TC_ENVIRONMENT
returns = boolean
[[.args]]
type = location
[[.args]]
type = pathingtype
default = "PathingTypeWalkability"

[GetTerrainCliffLevel]
title = "地形悬崖高度(指定坐标) [R]"
description = "坐标(${X},${Y})处的地形悬崖高度"
comment = "悬崖高度:深水区为0, 浅水区为1, 平原为2, 之后每层+1."
category = TC_ENVIRONMENT
returns = integer
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[GetTerrainCliffLevelBJ]
title = "Terrain Cliff Level"
description = "Terrain cliff level at ${Location}"
comment = "Cliff level values start at zero."
category = TC_ENVIRONMENT
returns = integer
[[.args]]
type = location

[GetTerrainVariance]
title = "地形样式(指定坐标) [R]"
description = "坐标(${X},${Y})处的地形样式"
comment = ""
category = TC_ENVIRONMENT
returns = integer
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[GetTerrainVarianceBJ]
title = "Terrain Variance"
description = "Terrain variance at ${Location}"
comment =""
category = TC_ENVIRONMENT
returns = integer
[[.args]]
type = location
default = "GetRectCenter"

[GetTerrainType]
title = "指定坐标地形 [R]"
description = "坐标(${X},${Y})处的地形"
comment = ""
category = TC_ENVIRONMENT
returns = terraintype
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[GetTerrainTypeBJ]
title = "Terrain Type"
description = "Terrain type at ${Location}"
comment =""
category = TC_ENVIRONMENT
returns = terraintype
[[.args]]
type = location

[IsFogEnabled]
title = "Fog Of War Enabled"
description = "Fog of war is enabled"
comment =""
category = TC_VISIBILITY
returns = boolean

[IsFogMaskEnabled]
title = "Black Mask Enabled"
description = "Black mask is enabled"
comment =""
category = TC_VISIBILITY
returns = boolean

[IsUnitVisible]
title = "Unit Is Visible To Player"
description = "${Unit} is visible to ${Player}"
comment =""
category = TC_VISIBILITY
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = player
default = "Player00"

[IsUnitInvisible]
title = "Unit Is Invisible To Player"
description = "${Unit} is invisible to ${Player}"
comment =""
category = TC_VISIBILITY
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = player
default = "Player00"

[IsUnitFogged]
title = "Unit Fogged To Player"
description = "${Unit} is fogged to ${Player}"
comment =""
category = TC_VISIBILITY
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = player
default = "Player00"

[IsUnitMasked]
title = "Unit Is Masked To Player"
description = "${Unit} is masked to ${Player}"
comment =""
category = TC_VISIBILITY
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = player
default = "Player00"

[IsLocationVisibleToPlayer]
title = "Point Visible To Player"
description = "${Point} is visible to ${Player}"
comment =""
category = TC_VISIBILITY
returns = boolean
[[.args]]
type = location
default = "GetRectCenter"
[[.args]]
type = player
default = "Player00"

[IsVisibleToPlayer]
title = "坐标可见"
description = "坐标(${x},${y}) 对 ${Player} 可见"
comment = ""
category = TC_VISIBILITY
returns = boolean
[[.args]]
type = real
[[.args]]
type = real
[[.args]]
type = player
default = "Player00"

[IsLocationFoggedToPlayer]
title = "Point Fogged To Player"
description = "${Point} is fogged for ${Player}"
comment =""
category = TC_VISIBILITY
returns = boolean
[[.args]]
type = location
default = "GetRectCenter"
[[.args]]
type = player
default = "Player00"

[IsFoggedToPlayer]
title = "坐标在迷雾中"
description = "坐标(${x},${y}) 在 ${Player} 的迷雾范围内"
comment = "黑色阴影内的坐标不被计算在内。"
category = TC_VISIBILITY
returns = boolean
[[.args]]
type = real
[[.args]]
type = real
[[.args]]
type = player
default = "Player00"

[IsLocationMaskedToPlayer]
title = "Point Masked To Player"
description = "${Point} is masked for ${Player}"
comment =""
category = TC_VISIBILITY
returns = boolean
[[.args]]
type = location
default = "GetRectCenter"
[[.args]]
type = player
default = "Player00"

[IsMaskedToPlayer]
title = "坐标在黑色阴影中"
description = "坐标(${x},${y}) 在 ${Player} 的黑色阴影内"
comment = ""
category = TC_VISIBILITY
returns = boolean
[[.args]]
type = real
[[.args]]
type = real
[[.args]]
type = player
default = "Player00"

[IsDestructableAliveBJ]
title = "Destructible Is Alive"
description = "${Destructible} is alive"
comment =""
category = TC_DESTRUCT
returns = boolean
[[.args]]
type = destructable
default = "GetLastCreatedDestructable"

[IsDestructableDeadBJ]
title = "Destructible Is Dead"
description = "${Destructible} is dead"
comment =""
category = TC_DESTRUCT
returns = boolean
[[.args]]
type = destructable
default = "GetLastCreatedDestructable"

[IsDestructableInvulnerableBJ]
title = "Destructible Is Invulnerable"
description = "${Destructible} is invulnerable"
comment =""
script_name = IsDestructableInvulnerable
category = TC_DESTRUCT
returns = boolean
[[.args]]
type = destructable
default = "GetLastCreatedDestructable"

[GetElevatorHeight]
title = "Elevator Height"
description = "Height of ${Elevator}"
comment = "An elevator's height can be changed using the 'Destructible - Set Elevator Height' action."
category = TC_DESTRUCT
returns = integer
[[.args]]
type = destructable

[GetDestructableLife]
title = "Life"
description = "Current life of ${Destructible}"
comment = "Destructibles lose life when attacked or harvested.  Like units, destructibles die when their life reaches 0."
category = TC_DESTRUCT
returns = real
[[.args]]
type = destructable
default = "GetLastCreatedDestructable"

[GetDestructableMaxLife]
title = "Max Life"
description = "Max life of ${Destructible}"
comment = "Destructibles lose life when attacked or harvested.  Like units, destructibles die when their life reaches 0."
category = TC_DESTRUCT
returns = real
[[.args]]
type = destructable
default = "GetLastCreatedDestructable"

[GetDestructableOccluderHeight]
title = "Occlusion Height"
description = "Occlusion height of ${Destructible}"
comment =""
category = TC_DESTRUCT
returns = real
[[.args]]
type = destructable
default = "GetLastCreatedDestructable"

[GetDestructableX]
title = "Destructable所在X轴坐标 [R]"
description = "${Destructable} 所在X轴坐标"
comment = ""
category = TC_DESTRUCT
returns = real
[[.args]]
type = destructable
default = "GetLastCreatedDestructable"

[GetDestructableY]
title = "Destructable所在Y轴坐标 [R]"
description = "${Destructable} 所在Y轴坐标"
category = TC_DESTRUCT
returns = real
[[.args]]
type = destructable
default = "GetLastCreatedDestructable"

[GetDestructableName]
title = "Destructible Name"
description = "Name of ${Destructible}"
comment =""
category = TC_DESTRUCT
returns = string
[[.args]]
type = destructable
default = "GetLastCreatedDestructable"

[GetDestructableLoc]
title = "Position Of Destructible"
description = "Position of ${Destructible}"
comment =""
category = TC_DESTRUCT
returns = location
[[.args]]
type = destructable
default = "GetLastCreatedDestructable"

[LeaderboardHasPlayerItemBJ]
title = "Leaderboard Contains Player"
description = "${Leaderboard} contains ${Player}"
comment =""
script_name = LeaderboardHasPlayerItem
category = TC_LEADERBOARD
returns = boolean
[[.args]]
type = leaderboard
default = "GetLastCreatedLeaderboard"
[[.args]]
type = player
default = "Player00"

[LeaderboardGetPlayerIndexBJ]
title = "Leaderboard Position"
description = "Position of ${Player} in ${Leaderboard}"
comment =""
category = TC_LEADERBOARD
returns = integer
[[.args]]
type = player
default = "Player00"
[[.args]]
type = leaderboard
default = "GetLastCreatedLeaderboard"

[LeaderboardGetItemCount]
title = "行数"
description = "${Leaderboard} 的行数"
comment = ""
category = TC_LEADERBOARD
returns = integer
[[.args]]
type = leaderboard
default = "GetLastCreatedLeaderboard"

[LeaderboardGetIndexedPlayerBJ]
title = "Player In Position"
description = "Player in position ${Position} of ${Leaderboard}"
comment =""
category = TC_LEADERBOARD
use_in_event = 0
returns = player
[[.args]]
type = integer
default = "1"
min = 1
max = 16
[[.args]]
type = leaderboard
default = "GetLastCreatedLeaderboard"

[IsPointInRegion]
title = "包含坐标"
description = "${不规则区域} 内包含坐标(${X},${Y})"
comment = "TC_REGION"
category = TC_REGION
returns = boolean
[[.args]]
type = region
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[IsLocationInRegion]
title = "包含点"
description = "${不规则区域} 内包含点: ${点}"
comment = "TC_REGION"
category = TC_REGION
returns = boolean
[[.args]]
type = region
[[.args]]
type = location

[RectContainsLoc]
title = "Region Contains Point"
description = "${Region} contains ${Point}"
comment =""
category = TC_RECT
returns = boolean
[[.args]]
type = rect
default = "GetPlayableMapRect"
[[.args]]
type = location

[GetRectCenterX]
title = "Center X Of Region"
description = "Center X of ${Region}"
comment =""
category = TC_RECT
returns = real
[[.args]]
type = rect
default = "GetPlayableMapRect"

[GetRectCenterY]
title = "Center Y Of Region"
description = "Center Y of ${Region}"
comment =""
category = TC_RECT
returns = real
[[.args]]
type = rect
default = "GetPlayableMapRect"

[GetRectMinX]
title = "Min X Of Region"
description = "Min X of ${Region}"
comment =""
category = TC_RECT
returns = real
[[.args]]
type = rect
default = "GetPlayableMapRect"

[GetRectMinY]
title = "Min Y Of Region"
description = "Min Y of ${Region}"
comment =""
category = TC_RECT
returns = real
[[.args]]
type = rect
default = "GetPlayableMapRect"

[GetRectMaxX]
title = "Max X Of Region"
description = "Max X of ${Region}"
comment =""
category = TC_RECT
returns = real
[[.args]]
type = rect
default = "GetPlayableMapRect"

[GetRectMaxY]
title = "Max Y Of Region"
description = "Max Y of ${Region}"
comment =""
category = TC_RECT
returns = real
[[.args]]
type = rect
default = "GetPlayableMapRect"

[GetRectWidthBJ]
title = "Width Of Region"
description = "Width of ${Region}"
comment =""
category = TC_RECT
returns = real
[[.args]]
type = rect

[GetRectHeightBJ]
title = "Height Of Region"
description = "Height of ${Region}"
comment =""
category = TC_RECT
returns = real
[[.args]]
type = rect

[IsQuestItemCompleted]
title = "Quest Requirement Is Completed"
description = "${Quest Requirement} is completed"
comment =""
category = TC_QUEST
returns = boolean
[[.args]]
type = questitem
default = "GetLastCreatedQuestItemBJ"

[IsQuestEnabled]
title = "Quest Is Enabled"
description = "${Quest} is enabled"
comment =""
category = TC_QUEST
returns = boolean
[[.args]]
type = quest
default = "GetLastCreatedQuestBJ"

[IsQuestCompleted]
title = "Quest Is Completed"
description = "${Quest} is completed"
comment =""
category = TC_QUEST
returns = boolean
[[.args]]
type = quest
default = "GetLastCreatedQuestBJ"

[IsQuestFailed]
title = "Quest Is Failed"
description = "${Quest} is failed"
comment =""
category = TC_QUEST
returns = boolean
[[.args]]
type = quest
default = "GetLastCreatedQuestBJ"

[IsQuestDiscovered]
title = "Quest Is Discovered"
description = "${Quest} is discovered"
comment =""
category = TC_QUEST
returns = boolean
[[.args]]
type = quest
default = "GetLastCreatedQuestBJ"

[IsQuestRequired]
title = "Quest Is Required"
description = "${Quest} is required"
comment =""
category = TC_QUEST
returns = boolean
[[.args]]
type = quest
default = "GetLastCreatedQuestBJ"

[CreateQuest]
title = "Create Quest [R]"
description = "Create Quest "
comment = "Create 一个Quest.注：这条毫无用处，别用——everguo"
category = TC_QUEST
returns = quest

[YDWECreateQuest]
title = "Create Quest[YDWE]"
description = "Create 一个 ${Quest Type} Quest,标题: ${文字} Quest说明: ${文字} Quest图标: ${Icon Path}"
comment = "Create 一个Quest；YDWE新增。"
script_name = CreateQuestBJ
category = TC_QUEST
returns = quest
[[.args]]
type = questtypeoption
default = "QuestTypeReqDiscovered"
[[.args]]
type = StringExt
max = 24
[[.args]]
type = StringExt
[[.args]]
type = imagefile
default = "\"ReplaceableTextures\\CommandButtons\\BTNAmbush.blp\""

[YDWECreateQuestItem]
title = "创建Quest Item[YDWE]"
description = "为 ${Quest} 创建一个Quest Item: ${文字}"
comment = "Create 一个Quest Item；YDWE新增功能。"
script_name = CreateQuestItemBJ
category = TC_QUEST
returns = questitem
[[.args]]
type = quest
default = "GetLastCreatedQuestBJ"
[[.args]]
type = StringExt

[IsPlayerFlagSetBJ]
title = "Player Flag Is On"
description = "${Player Flag} is on for ${Player}"
comment =""
category = TC_PLAYER
returns = boolean
[[.args]]
type = playerflag
default = "PlayerFlagGivesBounty"
[[.args]]
type = player
default = "PlayerNA"

[IsPlayerAlly]
title = "Player Is An Ally Of Player"
description = "${Player} is an ally of ${Player}"
comment =""
category = TC_PLAYER
returns = boolean
[[.args]]
type = player
default = "GetTriggerPlayer"
[[.args]]
type = player
default = "Player00"

[IsPlayerEnemy]
title = "Player Is An Enemy Of Player"
description = "${Player} is an enemy of ${Player}"
comment =""
category = TC_PLAYER
returns = boolean
[[.args]]
type = player
default = "GetTriggerPlayer"
[[.args]]
type = player
default = "Player00"

[IsPlayerObserver]
title = "Player是裁判或观察者 [R]"
description = "${Player}是裁判或观察者"
comment = ""
category = TC_PLAYER
returns = boolean
[[.args]]
type = player
default = "GetTriggerPlayer"

[IsPlayerRacePrefSet]
title = "Player的种族选择"
description = "${Player} 选择了 ${RacePreference}"
comment = ""
category = TC_PLAYER
returns = boolean
[[.args]]
type = player
default = "GetTriggerPlayer"
[[.args]]
type = racepreference
default = "RacePrefRandom"

[GetPlayerAlliance]
title = "Player Alliance Towards Player"
description = "${Player} is giving ${Player} ${Alliance Type}"
comment =""
category = TC_PLAYER
returns = boolean
[[.args]]
type = player
default = "GetTriggerPlayer"
[[.args]]
type = player
default = "Player00"
[[.args]]
type = alliancetype
default = "AllianceTypePassive"

[IsPlayerInForce]
title = "Player In Player Group"
description = "${Player} is in ${Player Group}"
comment =""
category = TC_PLAYER
returns = boolean
[[.args]]
type = player
default = "Player00"
[[.args]]
type = force
default = "GetPlayersAll"

[GetPlayerState]
title = "Player Property"
description = "${Player} ${Property}"
comment =""
category = TC_PLAYER
returns = integer
[[.args]]
type = player
default = "Player00"
[[.args]]
type = playerstate
default = "PlayerStateGold"

[GetPlayerTaxRate]
title = "Player税率 [R]"
description = "${Player} 需要交纳给 ${Player} 的 ${Resource} 所得税"
comment = "所得税取值范围0-100."
category = TC_PLAYER
returns = integer
[[.args]]
type = player
default = "Player00"
[[.args]]
type = player
default = "Player01"
[[.args]]
type = playerresource
default = "PlayerResourceGold"

[GetPlayerTaxRateBJ]
title = "Player Tax Rate"
description = "Tax rate of ${Resource} from ${Player} to ${Player}"
comment = "The tax rate value is a percentage of total income (0-100)."
category = TC_PLAYER
returns = integer
[[.args]]
type = playerresource
default = "PlayerResourceGold"
[[.args]]
type = player
default = "Player00"
[[.args]]
type = player
default = "Player01"

[GetPlayerScore]
title = "Player Score"
description = "${Player} ${Score}"
comment =""
category = TC_PLAYER
returns = integer
[[.args]]
type = player
default = "Player00"
[[.args]]
type = playerscore
default = "PlayerScoreTotal"

[GetConvertedPlayerId]
title = "Player Number"
description = "Player number of ${Player}"
comment = "Player numbers range from 1 to 16."
category = TC_PLAYER
returns = integer
[[.args]]
type = player
default = "GetTriggerPlayer"

[GetPlayerId]
title = "PlayerID - 1 [R]"
description = "${Player} 的PlayerID - 1"
comment = "PlayerID取值1-16."
category = TC_PLAYER
returns = integer
[[.args]]
type = player
default = "GetTriggerPlayer"

[GetPlayerStructureCount]
title = "Count Structures"
description = "Count structures controlled by ${Player} (${Include/Exclude} incomplete structures)"
comment =""
category = TC_PLAYER
returns = integer
[[.args]]
type = player
default = "Player00"
[[.args]]
type = includeoption
default = "InclusionExclude"

[GetPlayerUnitCount]
title = "Count Non-Structure Units"
description = "Count non-structure units controlled by ${Player} (${Include/Exclude} incomplete units)"
comment =""
category = TC_PLAYER
returns = integer
[[.args]]
type = player
default = "Player00"
[[.args]]
type = includeoption
default = "InclusionExclude"

[GetPlayerTechCountSimple]
title = "Current Research Level"
description = "Current research level of ${Tech} for ${Player}"
comment = "Returns 0 or 1 for simple tech, or 0..3 for three-stage upgrades."
category = TC_PLAYER
returns = integer
[[.args]]
type = techcode
[[.args]]
type = player
default = "Player00"

[GetPlayerTechMaxAllowedSwap]
title = "Max Research Level"
description = "Max research level of ${Tech} for ${Player}"
comment = "Returns 0 or 1 for simple tech, or 0..3 for three-stage upgrades."
category = TC_PLAYER
returns = integer
[[.args]]
type = techcode
[[.args]]
type = player
default = "Player00"

[GetPlayerTeam]
title = "Player Team"
description = "Team number of ${Player}"
comment =""
category = TC_PLAYER
returns = integer
[[.args]]
type = player
default = "Player00"

[CountPlayersInForceBJ]
title = "Count Players In Player Group"
description = "Number of players in ${Player Group}"
comment =""
category = TC_PLAYER
returns = integer
[[.args]]
type = force
default = "GetPlayersByMapControl"

[GetPlayerHandicapXPBJ]
title = "Experience Rate"
description = "${Player} experience rate"
comment = "Experience rates are specified as percentages, with 100% being normal."
category = TC_PLAYER
returns = real
[[.args]]
type = player
default = "Player00"

[GetPlayerHandicapBJ]
title = "Handicap"
description = "${Player} handicap"
comment = "Handicap values are specified as percentages, with 100% being normal."
category = TC_PLAYER
returns = real
[[.args]]
type = player
default = "Player00"

[GetPlayerName]
title = "Player Name"
description = "Name of ${Player}"
comment =""
category = TC_PLAYER
returns = string
[[.args]]
type = player
default = "GetTriggerPlayer"

[GetPlayerStartLocationLoc]
title = "Player Start Location"
description = "${Player} start location"
comment =""
category = TC_PLAYER
returns = location
[[.args]]
type = player
default = "Player00"

[CheckItemStatus]
title = "Item Status Check"
description = "${Item} is ${Status}"
comment =""
category = TC_ITEM
use_in_event = 0
returns = boolean
[[.args]]
type = item
default = "GetLastCreatedItem"
[[.args]]
type = itemstatus
default = "ItemStatusHidden"

[CheckItemcodeStatus]
title = "Item-Type Status Check"
description = "${Item-Type} is ${Status}"
comment =""
category = TC_ITEM
use_in_event = 0
returns = boolean
[[.args]]
type = itemcode
default = "GetItemTypeId"
[[.args]]
type = itemcodestatus
default = "ItemcodeStatusPowerup"

[IsItemVisible]
title = "Item可见 [R]"
description = "${Item} 是可见的"
comment = "Item不被隐藏且不被单位持有时即为可见的."
category = TC_ITEM
use_in_event = 0
returns = boolean
[[.args]]
type = item
default = "bj_lastCreatedItem"

[IsItemHiddenBJ]
title = "Item Is Hidden"
description = "${Item} is hidden"
comment = "Items held by units are considered hidden."
category = TC_ITEM
use_in_event = 0
returns = boolean
[[.args]]
type = item
default = "GetLastCreatedItem"

[IsItemOwned]
title = "Item Is Owned"
description = "${Item} is owned"
comment = "Any item in a unit's inventory is considered owned, even if the owner is dead."
category = TC_ITEM
use_in_event = 0
returns = boolean
[[.args]]
type = item

[IsItemPowerup]
title = "Item是拾取时自动使用的 [R]"
description = "${Item} 是拾取时自动使用类Item"
comment = ""
category = TC_ITEM
use_in_event = 0
returns = boolean
[[.args]]
type = item
default = "bj_lastCreatedItem"

[IsItemSellable]
title = "Item可被市场随机出售 [R]"
description = "${Item} 可被市场随机出售"
comment = ""
category = TC_ITEM
use_in_event = 0
returns = boolean
[[.args]]
type = item
default = "bj_lastCreatedItem"

[IsItemPawnable]
title = "Item可被抵押 [R]"
description = "${Item} 可被抵押"
comment = ""
category = TC_ITEM
use_in_event = 0
returns = boolean
[[.args]]
type = item
default = "bj_lastCreatedItem"

[RectContainsItem]
title = "Item In Region"
description = "${Item} is in ${Region}"
comment = "An owned item is not considered to be in any regions."
category = TC_ITEM
returns = boolean
[[.args]]
type = item
default = "GetLastCreatedItem"
[[.args]]
type = rect

[IsItemInvulnerable]
title = "Item Is Invulnerable"
description = "${Item} is invulnerable"
comment =""
category = TC_ITEM
returns = boolean
[[.args]]
type = item
default = "GetLastCreatedItem"

[GetInventoryIndexOfItemTypeBJ]
title = "Item在Item栏的序号 [C]"
description = "${Unit} 所持有的 ${Item Type} 的Item栏序号"
comment = "如果单位没有该类型的Item则返回0"
category = TC_ITEM
returns = integer
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = itemcode
default = "texp"

[GetItemLevel]
title = "Item Level"
description = "Item level of ${Item}"
comment =""
category = TC_ITEM
returns = integer
[[.args]]
type = item
default = "GetLastCreatedItem"

[GetItemCharges]
title = "Item Charges Remaining"
description = "Charges remaining in ${Item}"
comment = "Items with unlimited charges will return zero."
category = TC_ITEM
returns = integer
[[.args]]
type = item
default = "GetLastCreatedItem"

[GetItemUserData]
title = "Custom Value Of Item"
description = "Custom value of ${Item}"
comment = "Use 'Item - Set Custom Value' to set the custom value of an item."
category = TC_ITEM
returns = integer
[[.args]]
type = item

[GetItemLifeBJ]
title = "Item Life"
description = "Current life of ${Item}"
comment =""
category = TC_ITEM
returns = real
[[.args]]
type = item
default = "GetLastCreatedItem"

[GetItemX]
title = "Item的X轴坐标 [R]"
description = "${Item} 的X轴坐标"
comment = ""
category = TC_ITEM
returns = real
[[.args]]
type = item
default = "GetLastCreatedItem"

[GetItemY]
title = "Item的Y轴坐标 [R]"
description = "${Item} 的Y轴坐标"
comment = ""
category = TC_ITEM
returns = real
[[.args]]
type = item
default = "GetLastCreatedItem"

[GetItemName]
title = "Item Name"
description = "Name of ${Item}"
comment =""
category = TC_ITEM
returns = string
[[.args]]
type = item
default = "GetManipulatedItem"

[GetItemLoc]
title = "Position Of Item"
description = "Position of ${Item}"
comment =""
category = TC_ITEM
returns = location
[[.args]]
type = item
default = "GetLastCreatedItem"

[UnitHasItem]
title = "Hero Has Item"
description = "${Hero} has ${Item}"
comment =""
category = TC_HERO
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = item
default = "GetLastCreatedItem"

[UnitHasItemOfTypeBJ]
title = "Hero Has Item Of Type"
description = "${Hero} has an item of type ${Item-Type}"
comment =""
category = TC_HERO
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = itemcode
default = "texp"

[IsSuspendedXP]
title = "Experience Is Disabled For Hero"
description = "Experience is disabled for ${Hero}"
comment = "Use the 'Hero - Enable/Disable Experience' action to disable a Hero's experience."
category = TC_HERO
returns = boolean
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetHeroLevel]
title = "Hero Level"
description = "Hero level of ${Hero}"
comment =""
category = TC_HERO
returns = integer
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetHeroXP]
title = "Hero Experience"
description = "Hero experience of ${Hero}"
comment =""
category = TC_HERO
returns = integer
[[.args]]
type = unit
default = "GetTriggerUnit"

[GetHeroStr]
title = "英雄力量 [R]"
description = "${英雄} 的力量值(${Include/Exclude} 加成)"
comment = ""
category = TC_HERO
returns = integer
[[.args]]
type = unit
[[.args]]
type = includeoption
default = "InclusionExclude"

[GetHeroAgi]
title = "英雄敏捷 [R]"
description = "${英雄} 的敏捷值(${Include/Exclude} 加成)"
comment = ""
category = TC_HERO
returns = integer
[[.args]]
type = unit
[[.args]]
type = includeoption
default = "InclusionExclude"

[GetHeroInt]
title = "英雄智力 [R]"
description = "${英雄} 的智力值(${Include/Exclude} 加成)"
comment = ""
category = TC_HERO
returns = integer
[[.args]]
type = unit
[[.args]]
type = includeoption
default = "InclusionExclude"

[GetHeroStatBJ]
title = "Hero Attribute"
description = "${Attribute} of ${Hero} (${Include/Exclude} bonuses)"
comment =""
category = TC_HERO
returns = integer
[[.args]]
type = herostat
default = "HeroStatStr"
[[.args]]
type = unit
[[.args]]
type = includeoption
default = "InclusionExclude"

[GetHeroSkillPoints]
title = "Unspent Skill Points"
description = "Unspent skill points of ${Hero}"
comment =""
category = TC_HERO
returns = integer
[[.args]]
type = unit

[GetHeroProperName]
title = "Hero Proper Name"
description = "Proper name of ${Hero}"
comment = "Calling this on a hero will return his actual name (e.g. 'Granis Darkhammer' for a Paladin)."
category = TC_HERO
returns = string
[[.args]]
type = unit
default = "GetTriggerUnit"

[IsMapFlagSet]
title = "Map Flag Set"
description = "${Map Flag} is set"
comment =""
category = TC_GAME
returns = boolean
[[.args]]
type = mapflag
default = "MapFlagUseHandicaps"

[IsCustomCampaignButtonVisibile]
title = "Custom Campaign Button Is Visible"
description = "Custom campaign button ${Number} is visible"
comment =""
category = TC_GAME
use_in_event = 0
returns = boolean
[[.args]]
type = integer
default = "1"
min = 1

[GetCreepCampFilterState]
title = "Creep Camp Display Is On"
description = "Creep camp minimap display is turned on"
comment =""
category = TC_GAME
returns = boolean

[SaveGameExists]
title = "Saved-Game Exists"
description = "The ${Filename} saved-game exists"
comment =""
category = TC_GAME
use_in_event = 0
returns = boolean
[[.args]]
type = anyfile

[IsNoVictoryCheat]
title = "无法胜利 [R]"
description = "Player开启作弊模式: 无法胜利"
comment = "单机作弊码开启的模式."
category = TC_GAME
use_in_event = 0
returns = boolean

[IsNoDefeatCheat]
title = "无法失败 [R]"
description = "Player开启作弊模式: 无法失败"
comment = "单机作弊码开启的模式."
category = TC_GAME
use_in_event = 0
returns = boolean

[GetPlayers]
title = "Number Of Players"
description = "Number of players"
comment =""
category = TC_GAME
returns = integer

[GetTeams]
title = "Number Of Teams"
description = "Number of teams"
comment =""
category = TC_GAME
returns = integer

[GetAllyColorFilterState]
title = "Ally Color Filter Setting"
description = "Ally color filter setting"
comment = "A value of 0 indicates that filtering is disabled.  A value of 1 indicates that filtering is only enabled for the minimap.  A value of 2 indicates that filtering is enabled for the minimap and the game view."
category = TC_GAME
returns = integer

[GetTournamentFinishNowRule]
title = "Tournament Finish Rule"
description = "Tournament finish rule"
comment = "A value of 1 indicates that the game is in a bracket and therefore cannot end in a draw.  Any other value indicates that this is a preliminary game and may end in a draw."
category = TC_GAME
use_in_event = 0
returns = integer

[GetTournamentScore]
title = "Tournament Melee Score"
description = "Tournament melee score for ${Player}"
comment = "This returns the melee score for a player, which is used by melee games to determine victory/defeat/draw if a tournament game runs too long."
category = TC_GAME
use_in_event = 0
returns = integer
[[.args]]
type = player
default = "Player00"

[GetTimeOfDay]
title = "Time Of Day"
description = "In-game time of day"
comment = "This is in game time, not real time."
category = TC_GAME
returns = real

[GetTimeOfDayScalePercentBJ]
title = "Time Of Day Speed"
description = "Current time of day speed"
comment = "This returns the time of day speed as a percentage of the default time of day speed."
category = TC_GAME
returns = real

[GetAbilityName]
title = "Ability Name"
description = "Name of ${Ability}"
comment =""
script_name = GetObjectName
category = TC_GAME
returns = string
[[.args]]
type = abilcode

[GetAbilityEffectBJ]
title = "Ability Effect Art Path"
description = "Art path of ${Ability} ${EffectType} (index ${Index})"
comment = "This returns the model file path of an ability's effect art."
script_name = GetAbilityEffectById
category = TC_GAME
returns = string
[[.args]]
type = abilcode
[[.args]]
type = effecttype
default = "EffectTypeEffect"
[[.args]]
type = integer
default = "0"

[GetAbilitySoundBJ]
title = "Ability Effect Sound Name"
description = "Name of ${Ability} ${SoundType}"
comment =""
script_name = GetAbilitySoundById
category = TC_GAME
returns = string
[[.args]]
type = abilcode
[[.args]]
type = soundtype
default = "SoundTypeEffect"

[GetStoredBoolean]
title = "读取布尔值[R]"
description = "从${Game Cache}中读取布尔值,类别: ${Category},名称: ${文字}"
comment = "如果该值不存在则返回false."
category = TC_GAMECACHE
returns = boolean
[[.args]]
type = gamecache
default = "GetLastCreatedGameCacheBJ"
[[.args]]
type = string
default = "\"Category\""
[[.args]]
type = string

[HaveStoredValue]
title = "Cache Value Exists"
description = "${Label} is stored as a ${Type} of ${Category} in ${Game Cache}"
comment =""
category = TC_GAMECACHE
use_in_event = 0
returns = boolean
[[.args]]
type = string
[[.args]]
type = cachevaluetype
default = "CacheValueTypeUnit"
[[.args]]
type = string
default = "\"Category\""
[[.args]]
type = gamecache
default = "GetLastCreatedGameCacheBJ"

[GetStoredInteger]
title = "缓存读取整数 [C]"
description = "从${Game Cache}中读取整数值,类别: ${Category},名称: ${文字}"
comment = "如果该值不存在则返回0."
category = TC_GAMECACHE
returns = integer
[[.args]]
type = gamecache
default = "GetLastCreatedGameCacheBJ"
[[.args]]
type = string
default = "\"Category\""
[[.args]]
type = string

[GetStoredReal]
title = "缓存读取实数 [C]"
description = "从 ${Game Cache} 中读取实数,类别: ${Category} 名称: ${文字}"
comment = "如果该值不存在则返回0."
category = TC_GAMECACHE
returns = real
[[.args]]
type = gamecache
default = "GetLastCreatedGameCacheBJ"
[[.args]]
type = string
default = "\"Category\""
[[.args]]
type = string

[GetStoredString]
title = "读取字符串 [C]"
description = "从 ${Game Cache} 中读取字符串,类别: ${Category} 名称: ${文字}"
comment = "如果该值不存在,则返回空字符串. 注意,空字符串不等于null"
category = TC_GAMECACHE
returns = string
[[.args]]
type = gamecache
default = "GetLastCreatedGameCacheBJ"
[[.args]]
type = string
default = "\"Category\""
[[.args]]
type = string

[InitGameCache]
title = "Create 游戏缓存 [R]"
description = "Create 游戏缓存: ${缓存名}"
comment = "创建一个新的游戏缓存,一个地图最多只有有256个游戏缓存."
category = TC_GAMECACHE
returns = gamecache
[[.args]]
type = string
default = "\"MapName.w3v\""

[WaygateIsActiveBJ]
title = "Way Gate Is Enabled"
description = "${Way Gate} is enabled"
comment =""
script_name = WaygateIsActive
category = TC_NEUTRALBUILDING
returns = boolean
[[.args]]
type = unit

[GetResourceAmount]
title = "Gold Remaining"
description = "Resource quantity contained in ${Gold Mine}"
comment = "This is for use with Gold Mines."
category = TC_NEUTRALBUILDING
returns = integer
[[.args]]
type = unit

[WaygateGetDestinationX]
title = "传送门目的地X坐标"
description = "${传送门} 的目的地X坐标"
comment = ""
category = TC_NEUTRALBUILDING
returns = real
[[.args]]
type = unit
default = "GetTriggerUnit"

[WaygateGetDestinationY]
title = "传送门目的地Y坐标"
description = "${传送门} 的目的地Y坐标"
comment = ""
category = TC_NEUTRALBUILDING
returns = real
[[.args]]
type = unit
default = "GetTriggerUnit"

[WaygateGetDestinationLocBJ]
title = "Way Gate Destination"
description = "Destination of ${Way Gate}"
comment =""
category = TC_NEUTRALBUILDING
returns = location
[[.args]]
type = unit

[LoadBooleanBJ]
title = "Load Boolean Value (hashtable)"
description = "Load ${Value} of ${Value} from ${Hashtable}"
comment = "If the label is not found, this function returns False."
category = TC_HASHTABLE
returns = boolean
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadBoolean]
title = "<1.24> 从哈希表提取布尔 [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取布尔"
comment = "如果不存在则返回False"
category = TC_HASHTABLE
returns = boolean
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[HaveSavedValue]
title = "Hashtable Value Exists"
description = "${Value} is stored as a ${Type} of ${Value} in ${Hashtable}"
comment =""
category = TC_HASHTABLE
use_in_event = 0
returns = boolean
[[.args]]
type = integer
[[.args]]
type = hashtablevaluetype
default = "HashtableValueTypeHandle"
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[GetHandleIdBJ]
title = "Get Handle ID"
description = "Key ${Handle}"
comment = "Creates a key from a handle for use in the hashtable."
category = TC_HASHTABLE
returns = integer
[[.args]]
type = handle

[GetHandleId]
title = "<1.24> 获取对象的h2i值 [C]"
description = "转换 ${Handle} 为整数"
comment = "创建一个对应该handle的临时密钥,可以在哈希表中作为索引号使用.当该handle被彻底销毁时,密钥会被回收."
category = TC_HASHTABLE
returns = integer
[[.args]]
type = handle

[StringHashBJ]
title = "Get String ID"
description = "Key ${String}"
comment = "Creates a key from a string for use in the hashtable."
category = TC_HASHTABLE
returns = integer
[[.args]]
type = string

[LoadIntegerBJ]
title = "Load Integer Value (hashtable)"
description = "Load ${Value} of ${Value} from ${Hashtable}"
comment = "If the label is not found, this function returns 0."
category = TC_HASHTABLE
returns = integer
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadInteger]
title = "<1.24> 从哈希表提取整数 [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取整数"
comment = "如果不存在则返回0"
category = TC_HASHTABLE
returns = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadRealBJ]
title = "Load Real Value (hashtable)"
description = "Load ${Value} of ${Value} from ${Hashtable}"
comment = "If the label is not found, this function returns 0."
category = TC_HASHTABLE
returns = real
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadReal]
title = "<1.24> 从哈希表提取实数 [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取实数"
comment = "如果不存在则返回0.00"
category = TC_HASHTABLE
returns = real
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadStringBJ]
title = "Load String Value (hashtable)"
description = "Load ${Value} of ${Value} from ${Hashtable}"
comment = "If the label is not found, this function returns an empty string."
category = TC_HASHTABLE
use_in_event = 0
returns = string
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadStr]
title = "<1.24> 从哈希表提取字符串 [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取字符串"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
use_in_event = 0
returns = string
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadPlayerHandleBJ]
title = "Load Player Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = player
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadPlayerHandle]
title = "<1.24> 从哈希表提取Player [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Player"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = player
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadDestructableHandleBJ]
title = "Load Destructable Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = destructable
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadDestructableHandle]
title = "<1.24> 从哈希表提取Destructable [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Destructable"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = destructable
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadItemHandleBJ]
title = "Load Item Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = item
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadItemHandle]
title = "<1.24> 从哈希表提取Item [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Item"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = item
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadUnitHandleBJ]
title = "Load Unit Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = unit
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadUnitHandle]
title = "<1.24> 从哈希表提取单位 [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取单位"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = unit
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[YDWELoadAbilityHandleBJ]
title = "<1.24> 从哈希表提取Ability"
description = "在子索引 ${Value} 主索引 ${Value} 的 ${Hashtable} 内提取Ability"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = abilcode
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[YDWELoadAbilityHandle]
title = "<1.24> 从哈希表提取Ability [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Ability"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = abilcode
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadTimerHandleBJ]
title = "Load Timer Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = timer
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadTimerHandle]
title = "<1.24> 从哈希表提取Timer [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Timer"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = timer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadTriggerHandleBJ]
title = "Load Trigger Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = trigger
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadTriggerHandle]
title = "<1.24> 从哈希表提取Trigger [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Trigger"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = trigger
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadTriggerConditionHandleBJ]
title = "Load Triggercondition Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = triggercondition
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadTriggerConditionHandle]
title = "<1.24> 从哈希表提取触发条件 [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取触发条件"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = triggercondition
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadTriggerActionHandleBJ]
title = "Load Triggeraction Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = triggeraction
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadTriggerActionHandle]
title = "<1.24> 从哈希表提取触发动作 [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取触发动作"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = triggeraction
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadTriggerEventHandleBJ]
title = "Load Eventid Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = event
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadTriggerEventHandle]
title = "<1.24> 从哈希表提取触发Event [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取触发Event"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = event
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadForceHandleBJ]
title = "Load Force Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = force
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadForceHandle]
title = "<1.24> 从哈希表提取Player Group  [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Player Group "
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = force
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadGroupHandleBJ]
title = "Load Group Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = group
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadGroupHandle]
title = "<1.24> 从哈希表提取Unit Group [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Unit Group"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = group
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadLocationHandleBJ]
title = "Load Location Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = location
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadLocationHandle]
title = "<1.24> 从哈希表提取点 [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取点"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = location
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadRegionHandleBJ]
title = "Load Region Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = region
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadRegionHandle]
title = "<1.24> 从哈希表提取区域(不规则) [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取区域(不规则)"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = region
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadRectHandleBJ]
title = "Load Rect Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = rect
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadRectHandle]
title = "<1.24> 从哈希表提取区域(矩型) [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取区域(矩型)"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = rect
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadBooleanExprHandleBJ]
title = "Load Boolexpr Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = boolexpr
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadBooleanExprHandle]
title = "<1.24> 从哈希表提取Boolexpr [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Boolexpr"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = boolexpr
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadSoundHandleBJ]
title = "Load Sound Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = sound
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadSoundHandle]
title = "<1.24> 从哈希表提取Sound [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Sound"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = sound
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadEffectHandleBJ]
title = "Load Effect Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = effect
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadEffectHandle]
title = "<1.24> 从哈希表提取Effect [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Effect"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = effect
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadUnitPoolHandleBJ]
title = "Load Unitpool Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = unitpool
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadUnitPoolHandle]
title = "<1.24> 从哈希表提取单位池 [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取单位池"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = unitpool
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadItemPoolHandleBJ]
title = "Load Itempool Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = itempool
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadItemPoolHandle]
title = "<1.24> 从哈希表提取Item Pool [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Item Pool"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = itempool
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadQuestHandleBJ]
title = "Load Quest Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = quest
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadQuestHandle]
title = "<1.24> 从哈希表提取Quest [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Quest"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = quest
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadQuestItemHandleBJ]
title = "Load Questitem Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = questitem
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadQuestItemHandle]
title = "<1.24> 从哈希表提取Quest要求 [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Quest要求"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = questitem
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadDefeatConditionHandleBJ]
title = "Load Defeatcondition Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = defeatcondition
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadDefeatConditionHandle]
title = "<1.24> 从哈希表提取失败条件 [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取失败条件"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = defeatcondition
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadTimerDialogHandleBJ]
title = "Load Timerdialog Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = timerdialog
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadTimerDialogHandle]
title = "<1.24> 从哈希表提取Timer Window [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Timer Window"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = timerdialog
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadLeaderboardHandleBJ]
title = "Load Leaderboard Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = leaderboard
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadLeaderboardHandle]
title = "<1.24> 从哈希表提取Leaderboard [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Leaderboard"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = leaderboard
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadMultiboardHandleBJ]
title = "Load Multiboard Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = multiboard
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadMultiboardHandle]
title = "<1.24> 从哈希表提取Multi Board [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Multi Board"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = multiboard
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadMultiboardItemHandleBJ]
title = "Load Multiboarditem Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = multiboarditem
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadMultiboardItemHandle]
title = "<1.24> 从哈希表提取Multi Board Item [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Multi Board Item"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = multiboarditem
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadTrackableHandleBJ]
title = "Load Trackable Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = trackable
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadTrackableHandle]
title = "<1.24> 从哈希表提取Trackable [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Trackable"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = trackable
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadDialogHandleBJ]
title = "Load Dialog Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = dialog
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadDialogHandle]
title = "<1.24> 从哈希表提取Dialog [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Dialog"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = dialog
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadButtonHandleBJ]
title = "Load Button Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = button
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadButtonHandle]
title = "<1.24> 从哈希表提取Dialog Button [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Dialog Button"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = button
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadTextTagHandleBJ]
title = "Load Texttag Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment =""
category = TC_HASHTABLE
returns = texttag
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadTextTagHandle]
title = "<1.24> 从哈希表提取Text Tag [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Text Tag"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = texttag
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadLightningHandleBJ]
title = "Load Lightning Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = lightning
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadLightningHandle]
title = "<1.24> 从哈希表提取Lightning效果 [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Lightning效果"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = lightning
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadImageHandleBJ]
title = "Load Image Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = image
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadImageHandle]
title = "<1.24> 从哈希表提取图象 [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取图象"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = image
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadUbersplatHandleBJ]
title = "Load Ubersplat Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = ubersplat
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadUbersplatHandle]
title = "<1.24> 从哈希表提取地面纹理变化 [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取地面纹理变化"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = ubersplat
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadFogStateHandleBJ]
title = "Load Fogstate Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = fogstate
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadFogStateHandle]
title = "<1.24> 从哈希表提取迷雾状态 [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取迷雾状态"
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = fogstate
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[LoadFogModifierHandleBJ]
title = "Load Fogmodifier Handle"
description = "Load ${Value} of ${Value} in ${Hashtable}"
comment = "If the label is not found, this function returns NULL."
category = TC_HASHTABLE
returns = fogmodifier
[[.args]]
type = integer
[[.args]]
type = integer
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"

[LoadFogModifierHandle]
title = "<1.24> 从哈希表提取Fog Modifier  [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取Fog Modifier "
comment = "如果不存在则返回空"
category = TC_HASHTABLE
returns = fogmodifier
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[OperatorInt]
title = "Arithmetic"
description = "${Value} ${Operator} ${Value}"
comment =""
category = TC_MATH
returns = integer
[[.args]]
type = integer
[[.args]]
type = ArithmeticOperator
default = "OperatorAdd"
[[.args]]
type = integer
default = "1"

[OperatorReal]
title = "Arithmetic"
description = "${Value} ${Operator} ${Value}"
comment =""
category = TC_MATH
returns = real
[[.args]]
type = real
default = "0"
[[.args]]
type = ArithmeticOperator
default = "OperatorAdd"
[[.args]]
type = real
default = "0"

[YDWEOperatorInt3]
title = "算术运算 Lv3"
description = "${数值} ${运算符} ${数值} ${运算符} ${数值}"
comment = ""
category = TC_MATH
returns = integer
[[.args]]
type = integer
[[.args]]
type = YArithmeticOperator
default = "YOperatorAdd"
[[.args]]
type = integer
default = "0"
[[.args]]
type = YArithmeticOperator
default = "YOperatorAdd"
[[.args]]
type = integer
default = "0"

[YDWEOperatorReal3]
title = "算术运算 Lv3"
description = "${数值} ${运算符} ${数值} ${运算符} ${数值}"
comment = ""
category = TC_MATH
returns = real
[[.args]]
type = real
[[.args]]
type = YArithmeticOperator
default = "YOperatorAdd"
[[.args]]
type = real
default = "0"
[[.args]]
type = YArithmeticOperator
default = "YOperatorAdd"
[[.args]]
type = real
default = "0"

[YDWE_PreloadSL_Get]
title = "获取存档数据"
description = "从${Player}获取 ※${数据注释}，从当前存档[${数据项索引}]上获取"
comment = "从Player本地存档上获取数据，需要填入正确的数据项索引，标签即该项数据的注释。"
category = TC_YDSL
returns = integer
[[.args]]
type = player
default = "Player00"
[[.args]]
type = string
[[.args]]
type = integer
min = 1
max = 500

[YDWE_PreloadSL_GetFile]
title = "获取存档名(存档名单)[YDWE]"
description = "为${Player}在『${目录名}』下，获取索引为[${Integer}]的存档名"
comment = "高级功能，获取指定目录下某个Player存档文件的名字，填写正确的索引，即可获得对应存档名。"
category = TC_YDSL
returns = string
[[.args]]
type = player
default = "Player00"
[[.args]]
type = string
[[.args]]
type = integer
min = 1
max = 16

[GetForLoopIndexA]
title = "For Loop Integer A"
description = "Integer A"
comment =""
category = TC_FORLOOP
returns = integer

[GetForLoopIndexB]
title = "For Loop Integer B"
description = "Integer B"
comment =""
category = TC_FORLOOP
returns = integer

[OrderId2StringBJ]
title = "Convert Order To String"
description = "String(${Order})"
comment = "Example order strings:  ''harvest'', ''move'', ''smart'', ''attack''."
category = TC_CONVERSION
returns = string
[[.args]]
type = ordercode
default = "GetIssuedOrderIdBJ"

[UnitId2StringBJ]
title = "Convert Unit-Type To String"
description = "String(${Unit-Type})"
comment =""
category = TC_CONVERSION
returns = string
[[.args]]
type = unitcode
default = "GetUnitTypeId"

[GetLocalizedString]
title = "本地字符串 [R]"
description = "本地字符串: ${文字}"
comment = "获取ui\\framedef\\globalstrings.fdf中定义的字符串."
category = TC_CONVERSION
use_in_event = 0
returns = string
[[.args]]
type = string

[StringIdentity]
title = "Convert Externalized String"
description = "Externalized string(${String})"
comment = "Use this to make sure the given string will be externalized in the map string file (war3map.wts)."
script_name = GetLocalizedString
category = TC_CONVERSION
use_in_event = 0
returns = string
[[.args]]
type = string

[GetLocalizedHotkey]
title = "本地热键 "
description = "本地热键: ${文字}"
comment = "获取ui\\miscui.txt中定义的热键."
category = TC_CONVERSION
use_in_event = 0
returns = integer
[[.args]]
type = string

[StringCase]
title = "Convert String Case"
description = "String(${String}) as ${Lower/Upper Case}"
comment = "All letters in the string will be changed to the selected case."
category = TC_CONVERSION
returns = string
[[.args]]
type = StringExt
[[.args]]
type = stringcaseoption
default = "StringCaseLower"

[Location]
title = "Convert Coordinates To Point"
description = "Point(${X}, ${Y})"
comment =""
category = TC_CONVERSION
returns = location
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[String2UnitIdBJ]
title = "Convert String To Unit-Type"
description = "Unit-type(${String})"
comment =""
script_name = UnitId
category = TC_CONVERSION
returns = unitcode
[[.args]]
type = string
default = "footman"

[String2OrderIdBJ]
title = "Convert String To Order"
description = "Order(${String})"
comment = "Example order strings:  ''harvest'', ''move'', ''smart'', ''attack''."
category = TC_CONVERSION
returns = ordercode
[[.args]]
type = string
default = "stop"

[UnitId2OrderIdBJ]
title = "Convert Unit-Type To Order"
description = "Order(${Unit-Type})"
comment =""
category = TC_CONVERSION
returns = ordercode
[[.args]]
type = unitcode
default = "hfoo"

[ConvertedPlayer]
title = "Convert Player Index To Player"
description = "Player(${Player Index})"
comment = "Player indexes range from 1 to 16."
category = TC_CONVERSION
returns = player
[[.args]]
type = integer
default = "1"
min = 1
max = 16

[YDWEGetGameCurrentTime]
title = "Timer系统-获取游戏当前时间"
description = "获取游戏当前时间"
comment = "获得从游戏开始到目前流逝的时间，以秒为单位。"
category = TC_YDST
returns = integer

[YDWETimerSystemGetRunIndex]
title = "Timer系统-获取中心Timer当前执行索引"
description = "获取中心Timer当前执行索引"
comment = "获得中心Timer运行Trigger或函数目前为止的执行次数。"
category = TC_YDST
returns = integer

[YDWEGetUnitItemSoftId]
title = "Item在Item栏中的位置[YDWE]"
description = "Get ${Unit} Item栏中 ${Item} 的位置"
comment = "返回Item所在单位Item栏中的位置，为1-6之间的某个值；若单位身上不存在该Item，则返回0。"
category = TC_YDST
returns = integer
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = item
default = "GetManipulatedItem"

[YDWEConverUnitcodeToInt]
title = "显示单位类型为整数[YDWE]"
description = "显示<${单位类型}>为整数"
comment = "单位类型本身是个整数，因此无需转换；该功能主要用于存储系统的路径设置中。"
category = TC_YDST
returns = integer
[[.args]]
type = unitcode

[YDWEConverItemcodeToInt]
title = "显示Item Type为整数[YDWE]"
description = "显示<${Item Type}>为整数"
comment = "Item Type本身是个整数，因此无需转换；该功能主要用于存储系统的路径设置中。"
category = TC_YDST
returns = integer
[[.args]]
type = itemcode

[YDWEConverAbilcodeToInt]
title = "显示Ability类型为整数[YDWE]"
description = "显示<${Ability类型}>为整数"
comment = "Ability类型本身是个整数，因此无需转换；该功能主要用于存储系统的路径设置中。"
category = TC_YDST
returns = integer
[[.args]]
type = abilcode

[YDWEConverOrdercodeToInt]
title = "显示命令ID为整数[YDWE]"
description = "显示<${命令ID}>为整数"
comment = "命令ID本身是个整数，因此无需转换；该功能主要用于存储系统的路径设置中。"
category = TC_YDST
returns = integer
[[.args]]
type = ordercode

[YDWEI2UnitId]
title = "转换整数为单位Id [YDWE]"
description = "转换 ${Integer} 为单位Id"
comment = "将一个整数转换成单位ID，如输入1751543663，将转成步兵的ID。"
category = TC_YDST
returns = unitcode
[[.args]]
type = integer

[YDWEI2ItemId]
title = "转换整数为ItemId [YDWE]"
description = "转换 ${Integer} 为ItemId"
comment = "将一个整数转换成ItemID，如输入1936749416，将转成魔法护盾的ID。"
category = TC_YDST
returns = itemcode
[[.args]]
type = integer

[YDWES2Id]
title = "转换字符串为Id [YDWE]"
description = "需要转换成ID的字符串为：${字符窜}"
comment = "将一个字符串转换成单位、Item等目标的ID；如spsh转换后为'spsh'，届时可以通过聊天输入字符串来创建单位或Item。"
category = TC_YDST
returns = integer
[[.args]]
type = string
default = "spsh"

[YDWES2UnitId]
title = "转换字符串为单位Id [YDWE]"
description = "需要转换成单位Id的字符窜为：${字符窜}"
comment = "将一个字符窜转换成单位ID，如输入hfoo，将转成步兵的ID。"
category = TC_YDST
returns = unitcode
[[.args]]
type = string
default = "hfoo"

[YDWES2ItemId]
title = "转换字符串为ItemId [YDWE]"
description = "需要转换成ItemId的字符串为：${字符窜}"
comment = "将一个字符串转换成ItemID，如输入spsh，将转成魔法护盾的ID。"
category = TC_YDST
returns = itemcode
[[.args]]
type = string
default = "spsh"

[YDWEGetUnitGoldCost]
title = "Get 黄金消耗 (单位类型)"
description = "Get ${Unit} 建造时消耗的黄金"
comment = "本触发只能获取普通单位建造时消耗的黄金，若填入英雄单位，将会获得固定值425"
category = TC_YDST
returns = integer
[[.args]]
type = unitcode
default = "hfoo"

[YDWEGetUnitWoodCost]
title = "Get 木头消耗 (单位类型)"
description = "Get ${Unit} 建造时消耗的木头"
comment = "本触发只能获取普通单位建造时消耗的木头，若填入英雄单位，将会获得固定值100"
category = TC_YDST
returns = integer
[[.args]]
type = unitcode
default = "hfoo"

[YDWEGetUnitBuildTime]
title = "Get 建造时间 (单位类型)"
description = "Get ${Unit} 建造时需要的时间"
comment = "本触发只能获取普通单位建造时需要的时间，若填入英雄单位，将会获得固定值55"
category = TC_YDST
returns = integer
[[.args]]
type = unitcode
default = "hfoo"

[YDWEGetUnitFoodUsed]
title = "Get 消耗人口 (单位)"
description = "Get ${Unit} 建造时消耗的人口"
comment = "本触发只能获取普通单位建造时消耗的人口，若填入英雄单位，将会获得固定值5"
category = TC_YDST
returns = integer
[[.args]]
type = unit
default = "GetTriggerUnit"

[YDWEGetUnitFoodMade]
title = "Get 提供人口 (单位)"
description = "Get ${Unit} 建造后提供的人口"
comment = "本触发只能获取普通单位建造后提供的人口，若填入英雄单位，将会获得固定值0"
category = TC_YDST
returns = integer
[[.args]]
type = unit
default = "GetTriggerUnit"

[YDWECoordinateX]
title = "修正X坐标 [YDWE]"
description = "需要修正的X坐标为：${Real}"
comment = "设修正X坐标，强制它大于地图边界最小值，小于地图边界最大值，避免弹出游戏错误。"
category = TC_YDST
returns = real
[[.args]]
type = real

[YDWECoordinateY]
title = "修正Y坐标 [YDWE]"
description = "需要修正的Y坐标为：${Real}"
comment = "设修正Y坐标，强制它大于地图边界最小值，小于地图边界最大值，避免弹出游戏错误。"
category = TC_YDST
returns = real
[[.args]]
type = real

[YDWEGetUnitArmor]
title = "获取单位护甲<Rising_Dusk制作>"
description = "Get ${Unit} 的护甲值，关联Ability为 ${辅助Ability}"
comment = "可以获取单位的护甲值；需要保证混乱攻击对所有护甲均为100%伤害。关联Ability的设置请参考example文件夹下的辅助地图。"
category = TC_YDST
returns = real
[[.args]]
type = unit
default = "GetTriggerUnit"
[[.args]]
type = abilcode

[YDWEId2S]
title = "转换Id为字符串"
description = "需要转换的Id为：${Integer}"
comment = "将一个单位、Item等目标的Id转换成字符串；如'spsh'转换后为spsh。"
category = TC_YDST
returns = string
[[.args]]
type = integer
default = "'spsh'"

[YDWEGetPlayerColorString]
title = "附加上Player颜色"
description = "|c[${Player}]${Start}|r"
comment = ""
category = TC_YDST
returns = string
[[.args]]
type = player
default = "Player00"
[[.args]]
type = string

[GetLastAbilityCastingUnit]
title = "获取最后结束施放特殊Ability的单位"
description = "获取最后结束施放特殊Ability的单位"
comment = "响应单位释放特殊AbilityEvent，当Ability释放完毕后，可以获取最后施放特殊Ability的单位。"
category = TC_YDST
returns = unit

[GetLastAbilityTargetUnit]
title = "获取最后被特殊Ability命中的单位"
description = "获取最后被特殊Ability命中的单位"
comment = "响应单位释放可以命中目标的特殊AbilityEvent，如钩子、月神箭；当Ability命中目标后，可以获取最后被特殊Ability命中的单位。"
category = TC_YDST
returns = unit

[YDWEInitHashtable]
title = "Create 哈希表(YDWE)"
description = "Create 哈希表"
comment = "获得一个新哈希表。"
category = TC_YDST
use_in_event = 0
returns = hashtable

[GetLearnedSkillLevel]
title = "Learned Skill Level"
description = "Learned skill level"
comment =""
category = TC_EVENTRESPONSE
returns = integer

[GetEventDamage]
title = "Damage Taken"
description = "Damage taken"
comment = "When responding to a 'Takes Damage' unit event, this refers to the amount of damage being taken."
category = TC_EVENTRESPONSE
returns = real

[GetOrderPointX]
title = "命令发布点X坐标 [R]"
description = "命令发布点X坐标"
comment = "用坐标代替点可以省去创建、删除点的麻烦."
category = TC_EVENTRESPONSE
returns = real

[GetOrderPointY]
title = "命令发布点Y坐标 [R]"
description = "命令发布点Y坐标"
comment = "用坐标代替点可以省去创建、删除点的麻烦."
category = TC_EVENTRESPONSE
returns = real

[GetSpellTargetX]
title = "Ability施放点X坐标"
description = "获取Ability目标点的X坐标"
comment = "这是1.24的函数，但已加入函数库，在1.20也可以使用。"
category = TC_EVENTRESPONSE
returns = real

[GetSpellTargetY]
title = "Ability施放点Y坐标"
description = "获取Ability目标点的Y坐标"
comment = "这是1.24的函数，但已加入函数库，在1.20也可以使用。"
category = TC_EVENTRESPONSE
returns = real

[GetTournamentFinishSoonTimeRemaining]
title = "Tournament Time Remaining"
description = "Tournament time remaining"
comment = "When responding to a 'Game must end soon' tournament event, this returns the amount of time remaining, in real-time seconds."
category = TC_EVENTRESPONSE
use_in_event = 0
returns = real

[GetEventPlayerChatString]
title = "Entered Chat String"
description = "Entered chat string"
comment =""
category = TC_EVENTRESPONSE
returns = string

[GetEventPlayerChatStringMatched]
title = "Matched Chat String"
description = "Matched chat string"
comment =""
category = TC_EVENTRESPONSE
returns = string

[GetSaveBasicFilename]
title = "Saved-Game Filename"
description = "Saved-game filename"
comment = "When responding to a 'Game - Game Save' event, this refers to the name of the file being saved."
category = TC_EVENTRESPONSE
use_in_event = 0
returns = string

[GetOrderPointLoc]
title = "Target Point Of Issued Order"
description = "Target point of issued order"
comment = "When responding to an 'Is Issued An Order Targeting A Point' unit event, this refers to the target of the order."
category = TC_EVENTRESPONSE
returns = location

[GetSpellTargetLoc]
title = "Target Point Of Ability Being Cast"
description = "Target point of ability being cast"
comment = "When responding to 'Channeling/Casting/etc. casting an ability' unit events, this refers to the target point of the ability being cast."
category = TC_EVENTRESPONSE
use_in_event = 0
returns = location

[CreateRegion]
title = "Create 区域 [R]"
description = "Create 区域"
comment = "Create a 一个新的不规则区域,如果不往该区域添加点或地区,则该区域无效果."
category = TC_REGION
use_in_event = 0
returns = region

[GetTriggeringRegion]
title = "触发区域 [R]"
description = "触发区域"
comment = "响应单位进入/离开不规则区域Event."
category = TC_EVENTRESPONSE
returns = region

[GetAttackedUnitBJ]
title = "Attacked Unit"
description = "Attacked unit"
comment = "When responding to an 'Is Attacked' unit event, this refers to the unit that is being attacked."
script_name = GetTriggerUnit
category = TC_EVENTRESPONSE
returns = unit

[GetAttacker]
title = "Attacking Unit"
description = "Attacking unit"
comment = "When responding to an 'Is Attacked' unit event, this refers to the attacking unit."
category = TC_EVENTRESPONSE
returns = unit

[GetBuyingUnit]
title = "Buying Unit"
description = "Buying unit"
comment = "When responding to 'Sells A Unit', 'Sells An Item', or 'Pawns An Item' unit events, this refers to the unit doing the buying."
category = TC_EVENTRESPONSE
use_in_event = 0
returns = unit

[GetCancelledStructure]
title = "Cancelled Structure"
description = "Cancelled structure"
comment = "When responding to a 'Cancels Construction' unit event, this refers to the unit whose construction has been cancelled."
category = TC_EVENTRESPONSE
returns = unit

[GetSpellAbilityUnit]
title = "Casting Unit"
description = "Casting unit"
comment = "When responding to 'Channeling/Casting/etc. casting an ability' unit events, this refers to the unit casting the ability."
category = TC_EVENTRESPONSE
use_in_event = 0
returns = unit

[GetConstructingStructure]
title = "Constructing Structure"
description = "Constructing structure"
comment = "When responding to a 'Begins Construction' unit event, this refers to the unit whose construction has begun."
category = TC_EVENTRESPONSE
returns = unit

[GetConstructedStructure]
title = "Constructed Structure"
description = "Constructed structure"
comment = "When responding to a 'Finishes Construction' unit event, this refers to the unit whose construction has finished."
category = TC_EVENTRESPONSE
returns = unit

[GetEventDamageSource]
title = "Damage Source"
description = "Damage source"
comment = "When responding to a 'Takes Damage' unit event, this refers to the source of damage being dealt."
category = TC_EVENTRESPONSE
use_in_event = 0
returns = unit

[GetDecayingUnit]
title = "Decaying Unit"
description = "Decaying unit"
comment = "When responding to a 'Decays' unit event, this refers to the unit that is decaying."
category = TC_EVENTRESPONSE
returns = unit

[GetDyingUnit]
title = "Dying Unit"
description = "Dying unit"
comment = "When responding to a 'Dies' unit event, this refers to the unit that is dying."
category = TC_EVENTRESPONSE
returns = unit

[GetEnteringUnit]
title = "Entering Unit"
description = "Entering unit"
comment = "When responding to a 'Unit Enters Region' unit event, this refers to the unit entering the region."
category = TC_EVENTRESPONSE
returns = unit

[GetManipulatingUnit]
title = "Hero Manipulating Item"
description = "Hero manipulating item"
comment = "When responding to 'Uses/Acquires/Loses An Item' unit events, this refers to the Hero that is manipulating the item."
category = TC_EVENTRESPONSE
returns = unit

[GetKillingUnitBJ]
title = "Killing Unit"
description = "Killing unit"
comment = "When responding to a 'Dies' unit event, this refers to the killer of the dying unit.  In cases where a unit dies from a source other than a killing unit, this returns 'No unit'."
script_name = GetKillingUnit
category = TC_EVENTRESPONSE
returns = unit

[GetLearningUnit]
title = "Learning Hero"
description = "Learning Hero"
comment = "When responding to a 'Learns A Skill' unit event, this refers to the unit learning the skill."
category = TC_EVENTRESPONSE
returns = unit

[GetLeavingUnit]
title = "Leaving Unit"
description = "Leaving unit"
comment = "When responding to a 'Unit Leaves Region' event, this refers to the unit leaving the region."
category = TC_EVENTRESPONSE
returns = unit

[GetLevelingUnit]
title = "Leveling Hero"
description = "Leveling Hero"
comment = "When responding to a 'Gains A Level' unit event, this refers to the unit gaining the level."
category = TC_EVENTRESPONSE
returns = unit

[GetLoadedUnitBJ]
title = "Loading Unit"
description = "Loading unit"
comment = "When responding to an 'Is Loaded Into A Transport' unit event, this refers to the unit that is being loaded."
script_name = GetLoadedUnit
category = TC_EVENTRESPONSE
returns = unit

[GetOrderedUnit]
title = "Ordered Unit"
description = "Ordered unit"
comment = "When responding to an 'Is Issued An Order' unit event, this refers to the unit receiving the order."
category = TC_EVENTRESPONSE
returns = unit

[GetChangingUnit]
title = "Ownership-Changed Unit"
description = "Ownership-changed unit"
comment = "When responding to a 'Changes Owner' unit event, this refers to the unit whose ownership has changed."
category = TC_EVENTRESPONSE
use_in_event = 0
returns = unit

[GetResearchingUnit]
title = "Researching Unit"
description = "Researching unit"
comment = "When responding to 'Begins/Cancels/Finishes Research' unit events, this refers to the unit doing the research."
category = TC_EVENTRESPONSE
returns = unit

[GetRevivableUnit]
title = "Revivable Hero"
description = "Revivable Hero"
comment = "When responding to a 'Becomes Revivable' unit event, this refers to the unit that has become available for revival."
category = TC_EVENTRESPONSE
returns = unit

[GetRevivingUnit]
title = "Reviving Hero"
description = "Reviving Hero"
comment = "When responding to 'Begins/Cancels/Finishes Reviving' unit events, this refers to the unit being revived."
category = TC_EVENTRESPONSE
returns = unit

[GetSellingUnit]
title = "Selling Unit"
description = "Selling unit"
comment = "When responding to 'Sells A Unit', 'Sells An Item', or 'Pawns An Item' unit events, this refers to the unit doing the selling."
category = TC_EVENTRESPONSE
use_in_event = 0
returns = unit

[GetSoldUnit]
title = "Sold Unit"
description = "Sold unit"
comment = "When responding to a 'Sells A Unit' unit event, this refers to the unit being sold."
category = TC_EVENTRESPONSE
use_in_event = 0
returns = unit

[GetSummonedUnit]
title = "Summoned Unit"
description = "Summoned unit"
comment = "When responding to a 'Spawns A Summoned Unit' unit event, this refers to the unit being summoned."
category = TC_EVENTRESPONSE
returns = unit

[GetSummoningUnit]
title = "Summoning Unit"
description = "Summoning unit"
comment = "When responding to a 'Spawns A Summoned Unit' unit event, this refers to the unit spawning the summoned unit."
category = TC_EVENTRESPONSE
returns = unit

[GetOrderTargetUnit]
title = "Target Unit Of Issued Order"
description = "Target unit of issued order"
comment = "When responding to an 'Is Issued An Order Targeting An Object' unit event with a unit target, this refers to the target of the order."
category = TC_EVENTRESPONSE
returns = unit

[GetSpellTargetUnit]
title = "Target Unit Of Ability Being Cast"
description = "Target unit of ability being cast"
comment = "When responding to 'Channeling/Casting/etc. casting an ability' unit events with a unit target, this refers to the target of the ability being cast."
category = TC_EVENTRESPONSE
returns = unit

[GetEventTargetUnit]
title = "Targeted Unit"
description = "Targeted unit"
comment = "When responding to an 'Acquires A Target' unit event, this refers to the target being acquired."
category = TC_EVENTRESPONSE
returns = unit

[GetTrainedUnit]
title = "Trained Unit"
description = "Trained unit"
comment = "When responding to a 'Finishes Training A Unit' unit event, this refers to the unit that was trained."
category = TC_EVENTRESPONSE
returns = unit

[GetTransportUnitBJ]
title = "Transporting Unit"
description = "Transporting unit"
comment = "When responding to an 'Is Loaded Into A Transport' unit event, this refers to the transport that loaded the unit."
script_name = GetTransportUnit
category = TC_EVENTRESPONSE
returns = unit

[GetTriggerUnit]
title = "Triggering Unit"
description = "Triggering unit"
comment =""
category = TC_EVENTRESPONSE
returns = unit

[GetTrainedUnitType]
title = "Trained Unit-Type"
description = "Trained unit-type"
comment = "When responding to 'Begins/Cancels/Finishes Training A Unit' unit events, this refers to the unit-type of the unit that is being trained."
category = TC_EVENTRESPONSE
returns = unitcode

[GetIssuedOrderIdBJ]
title = "Issued Order"
description = "Issued order"
comment = "When responding to 'Is Issued An Order' unit events, this refers to the order being issued."
script_name = GetIssuedOrderId
category = TC_EVENTRESPONSE
returns = ordercode

[GetDyingDestructable]
title = "Dying Destructible"
description = "Dying destructible"
comment = "When responding to a 'Destructible Dies' event, this refers to the destructible that is dying."
category = TC_EVENTRESPONSE
returns = destructable

[GetOrderTargetDestructable]
title = "Target Destructible Of Issued Order"
description = "Target destructible of issued order"
comment = "When responding to an 'Is Issued An Order Targeting An Object' unit event with a destructible target, this refers to the target of the order."
category = TC_EVENTRESPONSE
returns = destructable

[GetSpellTargetDestructable]
title = "Target Destructible Of Ability Being Cast"
description = "Target destructible of ability being cast"
comment = "When responding to 'Channeling/Casting/etc. casting an ability' unit events with a destructible target, this refers to the target of the ability being cast."
category = TC_EVENTRESPONSE
use_in_event = 0
returns = destructable

[GetManipulatedItem]
title = "Item Being Manipulated"
description = "Item being manipulated"
comment = "When responding to 'Uses/Acquires/Loses An Item' unit events, this refers to the item being manipulated."
category = TC_EVENTRESPONSE
returns = item

[GetSoldItem]
title = "Sold Item"
description = "Sold Item"
comment = "When responding to 'Sells An Item' or 'Pawns An Item' unit events, this refers to the item being sold."
category = TC_EVENTRESPONSE
use_in_event = 0
returns = item

[GetOrderTargetItem]
title = "Target Item Of Issued Order"
description = "Target item of issued order"
comment = "When responding to an 'Is Issued An Order Targeting An Object' unit event with an item target, this refers to the target of the order."
category = TC_EVENTRESPONSE
returns = item

[GetSpellTargetItem]
title = "Target Item Of Ability Being Cast"
description = "Target item of ability being cast"
comment = "When responding to 'Channeling/Casting/etc. casting an ability' unit events with an item target, this refers to the target of the ability being cast."
category = TC_EVENTRESPONSE
use_in_event = 0
returns = item

[GetResearched]
title = "Researched Tech-Type"
description = "Researched tech-type"
comment = "When responding to 'Begins/Cancels/Finishes Research' unit events, this refers to the tech-type being researched."
category = TC_EVENTRESPONSE
returns = techcode

[GetSpellAbilityId]
title = "Ability Being Cast"
description = "Ability being cast"
comment = "When responding to 'Channeling/Casting/etc. casting an ability' unit events, this refers to the ability being cast."
category = TC_EVENTRESPONSE
use_in_event = 0
returns = abilcode

[GetLearnedSkill]
title = "学习Ability [R]"
description = "学习Ability"
comment = "响应'学习Ability'单位Event, 指代被学习的Ability."
category = TC_EVENTRESPONSE
returns = abilcode

[GetLearnedSkillBJ]
title = "Learned Hero Skill"
description = "Learned Hero Skill"
comment =""
script_name = GetLearnedSkill
category = TC_EVENTRESPONSE
returns = heroskillcode

[GetChangingUnitPrevOwner]
title = "Previous Owner"
description = "Previous owner"
comment = "When responding to a 'Changes Owner' unit event, this refers to the previous owner of the unit."
category = TC_EVENTRESPONSE
use_in_event = 0
returns = player

[GetTriggerPlayer]
title = "Triggering Player"
description = "Triggering player"
comment =""
category = TC_EVENTRESPONSE
returns = player

[GetClickedDialogBJ]
title = "Clicked Dialog"
description = "Clicked dialog"
comment = "When responding to a 'Dialog - Dialog Button Click' event, this refers to the dialog containing the clicked button."
script_name = GetClickedDialog
category = TC_EVENTRESPONSE
returns = dialog

[GetClickedButtonBJ]
title = "Clicked Dialog Button"
description = "Clicked dialog button"
comment = "When responding to a 'Dialog - Button Clicked' event, this refers to the dialog button that is being clicked."
script_name = GetClickedButton
category = TC_EVENTRESPONSE
returns = button

[GetExpiredTimer]
title = "Expiring Timer"
description = "Expiring timer"
comment = "When responding to a 'Time - Timer Expires' event, this refers to the timer that is expiring."
category = TC_EVENTRESPONSE
returns = timer

[GetTriggeringTrackable]
title = "Event响应 - 触发Trackable [R]"
description = "Event响应 - 触发Trackable"
comment = ""
category = TC_EVENTRESPONSE
returns = trackable

[GetRandomInt]
title = "Random Number"
description = "Random integer number between ${Minimum} and ${Maximum}"
comment =""
category = TC_MATH
returns = integer
[[.args]]
type = integer
default = "1"
[[.args]]
type = integer
default = "10"

[IMinBJ]
title = "Min"
description = "Min(${Value 1}, ${Value 2})"
comment =""
category = TC_MATH
returns = integer
[[.args]]
type = integer
[[.args]]
type = integer

[IMaxBJ]
title = "Max"
description = "Max(${Value 1}, ${Value 2})"
comment =""
category = TC_MATH
returns = integer
[[.args]]
type = integer
[[.args]]
type = integer

[IAbsBJ]
title = "Abs"
description = "Abs(${Value})"
comment = "Calculates the absolute value of a number."
category = TC_MATH
returns = integer
[[.args]]
type = integer

[ISignBJ]
title = "Sign"
description = "Sign(${Value})"
comment = "Calculates the sign of a number.  The sign of a negative number is -1.  The sign of a nonnegative number is 1."
category = TC_MATH
returns = integer
[[.args]]
type = integer

[StringHash]
title = "获取字符串的哈希值"
description = "(${String})的哈希值"
comment = "获取一个对应该字符串的密钥，不同的字符串的密钥基本不可能相同，也很难找到两个不同的字符串他们有着相同的密钥。可以用于制作密码等功能。"
category = TC_MATH
returns = integer
[[.args]]
type = string

[ModuloInteger]
title = "Modulo"
description = "${Dividend} mod ${Divisor}"
comment = "Calculates the remainder of a division.  Example: 12 mod 5 = 2."
category = TC_MATH
returns = integer
[[.args]]
type = integer
[[.args]]
type = integer

[GetRandomReal]
title = "Random Number"
description = "Random real number between ${Minimum} and ${Maximum}"
comment =""
category = TC_MATH
returns = real
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "1"

[GetRandomDirectionDeg]
title = "Random Angle"
description = "Random angle"
comment = "This is a random real number in the range of 0 to 360, for use as an angle or a unit facing."
category = TC_MATH
returns = degree

[GetRandomPercentageBJ]
title = "Random Percentage"
description = "Random percentage"
comment = "This is a random real number in the range of 0 to 100, for use as a percentage."
category = TC_MATH
returns = real

[RMinBJ]
title = "Min"
description = "Min(${Value 1}, ${Value 2})"
comment =""
category = TC_MATH
returns = real
[[.args]]
type = real
[[.args]]
type = real

[RMaxBJ]
title = "Max"
description = "Max(${Value 1}, ${Value 2})"
comment =""
category = TC_MATH
returns = real
[[.args]]
type = real
[[.args]]
type = real

[RAbsBJ]
title = "Abs"
description = "Abs(${Value})"
comment = "Calculates the absolute value of a number."
category = TC_MATH
returns = real
[[.args]]
type = real

[RSignBJ]
title = "Sign"
description = "Sign(${Value})"
comment = "Calculates the sign of a number.  The sign of a negative number is -1.  The sign of a nonnegative number is 1."
category = TC_MATH
returns = real
[[.args]]
type = real

[ModuloReal]
title = "Modulo"
description = "${Dividend} mod ${Divisor}"
comment = "Calculates the remainder of a division.  Example: 9.0 mod 2.5 = 1.5."
category = TC_MATH
returns = real
[[.args]]
type = real
[[.args]]
type = real

[Pow]
title = "Power"
description = "Power(${Value}, ${Power})"
comment =""
category = TC_MATH
returns = real
[[.args]]
type = real
[[.args]]
type = real

[SquareRoot]
title = "Square Root"
description = "Square root(${Value})"
comment =""
category = TC_MATH
returns = real
[[.args]]
type = real
min = 0

[SinBJ]
title = "Sine"
description = "Sin(${Angle})"
comment = "The angle specified is expected to be in degrees."
category = TC_MATH
returns = real
[[.args]]
type = degree
default = "GetUnitFacing"

[CosBJ]
title = "Cosine"
description = "Cos(${Angle})"
comment = "The angle specified is expected to be in degrees."
category = TC_MATH
returns = real
[[.args]]
type = degree
default = "GetUnitFacing"

[TanBJ]
title = "Tangent"
description = "Tan(${Angle})"
comment = "The angle specified is expected to be in degrees."
category = TC_MATH
returns = real
[[.args]]
type = degree
default = "GetUnitFacing"

[AsinBJ]
title = "Arcsine"
description = "Asin(${Value})"
comment = "The angle returned is in degrees."
category = TC_MATH
returns = degree
[[.args]]
type = real
min = -1
max = 1

[AcosBJ]
title = "Arccosine"
description = "Acos(${Value})"
comment = "The angle returned is in degrees."
category = TC_MATH
returns = degree
[[.args]]
type = real
min = -1
max = 1

[AtanBJ]
title = "Arctangent (From Angle)"
description = "Atan(${Value})"
comment = "The angle returned is in degrees."
category = TC_MATH
returns = degree
[[.args]]
type = real

[Atan2BJ]
title = "Arctangent (From Deltas)"
description = "Atan2(${Y}, ${X})"
comment = "The angle returned is in degrees."
category = TC_MATH
returns = degree
[[.args]]
type = real
[[.args]]
type = real

[Sin]
title = "正弦(弧度) [R]"
description = "Sin(${Angle})"
comment = "采用弧度制计算. "
category = TC_MATH
returns = real
[[.args]]
type = radian
default = "bj_PI"

[Cos]
title = "余弦(弧度) [R]"
description = "Cos(${Angle})"
comment = "采用弧度制计算. "
category = TC_MATH
returns = real
[[.args]]
type = radian
default = "bj_PI"

[Tan]
title = "正切(弧度) [R]"
description = "Tan(${Angle})"
comment = "采用弧度制计算. "
category = TC_MATH
returns = real
[[.args]]
type = radian
default = "bj_PI"

[Asin]
title = "反正弦(弧度) [R]"
description = "Asin(${数值})"
comment = "采用弧度制计算. 返回弧度取值-π/2 — π/2. "
category = TC_MATH
returns = radian
[[.args]]
type = real
default = "0"
min = -1
max = 1

[Acos]
title = "反余弦(弧度) [R]"
description = "Acos(${数值})"
comment = "采用弧度制计算. 返回弧度取值0 — π. "
category = TC_MATH
returns = radian
[[.args]]
type = real
default = "0"
min = -1
max = 1

[Atan]
title = "反正切(弧度) [R]"
description = "Atan(${数值})"
comment = "采用弧度制计算. 返回弧度取值-π/2 — π/2. "
category = TC_MATH
returns = radian
[[.args]]
type = real
default = "0"

[Atan2]
title = "反正切(Y:X)(弧度) [R]"
description = "Atan(${Y} : ${X})"
comment = "采用弧度制计算. 返回弧度取值-π/2 — π/2. "
category = TC_MATH
returns = radian
[[.args]]
type = real
[[.args]]
type = real

[YDWELogarithmLg]
title = "对数函数(10为底)<c kuhn制作>"
description = "Lg(${x})"
comment = "10^n=x，那么lg(x)=n，如lg(100)=2；鸣谢zyl910"
category = TC_MATH
returns = real
[[.args]]
type = real
min = 0.01

[YDWELogarithmLn]
title = "对数函数(e为底)<c kuhn制作>"
description = "Ln(${x})"
comment = "e^n=x，那么ln(x)=n，e即自然对数，约等于2.718281828；鸣谢zyl910"
category = TC_MATH
returns = real
[[.args]]
type = real
min = 0.01

[YDWELogarithmLog]
title = "对数函数(任意底)<c kuhn制作>"
description = "Log(${a})(${b})"
comment = "a^n=b，那么log(a)(b)=n，如log(2)(4)=2；鸣谢zyl910"
category = TC_MATH
returns = real
[[.args]]
type = real
min = 0.01
[[.args]]
type = real
min = 0.01

[GetLastTransmissionDurationBJ]
title = "Last Transmission Length"
description = "Length of last transmission"
comment = "This is the length, in seconds, of the last used 'Cinematic - Transmission' action."
category = TC_CINEMATIC
returns = real

[TimerGetElapsed]
title = "Elapsed Time"
description = "Elapsed time for ${Timer}"
comment =""
category = TC_TIMER
returns = real
[[.args]]
type = timer

[TimerGetRemaining]
title = "Remaining Time"
description = "Remaining time for ${Timer}"
comment =""
category = TC_TIMER
returns = real
[[.args]]
type = timer

[TimerGetTimeout]
title = "Initial Time"
description = "Initial time for ${Timer}"
comment =""
category = TC_TIMER
returns = real
[[.args]]
type = timer

[CreateTimerDialog]
title = "Create Timer Window [R]"
description = "为 ${Timer} 新建计时窗口"
comment = "为一个Timer创建一个新建Timer Window."
category = TC_TIMER
returns = timerdialog
[[.args]]
type = timer

[CameraSetupGetField]
title = "镜头属性(指定镜头) [R]"
description = "${镜头} 的 ${Camera Field}"
comment = ""
category = TC_CAMERA
returns = real
[[.args]]
type = camerasetup
[[.args]]
type = camerafield
default = "CameraFieldTargetDistance"

[CameraSetupGetFieldSwap]
title = "Camera Field Of Camera Object"
description = "${Camera Field} of ${Camera Object}"
comment =""
category = TC_CAMERA
returns = real
[[.args]]
type = camerafield
default = "CameraFieldTargetDistance"
[[.args]]
type = camerasetup

[GetCameraField]
title = "Camera Field Of Current Camera"
description = "${Camera Field} of the current camera view"
comment =""
category = TC_CAMERA
returns = real
[[.args]]
type = camerafield
default = "CameraFieldTargetDistance"

[GetCameraTargetPositionX]
title = "Target X Of Current Camera"
description = "Target X of current camera view"
comment =""
category = TC_CAMERA
returns = real

[GetCameraTargetPositionY]
title = "Target Y Of Current Camera"
description = "Target Y of current camera view"
comment =""
category = TC_CAMERA
returns = real

[GetCameraTargetPositionZ]
title = "Target Z Of Current Camera"
description = "Target Z of current camera view"
comment =""
category = TC_CAMERA
returns = real

[GetCameraEyePositionX]
title = "Source X Of Current Camera"
description = "Source X of current camera view"
comment =""
category = TC_CAMERA
returns = real

[GetCameraEyePositionY]
title = "Source Y Of Current Camera"
description = "Source Y of current camera view"
comment =""
category = TC_CAMERA
returns = real

[GetCameraEyePositionZ]
title = "Source Z Of Current Camera"
description = "Source Z of current camera view"
comment =""
category = TC_CAMERA
returns = real

[CameraSetupGetDestPositionLoc]
title = "Target Of Camera Object"
description = "Target of ${Camera Object}"
comment =""
category = TC_CAMERA
returns = location
[[.args]]
type = camerasetup

[GetCameraTargetPositionLoc]
title = "Target Of Current Camera"
description = "Target of current camera view"
comment =""
category = TC_CAMERA
returns = location

[GetCameraEyePositionLoc]
title = "Source Of Current Camera"
description = "Source of current camera view"
comment =""
category = TC_CAMERA
returns = location

[GetLightningColorRBJ]
title = "Red Color of Lightning"
description = "Red color of ${Lightning}"
comment = "This returns a value between 0 and 1.  Use 'Lightning - Set Lightning Effect Color' to change the color of a Lightning Effect."
script_name = GetLightningColorR
category = TC_LIGHTNING
use_in_event = 0
returns = real
[[.args]]
type = lightning
default = "GetLastCreatedLightningBJ"

[GetLightningColorGBJ]
title = "Green Color of Lightning"
description = "Green color of ${Lightning}"
comment = "This returns a value between 0 and 1.  Use 'Lightning - Set Lightning Effect Color' to change the color of a Lightning Effect."
script_name = GetLightningColorG
category = TC_LIGHTNING
use_in_event = 0
returns = real
[[.args]]
type = lightning
default = "GetLastCreatedLightningBJ"

[GetLightningColorBBJ]
title = "Blue Color of Lightning"
description = "Blue color of ${Lightning}"
comment = "This returns a value between 0 and 1.  Use 'Lightning - Set Lightning Effect Color' to change the color of a Lightning Effect."
script_name = GetLightningColorB
category = TC_LIGHTNING
use_in_event = 0
returns = real
[[.args]]
type = lightning
default = "GetLastCreatedLightningBJ"

[GetLightningColorABJ]
title = "Alpha Value of Lightning"
description = "Alpha value of ${Lightning}"
comment = "This returns a value between 0 and 1.  A value of 0 corresponds to a completely invisible lightning effect.  Use 'Lightning - Set Lightning Effect Color' to change the alpha value of a Lightning Effect."
script_name = GetLightningColorA
category = TC_LIGHTNING
use_in_event = 0
returns = real
[[.args]]
type = lightning
default = "GetLastCreatedLightningBJ"

[AddLightning]
title = "Create Lightning效果 [R]"
description = "Create Lightning效果: ${Lightning效果} (${Boolean}检查可见性) 起始点:(${X},${Y}) 终结点:(${X},${Y})"
comment = "Create a Lightning效果. 允许检查可见性则在起始点和终结点都不可见时将不创建Lightning效果."
category = TC_LIGHTNING
returns = lightning
[[.args]]
type = lightningtype
default = "LightningTypeCLPB"
[[.args]]
type = allowdontoption
default = "AllowDontDont"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[AddLightningEx]
title = "Create Lightning效果(指定Z轴) [R]"
description = "Create Lightning效果: ${Lightning效果} (${Boolean}检查可见性) 起始点:(${X},${Y},${Z}) 终结点:(${X},${Y},${Z})"
comment = "Create a Lightning效果. 允许检查可见性则在起始点和终结点都不可见时将不创建Lightning效果."
category = TC_LIGHTNING
returns = lightning
[[.args]]
type = lightningtype
default = "LightningTypeCLPB"
[[.args]]
type = allowdontoption
default = "AllowDontDont"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[GetSoundDurationBJ]
title = "Sound Length"
description = "Length of ${Sound}"
comment = "This returns the duration of a sound, in seconds."
category = TC_SOUND
returns = real
[[.args]]
type = sound
default = "GetLastPlayedSound"

[GetSoundFileDurationBJ]
title = "Music Length"
description = "Length of ${Music}"
comment = "This returns the duration of a music score, in seconds."
category = TC_SOUND
returns = real
[[.args]]
type = musicfile
default = "GetLastPlayedMusic"

[GetLastCreatedUnit]
title = "Last Created Unit"
description = "Last created unit"
comment = "This is the last unit created via a 'Unit - Create' trigger action."
category = TC_LAST
returns = unit

[GetLastRestoredUnitBJ]
title = "Last Restored Unit"
description = "Last restored unit"
comment = "This is the last unit restored via a 'Game Cache - Restore Unit' trigger action."
category = TC_LAST
returns = unit

[GetLastReplacedUnitBJ]
title = "Last Replaced Unit"
description = "Last replaced unit"
comment = "This is the last unit created via a 'Unit - Replace' trigger action."
category = TC_LAST
returns = unit

[GetLastHauntedGoldMine]
title = "Last Haunted Gold Mine"
description = "Last Haunted Gold Mine"
comment = "This is the last Haunted Gold Mine created via a 'Neutral Building - Haunt Gold Mine (Instantly)' trigger action."
category = TC_LAST
returns = unit

[YDWEGetLastUnitPool]
title = "Last Created 单位池 [YDWE]"
description = "Last Created 单位池"
comment = "该单位池必须是由YDWE提供的<创建单位池>动作生成，不然无法获取。"
category = TC_LAST
use_in_event = 0
returns = unitpool

[GetLastCreatedDestructable]
title = "Last Created Destructible"
description = "Last created destructible"
comment = "This is the last destructible created via a 'Destructible - Create' trigger action."
category = TC_LAST
returns = destructable

[GetLastCreatedItem]
title = "Last Created Item"
description = "Last created item"
comment = "This is the last item created via an 'Item - Create' or 'Hero - Create Item For Hero' trigger action."
category = TC_LAST
returns = item

[GetLastRemovedItem]
title = "Last Dropped Item"
description = "Last dropped item"
comment = "This is the last item dropped via a 'Hero - Drop Item' trigger action."
category = TC_LAST
returns = item

[GetLastMovedItemInItemSlot]
title = "最后在Item栏中移动的Item [YDWE]"
description = "最后在Item栏中移动的Item"
comment = "最后一个单位在Item栏中移动的Item"
category = TC_LAST
returns = item

[GetLastCombinedItem]
title = "最后被合成的Item [YDWE]"
description = "最后被合成的Item"
comment = "最后由Item合成系统合成的Item"
category = TC_LAST
returns = item

[GetLastCreatedGroup]
title = "Last Created Unit Group"
description = "Last created unit group"
comment = "This is the last set of units created via a 'Unit - Create' trigger action."
category = TC_LAST
returns = group

[GetLastCreatedFogModifier]
title = "Last Created Visibility Modifier"
description = "Last created visibility modifier"
comment = "This is the last visibility modifier created via a 'Visibility - Create Visibility Modifier' trigger action."
category = TC_LAST
returns = fogmodifier

[GetLastCreatedEffectBJ]
title = "Last Created Special Effect"
description = "Last created special effect"
comment =""
category = TC_LAST
returns = effect

[GetLastCreatedLightningBJ]
title = "Last Created Lightning Effect"
description = "Last created lightning effect"
comment =""
category = TC_LAST
use_in_event = 0
returns = lightning

[GetLastCreatedImage]
title = "Last Created Image"
description = "Last created image"
comment =""
category = TC_LAST
use_in_event = 0
returns = image

[GetLastCreatedUbersplat]
title = "Last Created Ubersplat"
description = "Last created ubersplat"
comment =""
category = TC_LAST
use_in_event = 0
returns = ubersplat

[GetLastCreatedWeatherEffect]
title = "Last Created Weather Effect"
description = "Last created weather effect"
comment = "This is the last weather effect created via an 'Environment - Create Weather Effect' trigger action."
category = TC_LAST
returns = weathereffect

[GetLastCreatedTerrainDeformation]
title = "Last Created Terrain Deformation"
description = "Last created terrain deformation"
comment = "This is the last terrain deformation created via any of the 'Environment - Create Terrain Deformation' trigger actions."
category = TC_LAST
use_in_event = 0
returns = terraindeformation

[GetLastPlayedSound]
title = "Last Played Sound"
description = "Last played sound"
comment = "This is the last sound played via a 'Sound - Play Sound' or 'Cinematic - Transmission' trigger action."
category = TC_LAST
returns = sound

[GetLastPlayedMusic]
title = "Last Played Music"
description = "Last played music"
comment = "This is the last music played via a 'Sound - Play Music' trigger action."
category = TC_LAST
returns = musicfile

[GetLastCreatedQuestBJ]
title = "Last Created Quest"
description = "Last created quest"
comment = "This is the last quest created via a 'Quest - Create Quest' trigger action."
category = TC_LAST
returns = quest

[GetLastCreatedQuestItemBJ]
title = "Last Created Quest Requirement"
description = "Last created quest requirement"
comment = "This is the last quest requirement created via a 'Quest - Create Quest Requirement' trigger action."
category = TC_LAST
returns = questitem

[GetLastCreatedDefeatConditionBJ]
title = "Last Created Defeat Condition"
description = "Last created defeat condition"
comment = "This is the last defeat condition created via a 'Quest - Create Defeat Condition' trigger action."
category = TC_LAST
returns = defeatcondition

[GetLastCreatedButtonBJ]
title = "Last Created Dialog Button"
description = "Last created dialog Button"
comment = "This is the last dialog button created via a 'Dialog - Create Dialog Button' trigger action."
category = TC_LAST
returns = button

[GetLastCreatedLeaderboard]
title = "Last Created Leaderboard"
description = "Last created leaderboard"
comment = "This is the last leaderboard created via a 'Leaderboard - Create Leaderboard' trigger action."
category = TC_LAST
returns = leaderboard

[GetLastCreatedMultiboard]
title = "Last Created Multiboard"
description = "Last created multiboard"
comment = "This is the last multiboard created via a 'Multiboard - Create Multiboard' trigger action."
category = TC_LAST
use_in_event = 0
returns = multiboard

[GetLastCreatedTimerBJ]
title = "Last Started Timer"
description = "Last started timer"
comment = "This is the last timer started via a 'Countdown Timer - Start Timer' trigger action."
category = TC_LAST
returns = timer

[GetLastCreatedTimerDialogBJ]
title = "Last Created Timer Window"
description = "Last created timer window"
comment = "This is the last timer window created via a 'Countdown Timer - Create Timer Window' trigger action."
category = TC_LAST
returns = timerdialog

[GetLastCreatedGameCacheBJ]
title = "Last Created Game Cache"
description = "Last created game cache"
comment = "This is the last game cache created via a 'Game Cache - Create Game Cache' trigger action."
category = TC_LAST
returns = gamecache

[GetLastCreatedHashtableBJ]
title = "Last Created Hashtable"
description = "Last created hashtable"
comment = "This is the last hashtable created via a 'Hashtable - Create Hashtable' trigger action."
category = TC_LAST
returns = hashtable

[LoadHashtableHandle]
title = "<1.24> 从哈希表提取哈希表 [C]"
description = "在 ${Hashtable} 的主索引 ${Value} 子索引 ${Value} 内提取哈希表"
comment = "如果不存在则返回空"
category = TC_LAST
returns = hashtable
[[.args]]
type = hashtable
default = "GetLastCreatedHashtableBJ"
[[.args]]
type = integer
[[.args]]
type = integer

[GetLastCreatedTextTag]
title = "Last Created Floating Text"
description = "Last created floating text"
comment = "This is the last floating text created via a 'Floating Text - Create Floating Text' trigger action."
category = TC_LAST
use_in_event = 0
returns = texttag

[YDWECinSActor]
title = "演员单位"
description = "电影系统里编号为(${Integer})的演员"
comment = "获取Script System电影系统中的演员单位。"
category = TC_SCRIPTSET
returns = unit
[[.args]]
type = integer
default = "1"
min = 1

[PlaceRandomUnit]
title = "选择放置单位 [R]"
description = "从 ${单位池} 中为 ${Player} 任意选择一个单位并放置到点( ${X} , ${Y}) 面向 ${度}"
comment = "从单位池中随机选取一个单位类型."
category = TC_UNITPOOL
returns = unit
[[.args]]
type = unitpool
[[.args]]
type = player
default = "Player00"
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"
[[.args]]
type = degree
default = "0"

[YDWEGetLastPoolAbstractedUnit]
title = "最后从单位池里取出的单位"
description = "最后从单位池里取出的单位"
comment = "该单位必须是由YDWE提供的<选择放置单位>动作生成，不然无法获取。"
category = TC_UNITPOOL
returns = unit

[PlaceRandomItem]
title = "选择放置Item [R]"
description = "从 ${Item Pool} 中任意选择一个Item并放置到( ${X} , ${Y})点"
comment = ""
category = TC_ITEMPOOL
returns = item
[[.args]]
type = itempool
[[.args]]
type = real
default = "0"
[[.args]]
type = real
default = "0"

[DialogCreate]
title = "Create Dialog [R]"
description = "Create Dialog"
comment = "创建新的Dialog."
category = TC_DIALOG
returns = dialog

[YDWEGetUnitID]
title = "Get 单位 的整数地址"
description = "Get ${Unit} 的整数地址"
comment = "可以把一个单位转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = unit
default = "GetTriggerUnit"

[YDWEGetPlayerID]
title = "Get Player 的整数地址"
description = "Get ${Player} 的整数地址"
comment = "可以把一个Player转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = player
default = "GetTriggerPlayer"

[YDWEGetItemID]
title = "Get Item 的整数地址"
description = "Get ${Item} 的整数地址"
comment = "可以把一个Item转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = item
default = "GetManipulatedItem"

[YDWEGetTimerID]
title = "Get Timer 的整数地址"
description = "Get ${Timer} 的整数地址"
comment = "可以把一个Timer转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = timer
default = "GetLastCreatedTimerBJ"

[YDWEGetTriggerID]
title = "Get Trigger 的整数地址"
description = "Get ${Trigger} 的整数地址"
comment = "可以把一个Trigger转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = trigger
default = "GetTriggeringTrigger"

[YDWEGetGroupID]
title = "Get Unit Group 的整数地址"
description = "Get ${Unit Group} 的整数地址"
comment = "可以把一个Unit Group转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = group
default = "GetLastCreatedGroup"

[YDWEGetLocationID]
title = "Get 点 的整数地址"
description = "Get ${点} 的整数地址"
comment = "可以把一个点转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = location

[YDWEGetUnitTypeID]
title = "Get 单位类型 的整数地址"
description = "Get ${单位类型} 的整数地址"
comment = "可以把一个单位类型转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = unitcode
default = "hfoo"

[YDWEGetAbilityTypeID]
title = "Get Ability类型 的整数地址"
description = "Get ${Ability类型} 的整数地址"
comment = "可以把一个Ability类型转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = abilcode
default = "Aloc"

[YDWEGetItemTypeID]
title = "Get Item Type 的整数地址"
description = "Get ${Item Type} 的整数地址"
comment = "可以把一个Item Type转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = itemcode
default = "spsh"

[YDWEGetMultiboardID]
title = "Get Multi Board 的整数地址"
description = "Get ${Multi Board} 的整数地址"
comment = "可以把一个Multi Board转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = multiboard
default = "GetLastCreatedMultiboard"

[YDWEGetMultiboardItemID]
title = "Get Multi Board Item 的整数地址"
description = "Get ${Multi Board Item} 的整数地址"
comment = "可以把一个Multi Board Item转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = multiboarditem

[YDWEGetTextTagID]
title = "Get Text Tag 的整数地址"
description = "Get ${Text Tag} 的整数地址"
comment = "可以把一个Text Tag转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = texttag
default = "GetLastCreatedTextTag"

[YDWEGetLightningID]
title = "Get Lightning 的整数地址"
description = "Get ${Lightning} 的整数地址"
comment = "可以把一个Lightning成转整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = lightning
default = "bj_lastCreatedLightning"

[YDWEGetRegionID]
title = "Get 区域 的整数地址"
description = "Get ${区域} 的整数地址"
comment = "可以把一个区域转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = region
default = "GetTriggeringRegion"

[YDWEGetRectID]
title = "Get 地区 的整数地址"
description = "Get ${地区} 的整数地址"
comment = "可以把一个地区转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = rect
default = "GetPlayableMapRect"

[YDWEGetLeaderboardID]
title = "Get Leaderboard 的整数地址"
description = "Get ${Leaderboard} 的整数地址"
comment = "可以把一个Leaderboard转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = leaderboard
default = "DestroyLeaderboard"

[YDWEGetEffectID]
title = "Get Effect 的整数地址"
description = "Get ${Effect} 的整数地址"
comment = "可以把一个Effect转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = effect
default = "GetLastCreatedEffectBJ"

[YDWEGetDestructableID]
title = "Get Destructable 的整数地址"
description = "Get ${Destructable} 的整数地址"
comment = "可以把一个Destructable转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = destructable
default = "GetLastCreatedDestructable"

[YDWEGetTriggerConditionID]
title = "Get Condition 的整数地址"
description = "Get ${Condition} 的整数地址"
comment = "可以把一个Condition转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = triggercondition

[YDWEGetTriggerActionID]
title = "Get Trigger Action 的整数地址"
description = "Get ${Trigger Action} 的整数地址"
comment = "可以把一个Trigger Action转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = triggeraction

[YDWEGetTriggerEventID]
title = "Get Event 的整数地址"
description = "Get ${Event} 的整数地址"
comment = "可以把一个Event转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = event

[YDWEGetForceID]
title = "Get Force 的整数地址"
description = "Get ${Force} 的整数地址"
comment = "可以把一个Force转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = force

[YDWEGetBoolexprID]
title = "Get Boolexpr 的整数地址"
description = "Get ${Boolexpr} 的整数地址"
comment = "可以把一个Boolexpr转成整数，方便存入缓存或Hash表。"
category = TC_YDID
returns = integer
[[.args]]
type = boolexpr

[GetStoredBooleanBJ]
title = "Load Boolean Value"
description = "Load ${Label} of ${Category} from ${Game Cache}"
comment = "If the label is not found, this function returns False."
category = TC_YDHIDE
returns = boolean
[[.args]]
type = string
[[.args]]
type = string
default = "\"Category\""
[[.args]]
type = gamecache
default = "GetLastCreatedGameCacheBJ"

[GetStoredIntegerBJ]
title = "Load Integer Value"
description = "Load ${Label} of ${Category} from ${Game Cache}"
comment = "If the label is not found, this function returns 0."
category = TC_YDHIDE
returns = integer
[[.args]]
type = string
[[.args]]
type = string
default = "\"Category\""
[[.args]]
type = gamecache
default = "GetLastCreatedGameCacheBJ"

[GetStoredRealBJ]
title = "Load Real Value"
description = "Load ${Label} of ${Category} from ${Game Cache}"
comment = "If the label is not found, this function returns 0."
category = TC_YDHIDE
returns = real
[[.args]]
type = string
[[.args]]
type = string
default = "\"Category\""
[[.args]]
type = gamecache
default = "GetLastCreatedGameCacheBJ"

[GetStoredStringBJ]
title = "Load String Value"
description = "Load ${Label} of ${Category} from ${Game Cache}"
comment = "If the label is not found, this function returns an empty string."
category = TC_YDHIDE
use_in_event = 0
returns = string
[[.args]]
type = string
[[.args]]
type = string
default = "\"Category\""
[[.args]]
type = gamecache
default = "GetLastCreatedGameCacheBJ"

[YDWEConvert]
title = "命令ID"
description = "${ID}"
comment = ""
category = TC_CONVERSION
returns = ordercode
[[.args]]
type = integer

[YDWEAbilityId2OrderId]
title = "Ability的命令ID"
description = "${Ability} 的 ${类型}"
comment = "AbilityID一定要用常量"
category = TC_CONVERSION
returns = ordercode
[[.args]]
type = abilcode
default = 'AHbz'
[[.args]]
type = OrderType
default = OrderTypeOrder

[YDWEUOrderId2OrderId]
title = "单位目标命令"
description = "${命令}"
comment = ""
category = TC_CONVERSION
returns = ordercode
[[.args]]
type = ordercodeutarg

[YDWEPOrderId2OrderId]
title = "点目标命令"
description = "${命令}"
comment = ""
category = TC_CONVERSION
returns = ordercode
[[.args]]
type = ordercodeptarg

[YDWEDOrderId2OrderId]
title = "Destructable目标命令"
description = "${命令}"
comment = ""
category = TC_CONVERSION
returns = ordercode
[[.args]]
type = ordercodedtarg

[YDWEIOrderId2OrderId]
title = "Item目标命令"
description = "${命令}"
comment = ""
category = TC_CONVERSION
returns = ordercode
[[.args]]
type = ordercodeitarg

[YDWENOrderId2OrderId]
title = "无目标命令"
description = "${命令}"
comment = ""
category = TC_CONVERSION
returns = ordercode
[[.args]]
type = ordercodenotarg
